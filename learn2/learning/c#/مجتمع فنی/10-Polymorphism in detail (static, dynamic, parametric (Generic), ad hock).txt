چند ریختی (Polymorphism)
 به معنای داشتن چندین شکل است. در برنامه نویسی شیء گرا، اغلب به عنوان یک اینترفیس و چندین تابع (one interface, multiple functions) بیان می شود. چند ریختی (Polymorphism) در زبان سی شارپ می تواند به صورت استاتیک و پویا باشد.

چند ریختی استاتیک
همون تعریف چند متد همنام با انواع پارامترهای مختلف است یعنی Overloading کردن متدها
private int func1(){......}
private int func1(int x){......}

چند ریختی پویا با abstract و Virtual
abstract 
انتزاع داده ها فرآیندی است برای پنهان کردن جزئیات خاص و نمایش تنها اطلاعات ضروری به کاربر.
انتزاع (Abstraction) را می توان با کلاسهای انتزاعی (abstract classes) یا رابط ها (interfaces) به دست آورد

کلاس Abstract،  نمی‌توان از آنها نمونه‌ای ساخت. یک کلاس Abstract  شبیه Interface میباشد ولی با دیدی وسیعتر. این کلاسها می‌تواند دارای متدهای Abstract باشند که شبیه Interface فقط اعلام میشوند و باید در کلاسهای مشتق شده بازنویسی شوند. البته میتوان در این کلاسها متدهایی داشت که Abstract نیستند و احتیاجی به پیاده سازی آنها در کلاسهای مشتق شده ندارند

مراجعه شود به پروژه Polymorphism_WinFormsApp_Net---------------------------------------

تفاوت بین کلاسهای  Abstract  و  Interface
1- یک کلاس معمولی تنها می‌تواند از یک کلاس Abstract ارث بری کند ولی همان کلاس میتواند از چندین Interface ارث ببرد.
2- یک Interface  فقط میتواند اعلان متدها و خصوصیتها را داشته باشد؛ اما یک کلاس Abstract  علاوه بر آنها میتوانید متدها و خصوصیتهایی با کدهای کامل داشته باشد.
3- عناصر موجود در کلاس Abstract میتوانند مانند یک کلاس معمولی دارای سطح دسترسی باشند؛ ولی Interface‌ها فاقد این امکان هستند.
4- وقتی شما متدی را به کلاس Abstract اضافه می‌کنید، به طور خودکار به همه زیر کلاسها اعمال می‌شود؛ اما در Interface اگر متدی اضافه کنید باید در تمام زیر کلاسها آن را اعمال کنید .
5- کلاس‌های Abstract مانند کلاسهای معمولی می‌توانند دارای فیلد و عناصر دیگری (مثل ثابت‌ها) باشند؛ در حالیکه یک Interface فاقد این امکان می‌باشد. همچنین کلاس abstract میتواند شامل سازنده باشد، اما اینترفیس نمیتواند.
6- Abstract  یکی از انواع کلاس است؛ ولی Interface کلاس نیست .
7- اینترفیس تنها میتواند از اینترفیس ارث بری کند اما کلاس abstract میتواند از اینترفیس، کلاس Abstract و یا سایر کلاس‌ها ارث بری کند

متدهای Virtual
 زمانی که بخواهید رفتار یک تابع تعریف شده در کلاس پدر را در کلاس فرزند تغییر دهید، باید آن را به صورت virtual یا مجازی تعریف کنید. توابع virtual می توانند در کلاس های مختلف، پیاده سازی های مختلفی داشته باشند. چند ریختی پویا با استفاده از کلاس های abstract و توابع virtual پیاده سازی می شود.

sealed
2 تا کاربد دارد. اگر کلاس seal باشد نمی توان از آن ارث برد
اگر متد seal باشد نمیتوان آنرا override  کرد

Generic Class
کلاس هایی هستند که نوع داده آن ها مشخص و از پیش تعریف شده نیستند و در زمان استفاده از آن ها تعیین می شوند.
مزایای  Generics :
قابلیت استفاده مجدد کد را افزایش می دهد.
Generic یک مزیت عملکردی دارد زیرا امکانات boxing و unboxing را از بین می برد.

مراجعه شود به پروژه Polymorphism_WinFormsApp_Net---------------------------------------


