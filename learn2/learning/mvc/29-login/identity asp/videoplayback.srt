1
00:00:00,000 --> 00:00:02,000
welcome to this complete guide to

2
00:00:02,000 --> 00:00:04,799
asp.net core identity course in the

3
00:00:04,799 --> 00:00:06,480
first section we're going to look under

4
00:00:06,480 --> 00:00:09,519
the hood of asp.net core authentication

5
00:00:09,519 --> 00:00:12,320
and authorization without using identity

6
00:00:12,320 --> 00:00:14,080
so that we can have a complete

7
00:00:14,080 --> 00:00:16,480
understanding of how expedient court

8
00:00:16,480 --> 00:00:19,359
identity works and what are the purpose

9
00:00:19,359 --> 00:00:20,800
of those

10
00:00:20,800 --> 00:00:22,480
objects that we're going to use in

11
00:00:22,480 --> 00:00:24,800
asp.net core identity and what are the

12
00:00:24,800 --> 00:00:27,279
purposes and how they achieve what they

13
00:00:27,279 --> 00:00:28,400
achieve

14
00:00:28,400 --> 00:00:30,080
right so this is really the under the

15
00:00:30,080 --> 00:00:33,600
hood section we're gonna learn about uh

16
00:00:33,600 --> 00:00:36,320
security in general right and then

17
00:00:36,320 --> 00:00:39,200
authentication authorization flows uh

18
00:00:39,200 --> 00:00:40,960
we're gonna learn about what are

19
00:00:40,960 --> 00:00:43,920
identities what are principles right

20
00:00:43,920 --> 00:00:46,719
what are what is security contacts and

21
00:00:46,719 --> 00:00:49,440
then we're going to start implement

22
00:00:49,440 --> 00:00:52,320
a login page we're going to generate

23
00:00:52,320 --> 00:00:54,719
cookies to sustain

24
00:00:54,719 --> 00:00:57,760
and remember who the user is right

25
00:00:57,760 --> 00:01:00,079
remember those identities and then we're

26
00:01:00,079 --> 00:01:02,719
going to read the security context from

27
00:01:02,719 --> 00:01:04,479
the cookie and then we're going to learn

28
00:01:04,479 --> 00:01:07,280
about how authorization works in the sp9

29
00:01:07,280 --> 00:01:08,080
core

30
00:01:08,080 --> 00:01:08,880
and

31
00:01:08,880 --> 00:01:10,960
we're going to create policies with

32
00:01:10,960 --> 00:01:13,760
claims we're going to also implement a

33
00:01:13,760 --> 00:01:16,320
custom policy based authorization

34
00:01:16,320 --> 00:01:18,799
scenario which we can use to cover

35
00:01:18,799 --> 00:01:20,880
complicated cases

36
00:01:20,880 --> 00:01:23,680
so after we understand how exactly

37
00:01:23,680 --> 00:01:25,360
authentication authorization works in

38
00:01:25,360 --> 00:01:28,159
asp.net core for web applications

39
00:01:28,159 --> 00:01:29,759
in second section

40
00:01:29,759 --> 00:01:33,200
we are moving on to securing web apis

41
00:01:33,200 --> 00:01:35,920
web apis instead of using cookie

42
00:01:35,920 --> 00:01:38,880
typically we use tokens so in this

43
00:01:38,880 --> 00:01:40,400
section we're going to learn about

44
00:01:40,400 --> 00:01:43,200
jwt tokens we're going to implement the

45
00:01:43,200 --> 00:01:46,159
jwt token authentication and we're going

46
00:01:46,159 --> 00:01:50,000
to learn how to encapsulate claims in jw

47
00:01:50,000 --> 00:01:52,240
token we're going to implement the whole

48
00:01:52,240 --> 00:01:54,079
jet lab token authentication and

49
00:01:54,079 --> 00:01:56,079
authorization flows

50
00:01:56,079 --> 00:01:58,880
and then we are going to also implement

51
00:01:58,880 --> 00:02:00,799
authorizations

52
00:02:00,799 --> 00:02:03,200
with gw tokens

53
00:02:03,200 --> 00:02:05,200
in the third section this is when we

54
00:02:05,200 --> 00:02:07,840
really get into espinona core identity

55
00:02:07,840 --> 00:02:09,919
but with the complete understanding of

56
00:02:09,919 --> 00:02:12,160
how asp.net core authentication

57
00:02:12,160 --> 00:02:13,920
authorization works

58
00:02:13,920 --> 00:02:16,400
it's very easy to understand how

59
00:02:16,400 --> 00:02:18,160
experiment core identity works right

60
00:02:18,160 --> 00:02:19,520
we're going to learn about the essential

61
00:02:19,520 --> 00:02:21,520
parts of the identities we're going to

62
00:02:21,520 --> 00:02:23,680
learn about what problem identity

63
00:02:23,680 --> 00:02:24,640
actually

64
00:02:24,640 --> 00:02:27,120
resolves uh what's the knowledge that we

65
00:02:27,120 --> 00:02:28,959
have learned so far and then we're going

66
00:02:28,959 --> 00:02:32,000
to configure uh expedient core identity

67
00:02:32,000 --> 00:02:34,879
and we started code with asp.net core

68
00:02:34,879 --> 00:02:37,760
identity to cover typical scenarios like

69
00:02:37,760 --> 00:02:40,800
user registration user logging

70
00:02:40,800 --> 00:02:42,400
email confirmation

71
00:02:42,400 --> 00:02:44,800
signing in signing out collecting user

72
00:02:44,800 --> 00:02:46,080
information

73
00:02:46,080 --> 00:02:48,239
learn about rows as well as we're going

74
00:02:48,239 --> 00:02:50,720
to create user profile pages and be able

75
00:02:50,720 --> 00:02:54,080
to update user information and then in

76
00:02:54,080 --> 00:02:56,160
the fourth section we're going to learn

77
00:02:56,160 --> 00:02:59,599
about mfa we say spinner core identity

78
00:02:59,599 --> 00:03:02,239
so mfa stands for multi-factor

79
00:03:02,239 --> 00:03:03,760
authentication all right we're going to

80
00:03:03,760 --> 00:03:05,760
learn about how it works and then we're

81
00:03:05,760 --> 00:03:08,159
going to start implementing uh with

82
00:03:08,159 --> 00:03:11,040
email multi-factor authentications and

83
00:03:11,040 --> 00:03:13,840
then moving on to authenticator app

84
00:03:13,840 --> 00:03:16,000
multi-factor authentication

85
00:03:16,000 --> 00:03:18,720
all right and finally last but not least

86
00:03:18,720 --> 00:03:19,920
we're going to learn about external

87
00:03:19,920 --> 00:03:21,680
authentication providers i'm going to

88
00:03:21,680 --> 00:03:25,120
use facebook as an example

89
00:03:25,120 --> 00:03:27,840
we learn about how oauth works in

90
00:03:27,840 --> 00:03:29,840
general because multi-factor

91
00:03:29,840 --> 00:03:31,200
authentication

92
00:03:31,200 --> 00:03:33,280
usually depends on us

93
00:03:33,280 --> 00:03:34,959
right and then we're gonna create a

94
00:03:34,959 --> 00:03:36,480
facebook application and then we're

95
00:03:36,480 --> 00:03:38,560
gonna link our web application to

96
00:03:38,560 --> 00:03:40,560
facebook and we're gonna start

97
00:03:40,560 --> 00:03:43,599
implementing the delegation to facebook

98
00:03:43,599 --> 00:03:46,720
so that we can complete our course

99
00:03:46,720 --> 00:03:49,120
this course is definitely not just a

100
00:03:49,120 --> 00:03:50,560
theory course

101
00:03:50,560 --> 00:03:52,799
it contains a lot of practice a lot of

102
00:03:52,799 --> 00:03:54,000
coding

103
00:03:54,000 --> 00:03:55,680
by the end of the course

104
00:03:55,680 --> 00:03:57,840
you will be able to understand how

105
00:03:57,840 --> 00:04:00,560
exactly a speed and a core then it works

106
00:04:00,560 --> 00:04:03,439
what problem it resolves and you will be

107
00:04:03,439 --> 00:04:06,720
able to use every single part of asp.net

108
00:04:06,720 --> 00:04:09,200
core identity to secure your web

109
00:04:09,200 --> 00:04:12,480
applications to secure your web apis

110
00:04:12,480 --> 00:04:15,040
please feel free to look into the course

111
00:04:15,040 --> 00:04:17,199
and watch all of those free preview

112
00:04:17,199 --> 00:04:20,000
videos i'm very excited to see you in my

113
00:04:20,000 --> 00:04:20,959
course

114
00:04:20,959 --> 00:04:23,520
in this video we're going to learn about

115
00:04:23,520 --> 00:04:26,160
security on a high level so that you

116
00:04:26,160 --> 00:04:28,639
have a very solid understanding of what

117
00:04:28,639 --> 00:04:30,400
security really is

118
00:04:30,400 --> 00:04:32,720
what are the the key concepts in

119
00:04:32,720 --> 00:04:34,639
security including

120
00:04:34,639 --> 00:04:37,040
the security context authentication and

121
00:04:37,040 --> 00:04:38,400
authorization

122
00:04:38,400 --> 00:04:40,720
let's imagine there's a military base

123
00:04:40,720 --> 00:04:42,720
right there's a security guard and this

124
00:04:42,720 --> 00:04:46,160
is you trying to get into the uh the

125
00:04:46,160 --> 00:04:47,360
yard

126
00:04:47,360 --> 00:04:50,000
okay so you go here and the security

127
00:04:50,000 --> 00:04:53,199
guard will ask you to show your identity

128
00:04:53,199 --> 00:04:56,400
right you cannot just say who i am

129
00:04:56,400 --> 00:04:58,880
the person will not believe you so you

130
00:04:58,880 --> 00:05:01,600
have to show your secu your identity

131
00:05:01,600 --> 00:05:04,960
card that will actually make sense to

132
00:05:04,960 --> 00:05:07,759
your to the security guard right

133
00:05:07,759 --> 00:05:10,400
every person have many different type of

134
00:05:10,400 --> 00:05:12,320
identities you can have your driver's

135
00:05:12,320 --> 00:05:14,000
license you can have a student card you

136
00:05:14,000 --> 00:05:16,160
can have an employee card but in this

137
00:05:16,160 --> 00:05:17,360
case

138
00:05:17,360 --> 00:05:19,840
you may have to show your identities

139
00:05:19,840 --> 00:05:21,039
that is

140
00:05:21,039 --> 00:05:22,720
provided to you

141
00:05:22,720 --> 00:05:26,560
by the military base or by the military

142
00:05:26,560 --> 00:05:30,639
units right so once verified that your

143
00:05:30,639 --> 00:05:34,000
identity information is valid basically

144
00:05:34,000 --> 00:05:38,240
verify that you are who you say you are

145
00:05:38,240 --> 00:05:41,039
then most likely the security guard will

146
00:05:41,039 --> 00:05:45,840
give you a access card so let's use this

147
00:05:45,840 --> 00:05:48,400
as an example let's say this is access

148
00:05:48,400 --> 00:05:51,360
card so you will have a access heart in

149
00:05:51,360 --> 00:05:52,400
your hand

150
00:05:52,400 --> 00:05:54,639
so let's combine this together right so

151
00:05:54,639 --> 00:05:57,440
you now have a access card and this

152
00:05:57,440 --> 00:06:00,400
access card contains again your identity

153
00:06:00,400 --> 00:06:03,360
informations as well as some of the

154
00:06:03,360 --> 00:06:05,280
other information may be including

155
00:06:05,280 --> 00:06:08,319
expiry date right so you may only have

156
00:06:08,319 --> 00:06:09,840
access to this

157
00:06:09,840 --> 00:06:12,319
military base

158
00:06:12,319 --> 00:06:15,280
for a limited period of time

159
00:06:15,280 --> 00:06:18,319
so then you go into the gate

160
00:06:18,319 --> 00:06:19,360
now

161
00:06:19,360 --> 00:06:21,919
if you want to go into any of the

162
00:06:21,919 --> 00:06:23,759
buildings

163
00:06:23,759 --> 00:06:25,919
you cannot just walk in and we'll check

164
00:06:25,919 --> 00:06:27,360
your

165
00:06:27,360 --> 00:06:30,319
internal identity card this card that

166
00:06:30,319 --> 00:06:33,919
just was given to you to verify that you

167
00:06:33,919 --> 00:06:37,120
have the permission to go into each one

168
00:06:37,120 --> 00:06:38,639
of these buildings

169
00:06:38,639 --> 00:06:40,639
right because each different building

170
00:06:40,639 --> 00:06:42,560
may have different requirements you have

171
00:06:42,560 --> 00:06:46,319
to be perhaps above a certain rank or

172
00:06:46,319 --> 00:06:49,280
you have to be one of the managers of

173
00:06:49,280 --> 00:06:50,800
this building

174
00:06:50,800 --> 00:06:53,520
then it will allow you to go in and when

175
00:06:53,520 --> 00:06:54,400
the

176
00:06:54,400 --> 00:06:57,520
access card expires you would have to

177
00:06:57,520 --> 00:07:00,400
go out of this facility

178
00:07:00,400 --> 00:07:02,880
right well you have to return your card

179
00:07:02,880 --> 00:07:05,440
so within this process

180
00:07:05,440 --> 00:07:06,800
we have

181
00:07:06,800 --> 00:07:07,680
uh

182
00:07:07,680 --> 00:07:10,400
three concepts here so the first process

183
00:07:10,400 --> 00:07:12,319
here is that when the security guard

184
00:07:12,319 --> 00:07:14,560
verifies your identity

185
00:07:14,560 --> 00:07:17,680
and give you an internal access card

186
00:07:17,680 --> 00:07:19,360
this is

187
00:07:19,360 --> 00:07:22,560
a process of authentication right to

188
00:07:22,560 --> 00:07:24,560
verify that you

189
00:07:24,560 --> 00:07:26,560
are who you say you are

190
00:07:26,560 --> 00:07:28,240
right and then

191
00:07:28,240 --> 00:07:30,800
provide you with this internal access

192
00:07:30,800 --> 00:07:33,759
card and this internal access card

193
00:07:33,759 --> 00:07:36,800
is what we call the security context

194
00:07:36,800 --> 00:07:38,800
right the security context that contains

195
00:07:38,800 --> 00:07:41,280
all of the information about you

196
00:07:41,280 --> 00:07:43,199
so that when you carry the security

197
00:07:43,199 --> 00:07:44,400
contacts

198
00:07:44,400 --> 00:07:46,400
to any of these

199
00:07:46,400 --> 00:07:47,759
buildings

200
00:07:47,759 --> 00:07:51,440
it will then apply certain requirements

201
00:07:51,440 --> 00:07:54,000
to your security context right verify

202
00:07:54,000 --> 00:07:56,560
that your security contact contains

203
00:07:56,560 --> 00:07:57,599
enough

204
00:07:57,599 --> 00:07:58,800
permissions

205
00:07:58,800 --> 00:08:01,759
to satisfy the requirements to enter the

206
00:08:01,759 --> 00:08:03,039
building

207
00:08:03,039 --> 00:08:06,080
okay so in this process is called

208
00:08:06,080 --> 00:08:09,280
authorization right authorization is the

209
00:08:09,280 --> 00:08:13,360
process of verifying that your

210
00:08:13,360 --> 00:08:16,240
identities are

211
00:08:16,240 --> 00:08:19,199
satisfying the requirements of entering

212
00:08:19,199 --> 00:08:21,599
or accessing the

213
00:08:21,599 --> 00:08:24,479
building and similarly in a web

214
00:08:24,479 --> 00:08:26,319
application imagine these sort of

215
00:08:26,319 --> 00:08:28,479
different pages and you have this login

216
00:08:28,479 --> 00:08:31,039
page here that is trying to

217
00:08:31,039 --> 00:08:33,599
like the security guard is asking you to

218
00:08:33,599 --> 00:08:37,519
log in right the process of logging in

219
00:08:37,519 --> 00:08:40,159
which is providing the username password

220
00:08:40,159 --> 00:08:42,640
and verify the username and password

221
00:08:42,640 --> 00:08:45,200
and that is called authentication right

222
00:08:45,200 --> 00:08:46,080
and

223
00:08:46,080 --> 00:08:48,640
authentication also provides you the

224
00:08:48,640 --> 00:08:50,560
security context

225
00:08:50,560 --> 00:08:51,920
right

226
00:08:51,920 --> 00:08:54,399
if it's cookie authentication then it

227
00:08:54,399 --> 00:08:56,560
generates the cookie

228
00:08:56,560 --> 00:08:59,120
right and if it's token authentication

229
00:08:59,120 --> 00:09:01,200
then it generates the token so you have

230
00:09:01,200 --> 00:09:03,120
the cookie either the cookie or the

231
00:09:03,120 --> 00:09:05,360
token or something else that contains

232
00:09:05,360 --> 00:09:08,320
your security context and then the

233
00:09:08,320 --> 00:09:10,880
subsequent

234
00:09:10,880 --> 00:09:13,600
request going into the page different

235
00:09:13,600 --> 00:09:15,760
pages will carry

236
00:09:15,760 --> 00:09:16,959
the

237
00:09:16,959 --> 00:09:18,880
security context

238
00:09:18,880 --> 00:09:22,000
either cookie or token earnteal that

239
00:09:22,000 --> 00:09:24,000
security context expires and then it

240
00:09:24,000 --> 00:09:26,720
will lose your

241
00:09:26,720 --> 00:09:30,000
access to the entire web application

242
00:09:30,000 --> 00:09:31,279
right and

243
00:09:31,279 --> 00:09:33,760
when you access each one of these pages

244
00:09:33,760 --> 00:09:35,920
each page may have different

245
00:09:35,920 --> 00:09:39,120
requirements right so and that's the

246
00:09:39,120 --> 00:09:41,440
authorization comes in right the

247
00:09:41,440 --> 00:09:46,080
authorization process will look at your

248
00:09:46,080 --> 00:09:47,600
security context

249
00:09:47,600 --> 00:09:50,000
and then applies those requirements

250
00:09:50,000 --> 00:09:52,080
toward that security context to see

251
00:09:52,080 --> 00:09:54,959
whether your security contacts actually

252
00:09:54,959 --> 00:09:57,440
satisfies the requirements of accessing

253
00:09:57,440 --> 00:09:59,120
the page

254
00:09:59,120 --> 00:10:01,200
if it does then it will allow you to

255
00:10:01,200 --> 00:10:04,160
access the page if not then it will

256
00:10:04,160 --> 00:10:05,200
return

257
00:10:05,200 --> 00:10:10,160
http 403 era to indicate that although

258
00:10:10,160 --> 00:10:12,959
you have logged in but you don't have

259
00:10:12,959 --> 00:10:14,800
access to this page

260
00:10:14,800 --> 00:10:16,959
right and if you cannot

261
00:10:16,959 --> 00:10:19,120
even log in then will actually return

262
00:10:19,120 --> 00:10:23,760
http 401 saying you're not authenticated

263
00:10:23,760 --> 00:10:26,000
in the previous video i covered

264
00:10:26,000 --> 00:10:28,640
a little bit about security in web

265
00:10:28,640 --> 00:10:30,000
application

266
00:10:30,000 --> 00:10:32,480
in this video i want to cover still on

267
00:10:32,480 --> 00:10:34,000
high level but

268
00:10:34,000 --> 00:10:35,680
i want to provide a little bit more

269
00:10:35,680 --> 00:10:38,320
detail in terms of the flow

270
00:10:38,320 --> 00:10:39,440
so

271
00:10:39,440 --> 00:10:41,920
if we have a user here

272
00:10:41,920 --> 00:10:44,640
trying to access a web page right let's

273
00:10:44,640 --> 00:10:46,560
imagine this login page is already

274
00:10:46,560 --> 00:10:48,160
loaded because

275
00:10:48,160 --> 00:10:51,360
the the user wants to access some

276
00:10:51,360 --> 00:10:54,959
information that requires uh login right

277
00:10:54,959 --> 00:10:58,079
so the user would interact with this

278
00:10:58,079 --> 00:11:01,360
browser to enter the the credentials

279
00:11:01,360 --> 00:11:04,160
right so once the credential is entered

280
00:11:04,160 --> 00:11:07,200
a http request and then it's sent to the

281
00:11:07,200 --> 00:11:09,839
uh to the server right so let's use this

282
00:11:09,839 --> 00:11:10,959
arrow to

283
00:11:10,959 --> 00:11:13,120
represent the http request that is sent

284
00:11:13,120 --> 00:11:15,519
to the server when the server receives

285
00:11:15,519 --> 00:11:18,399
the credentials from the http request

286
00:11:18,399 --> 00:11:21,040
body it's going to then

287
00:11:21,040 --> 00:11:24,959
verify against a user store to make sure

288
00:11:24,959 --> 00:11:26,959
the credentials are

289
00:11:26,959 --> 00:11:31,040
correct why do i draw a database symbol

290
00:11:31,040 --> 00:11:33,440
here that's because the user information

291
00:11:33,440 --> 00:11:36,560
is stored usually in the data store

292
00:11:36,560 --> 00:11:38,160
right so

293
00:11:38,160 --> 00:11:40,240
the credentials need to be verified

294
00:11:40,240 --> 00:11:43,279
against the user's data store

295
00:11:43,279 --> 00:11:46,240
right so this part this step will happen

296
00:11:46,240 --> 00:11:48,880
and if the verification is

297
00:11:48,880 --> 00:11:50,880
completed correctly

298
00:11:50,880 --> 00:11:53,839
that means the credentials are correct

299
00:11:53,839 --> 00:11:56,480
the identity will come back the identity

300
00:11:56,480 --> 00:11:59,920
information will be used to generate the

301
00:11:59,920 --> 00:12:04,079
security context so let's use this

302
00:12:04,079 --> 00:12:06,880
rectangle to represent

303
00:12:06,880 --> 00:12:10,399
this verification process verify

304
00:12:10,399 --> 00:12:11,920
credentials

305
00:12:11,920 --> 00:12:14,480
and then we're going to use this second

306
00:12:14,480 --> 00:12:17,600
rectangle to represent the process of

307
00:12:17,600 --> 00:12:19,760
generating the

308
00:12:19,760 --> 00:12:21,120
security

309
00:12:21,120 --> 00:12:22,480
context

310
00:12:22,480 --> 00:12:24,399
so after the verification

311
00:12:24,399 --> 00:12:27,519
the identities will be pulled into

312
00:12:27,519 --> 00:12:29,760
the web server and

313
00:12:29,760 --> 00:12:31,760
store those identities in the security

314
00:12:31,760 --> 00:12:34,720
context and then serialize that into a

315
00:12:34,720 --> 00:12:35,920
cookie

316
00:12:35,920 --> 00:12:37,760
if you're not very familiar with the

317
00:12:37,760 --> 00:12:39,440
concept of cookie

318
00:12:39,440 --> 00:12:41,120
i just want to add a little bit

319
00:12:41,120 --> 00:12:43,440
information here a cookie can

320
00:12:43,440 --> 00:12:45,760
be considered as a piece of information

321
00:12:45,760 --> 00:12:49,040
that is stored in the header of the http

322
00:12:49,040 --> 00:12:52,800
request and http response right that

323
00:12:52,800 --> 00:12:55,920
information is going to be

324
00:12:55,920 --> 00:12:58,480
carried back and forth

325
00:12:58,480 --> 00:13:01,440
between the browser and the web server

326
00:13:01,440 --> 00:13:04,000
and there is a feature with this piece

327
00:13:04,000 --> 00:13:05,839
of information because in the header you

328
00:13:05,839 --> 00:13:08,240
can contain lots of information

329
00:13:08,240 --> 00:13:10,880
but the cookie is a special type of

330
00:13:10,880 --> 00:13:13,279
information because it can only be

331
00:13:13,279 --> 00:13:15,519
shared within the same

332
00:13:15,519 --> 00:13:16,880
domain

333
00:13:16,880 --> 00:13:18,959
right you cannot

334
00:13:18,959 --> 00:13:22,079
send a request to a different web server

335
00:13:22,079 --> 00:13:24,720
that carries the same cookie because

336
00:13:24,720 --> 00:13:27,920
because there is a security problem all

337
00:13:27,920 --> 00:13:29,519
right let's go back to this

338
00:13:29,519 --> 00:13:32,000
authentication and authorization flow so

339
00:13:32,000 --> 00:13:33,839
let's imagine this is a cookie a normal

340
00:13:33,839 --> 00:13:35,279
cookie authentication which is very

341
00:13:35,279 --> 00:13:36,959
suitable for this

342
00:13:36,959 --> 00:13:38,560
web application

343
00:13:38,560 --> 00:13:41,040
right so then this

344
00:13:41,040 --> 00:13:42,320
uh

345
00:13:42,320 --> 00:13:45,279
serialized cookie will be containing the

346
00:13:45,279 --> 00:13:49,199
http response and then will be returned

347
00:13:49,199 --> 00:13:50,000
back

348
00:13:50,000 --> 00:13:51,839
to the

349
00:13:51,839 --> 00:13:55,440
to the browser the browser will then

350
00:13:55,440 --> 00:13:58,480
redirect the user to

351
00:13:58,480 --> 00:14:01,360
a different page

352
00:14:01,360 --> 00:14:04,160
right and including that redirection

353
00:14:04,160 --> 00:14:07,040
every single subsequent

354
00:14:07,040 --> 00:14:10,480
http request will contain that cookie

355
00:14:10,480 --> 00:14:11,920
right so let's

356
00:14:11,920 --> 00:14:12,800
uh

357
00:14:12,800 --> 00:14:14,720
use another

358
00:14:14,720 --> 00:14:15,760
arrow

359
00:14:15,760 --> 00:14:18,959
to represent one of the subsequent

360
00:14:18,959 --> 00:14:21,440
requests and then this

361
00:14:21,440 --> 00:14:23,440
rectangle

362
00:14:23,440 --> 00:14:25,120
will represent

363
00:14:25,120 --> 00:14:25,839
the

364
00:14:25,839 --> 00:14:29,519
authentication process so you may ask

365
00:14:29,519 --> 00:14:31,760
why this is authentication where this is

366
00:14:31,760 --> 00:14:34,399
already the verification process is

367
00:14:34,399 --> 00:14:37,760
already authentication right so yes

368
00:14:37,760 --> 00:14:39,199
this part

369
00:14:39,199 --> 00:14:41,120
this whole part here

370
00:14:41,120 --> 00:14:44,240
the both of the these rectangles are

371
00:14:44,240 --> 00:14:47,360
part of authentication right

372
00:14:47,360 --> 00:14:50,560
to verify the user is who they say they

373
00:14:50,560 --> 00:14:52,560
are and then generate the security

374
00:14:52,560 --> 00:14:53,760
context

375
00:14:53,760 --> 00:14:56,320
serialize that into a cookie sends that

376
00:14:56,320 --> 00:14:58,480
back to the browser so this is all

377
00:14:58,480 --> 00:15:01,040
authentication process why would we have

378
00:15:01,040 --> 00:15:03,519
this authentication process again well

379
00:15:03,519 --> 00:15:06,720
here we have it in the cookie

380
00:15:06,720 --> 00:15:08,240
right we have the security context in

381
00:15:08,240 --> 00:15:09,279
the cookie

382
00:15:09,279 --> 00:15:10,800
the the web server will have to

383
00:15:10,800 --> 00:15:12,720
deserialize that into the security

384
00:15:12,720 --> 00:15:14,959
context and then

385
00:15:14,959 --> 00:15:16,560
the the web server

386
00:15:16,560 --> 00:15:18,800
will actually know whether the user is

387
00:15:18,800 --> 00:15:21,040
is actually logged in or not right so

388
00:15:21,040 --> 00:15:23,680
this part of deserializing

389
00:15:23,680 --> 00:15:26,639
the security context from the cookie

390
00:15:26,639 --> 00:15:30,000
is also part of authentication right so

391
00:15:30,000 --> 00:15:32,240
so basically in one statement

392
00:15:32,240 --> 00:15:34,720
authentication is the process to know

393
00:15:34,720 --> 00:15:36,160
who you are

394
00:15:36,160 --> 00:15:37,519
okay so

395
00:15:37,519 --> 00:15:39,759
because these security contexts already

396
00:15:39,759 --> 00:15:42,079
stored in the cookie so

397
00:15:42,079 --> 00:15:44,560
in order to know at this step in order

398
00:15:44,560 --> 00:15:47,040
to know who you are it only needs to

399
00:15:47,040 --> 00:15:49,040
decrypt that cookie and deserialize that

400
00:15:49,040 --> 00:15:50,000
cookie

401
00:15:50,000 --> 00:15:52,480
because the cookie is encrypted

402
00:15:52,480 --> 00:15:55,519
so once those happens immediately we

403
00:15:55,519 --> 00:15:58,399
know whether the user is authenticated

404
00:15:58,399 --> 00:16:00,079
or not

405
00:16:00,079 --> 00:16:02,639
so this is still the authentication

406
00:16:02,639 --> 00:16:05,600
process where we decrypt the cookie we

407
00:16:05,600 --> 00:16:07,199
deserialize the cookie to get the

408
00:16:07,199 --> 00:16:11,120
security context and then once we have

409
00:16:11,120 --> 00:16:13,040
the security context

410
00:16:13,040 --> 00:16:15,600
which is actually contained in the http

411
00:16:15,600 --> 00:16:18,079
context object right once we have that

412
00:16:18,079 --> 00:16:20,560
information then we can tell whether the

413
00:16:20,560 --> 00:16:22,800
user is

414
00:16:22,800 --> 00:16:26,240
authorized to access the information

415
00:16:26,240 --> 00:16:28,880
where the page it wants to see right so

416
00:16:28,880 --> 00:16:30,639
that's the second step which is

417
00:16:30,639 --> 00:16:33,440
authorized authorization

418
00:16:33,440 --> 00:16:36,399
okay so authorization will happen right

419
00:16:36,399 --> 00:16:38,000
afterwards

420
00:16:38,000 --> 00:16:40,240
and then and then if everything is okay

421
00:16:40,240 --> 00:16:42,880
then the web server will decide to

422
00:16:42,880 --> 00:16:43,839
return

423
00:16:43,839 --> 00:16:46,639
the proper response that contains the

424
00:16:46,639 --> 00:16:49,440
html and all of the data that the user

425
00:16:49,440 --> 00:16:50,720
requires

426
00:16:50,720 --> 00:16:53,199
from this video i wanted to show you

427
00:16:53,199 --> 00:16:54,160
that

428
00:16:54,160 --> 00:16:57,279
both these steps as well as these

429
00:16:57,279 --> 00:16:59,120
are

430
00:16:59,120 --> 00:17:01,279
part of authentication and then the

431
00:17:01,279 --> 00:17:04,559
authorization process is relatively

432
00:17:04,559 --> 00:17:08,160
simpler from at least conceptual level

433
00:17:08,160 --> 00:17:09,839
in this video i want to quickly cover

434
00:17:09,839 --> 00:17:12,640
the basics of asp.net core including the

435
00:17:12,640 --> 00:17:14,559
middle wire pipeline and the filter

436
00:17:14,559 --> 00:17:16,799
pipeline

437
00:17:16,799 --> 00:17:18,880
i would expect you

438
00:17:18,880 --> 00:17:21,280
have experiences with asp.net core

439
00:17:21,280 --> 00:17:23,679
already but i still want to

440
00:17:23,679 --> 00:17:25,359
uh quickly cover

441
00:17:25,359 --> 00:17:28,319
the the basics just in case you need a

442
00:17:28,319 --> 00:17:31,520
recap so asp.net core is is a platform

443
00:17:31,520 --> 00:17:34,559
for creating web applications that

444
00:17:34,559 --> 00:17:37,120
includes uh web apis as well

445
00:17:37,120 --> 00:17:40,160
so web applications are based on http

446
00:17:40,160 --> 00:17:43,760
request right so you would have uh your

447
00:17:43,760 --> 00:17:46,160
front end and your back-end right so you

448
00:17:46,160 --> 00:17:47,679
have your front-end browser and your

449
00:17:47,679 --> 00:17:50,000
back-end server so the front-end browser

450
00:17:50,000 --> 00:17:52,240
and the back-end server is sending http

451
00:17:52,240 --> 00:17:54,880
request back and forth

452
00:17:54,880 --> 00:17:57,679
right so the http request contains a lot

453
00:17:57,679 --> 00:18:00,000
of information right it can contain

454
00:18:00,000 --> 00:18:01,760
information in the url can contain

455
00:18:01,760 --> 00:18:05,120
information in the http header

456
00:18:05,120 --> 00:18:07,120
as well as body

457
00:18:07,120 --> 00:18:09,679
and other places the request and

458
00:18:09,679 --> 00:18:11,919
response that basically just contains

459
00:18:11,919 --> 00:18:14,720
pieces of information that needs to be

460
00:18:14,720 --> 00:18:16,880
passed back and forth between the

461
00:18:16,880 --> 00:18:18,880
front-end and the back-end right the

462
00:18:18,880 --> 00:18:21,520
browser and the

463
00:18:21,520 --> 00:18:22,960
server

464
00:18:22,960 --> 00:18:25,679
right so let's zoom into

465
00:18:25,679 --> 00:18:26,720
the

466
00:18:26,720 --> 00:18:29,280
server right so let's imagine this is

467
00:18:29,280 --> 00:18:31,760
this part is the server and

468
00:18:31,760 --> 00:18:33,440
because we want to zoom in so we want to

469
00:18:33,440 --> 00:18:36,880
make it bigger so inside this server we

470
00:18:36,880 --> 00:18:39,919
have a place where we need to process

471
00:18:39,919 --> 00:18:42,720
the request right you can have

472
00:18:42,720 --> 00:18:46,240
one function for example to process the

473
00:18:46,240 --> 00:18:48,080
request right here

474
00:18:48,080 --> 00:18:49,840
okay just process

475
00:18:49,840 --> 00:18:51,120
and then

476
00:18:51,120 --> 00:18:52,799
the request is processed

477
00:18:52,799 --> 00:18:54,799
the response is generated and sent back

478
00:18:54,799 --> 00:18:58,080
to the server the the user will see

479
00:18:58,080 --> 00:18:59,760
the html

480
00:18:59,760 --> 00:19:00,960
right so

481
00:19:00,960 --> 00:19:04,000
that's okay but the process itself has

482
00:19:04,000 --> 00:19:06,559
many many steps right like

483
00:19:06,559 --> 00:19:09,120
authentication authorization

484
00:19:09,120 --> 00:19:11,200
exception handlings

485
00:19:11,200 --> 00:19:12,720
logging

486
00:19:12,720 --> 00:19:13,919
rotting

487
00:19:13,919 --> 00:19:14,919
and

488
00:19:14,919 --> 00:19:18,400
validations all those steps need to be

489
00:19:18,400 --> 00:19:21,280
performed right if you couple everything

490
00:19:21,280 --> 00:19:24,320
together that go against a lot of

491
00:19:24,320 --> 00:19:26,559
software design and architecture rules

492
00:19:26,559 --> 00:19:28,559
principles

493
00:19:28,559 --> 00:19:32,160
so in order to process this in a proper

494
00:19:32,160 --> 00:19:34,400
way we can apply some software design

495
00:19:34,400 --> 00:19:37,039
patterns and one of the software design

496
00:19:37,039 --> 00:19:40,240
patterns is this is so called the chain

497
00:19:40,240 --> 00:19:42,240
of responsibilities

498
00:19:42,240 --> 00:19:45,200
right so then we would have

499
00:19:45,200 --> 00:19:48,240
many functions instead of one function

500
00:19:48,240 --> 00:19:51,919
we can have many functions here right

501
00:19:51,919 --> 00:19:55,520
let's say just call it function one

502
00:19:55,520 --> 00:19:57,760
function three

503
00:19:57,760 --> 00:20:00,080
and function n

504
00:20:00,080 --> 00:20:02,720
all right so all of these can be

505
00:20:02,720 --> 00:20:04,880
connected together so what this

506
00:20:04,880 --> 00:20:08,080
connection means is that this message

507
00:20:08,080 --> 00:20:10,080
will be handed

508
00:20:10,080 --> 00:20:11,919
to the function for the first function

509
00:20:11,919 --> 00:20:14,000
and the first function will process it

510
00:20:14,000 --> 00:20:16,720
do something to that message right kind

511
00:20:16,720 --> 00:20:18,799
of mutate that message

512
00:20:18,799 --> 00:20:21,120
and then pass that message to the second

513
00:20:21,120 --> 00:20:24,000
one to process the message and change

514
00:20:24,000 --> 00:20:25,120
that message

515
00:20:25,120 --> 00:20:28,880
right and then pass on to the last one

516
00:20:28,880 --> 00:20:31,760
and then return that message back still

517
00:20:31,760 --> 00:20:34,559
process it afterwards still process it

518
00:20:34,559 --> 00:20:36,400
and pass it all the way and then

519
00:20:36,400 --> 00:20:38,960
generate the final http response and

520
00:20:38,960 --> 00:20:42,320
send that back to the browser

521
00:20:42,320 --> 00:20:43,919
and by the way the message that i'm

522
00:20:43,919 --> 00:20:48,480
referring to is the http context object

523
00:20:48,480 --> 00:20:51,760
that encapsulate both the http request

524
00:20:51,760 --> 00:20:54,400
and the http response

525
00:20:54,400 --> 00:20:56,960
so this is uh what we call the

526
00:20:56,960 --> 00:20:59,280
middleware pipeline

527
00:20:59,280 --> 00:21:01,520
right this middlewire pipeline

528
00:21:01,520 --> 00:21:03,440
it kind of separates

529
00:21:03,440 --> 00:21:04,880
it kind of does the separation of

530
00:21:04,880 --> 00:21:08,720
concerns each middleware in the pipeline

531
00:21:08,720 --> 00:21:12,320
takes different responsibilities

532
00:21:12,320 --> 00:21:14,960
but usually the last one that are

533
00:21:14,960 --> 00:21:17,840
responsible to process the the business

534
00:21:17,840 --> 00:21:20,799
logic here has its own

535
00:21:20,799 --> 00:21:23,200
middle has its own pipeline

536
00:21:23,200 --> 00:21:24,799
right because

537
00:21:24,799 --> 00:21:26,400
these are for

538
00:21:26,400 --> 00:21:28,720
cross cutting concerns like exception

539
00:21:28,720 --> 00:21:29,919
handlings

540
00:21:29,919 --> 00:21:31,280
logins

541
00:21:31,280 --> 00:21:35,200
right authentication authorization um

542
00:21:35,200 --> 00:21:37,440
partially partially authorization and

543
00:21:37,440 --> 00:21:39,679
then here

544
00:21:39,679 --> 00:21:42,400
according to each different request we

545
00:21:42,400 --> 00:21:44,960
process them differently and therefore

546
00:21:44,960 --> 00:21:48,320
uh we should have another pipeline that

547
00:21:48,320 --> 00:21:49,760
uh will

548
00:21:49,760 --> 00:21:51,679
according to the different requests will

549
00:21:51,679 --> 00:21:53,679
process it differently right the the

550
00:21:53,679 --> 00:21:56,799
second pipeline here are not

551
00:21:56,799 --> 00:21:59,760
handling cross-cutting concerns but

552
00:21:59,760 --> 00:22:03,520
handling specific concerns for

553
00:22:03,520 --> 00:22:04,960
the specific

554
00:22:04,960 --> 00:22:06,240
request

555
00:22:06,240 --> 00:22:08,240
so you would have

556
00:22:08,240 --> 00:22:10,159
different filters here instead of

557
00:22:10,159 --> 00:22:11,440
different

558
00:22:11,440 --> 00:22:13,280
middlewares there right so these

559
00:22:13,280 --> 00:22:15,760
functions are basically middlewares

560
00:22:15,760 --> 00:22:16,640
right

561
00:22:16,640 --> 00:22:19,280
so so here then you would have filter

562
00:22:19,280 --> 00:22:20,320
one

563
00:22:20,320 --> 00:22:22,559
filter two i'm not writing

564
00:22:22,559 --> 00:22:24,240
it anymore

565
00:22:24,240 --> 00:22:27,440
right filter three for example so your

566
00:22:27,440 --> 00:22:30,640
request i mean your message will be

567
00:22:30,640 --> 00:22:34,159
also goes going through all of these

568
00:22:34,159 --> 00:22:37,039
so here i want to emphasize this may not

569
00:22:37,039 --> 00:22:39,200
go in one by one i may go through the

570
00:22:39,200 --> 00:22:41,600
first one and then go around

571
00:22:41,600 --> 00:22:44,000
and then going back may not go through

572
00:22:44,000 --> 00:22:45,760
each one of them it may go around

573
00:22:45,760 --> 00:22:48,240
whereas in middleware it will go

574
00:22:48,240 --> 00:22:51,840
like that but anyway this

575
00:22:51,840 --> 00:22:54,640
filter pipeline has many filters

576
00:22:54,640 --> 00:22:56,159
connected together

577
00:22:56,159 --> 00:22:58,080
and these are for handling specific

578
00:22:58,080 --> 00:23:00,880
requests whereas these are for handling

579
00:23:00,880 --> 00:23:03,039
crosscutting concerns

580
00:23:03,039 --> 00:23:04,640
so this is

581
00:23:04,640 --> 00:23:09,280
the the basics of asp.net core right and

582
00:23:09,280 --> 00:23:12,240
once i go into coding very very quickly

583
00:23:12,240 --> 00:23:14,640
in in the next few videos i will share

584
00:23:14,640 --> 00:23:16,080
coding and

585
00:23:16,080 --> 00:23:18,559
these concepts are important to know

586
00:23:18,559 --> 00:23:20,720
before that

587
00:23:20,720 --> 00:23:23,120
another very important concept to

588
00:23:23,120 --> 00:23:24,960
understand before i actually start

589
00:23:24,960 --> 00:23:27,840
coding and show you how uh security

590
00:23:27,840 --> 00:23:30,240
identity actually works within asp.net

591
00:23:30,240 --> 00:23:33,360
core is this security context

592
00:23:33,360 --> 00:23:35,120
okay so what is actually the security

593
00:23:35,120 --> 00:23:37,520
contact the security context contains

594
00:23:37,520 --> 00:23:39,200
all the information

595
00:23:39,200 --> 00:23:42,640
that the user has for security purpose

596
00:23:42,640 --> 00:23:44,400
that includes the user information

597
00:23:44,400 --> 00:23:46,000
itself username

598
00:23:46,000 --> 00:23:48,640
and all of the other type of user

599
00:23:48,640 --> 00:23:50,880
information like email addresses

600
00:23:50,880 --> 00:23:51,760
right

601
00:23:51,760 --> 00:23:53,440
those informations are actually

602
00:23:53,440 --> 00:23:56,880
encapsulated within one single

603
00:23:56,880 --> 00:24:00,159
object that is called claims principle

604
00:24:00,159 --> 00:24:02,000
in asp.net core

605
00:24:02,000 --> 00:24:04,159
we're using claims principle so that's

606
00:24:04,159 --> 00:24:06,080
why i mentioned claims principle but

607
00:24:06,080 --> 00:24:08,080
it's actually we can say that on a

608
00:24:08,080 --> 00:24:09,679
conceptual level

609
00:24:09,679 --> 00:24:12,320
we have a principal object that

610
00:24:12,320 --> 00:24:15,679
represents this security context of the

611
00:24:15,679 --> 00:24:18,080
user right basically you can consider

612
00:24:18,080 --> 00:24:20,000
this is the user

613
00:24:20,000 --> 00:24:21,200
right

614
00:24:21,200 --> 00:24:24,400
and the principle contains

615
00:24:24,400 --> 00:24:26,400
one or many

616
00:24:26,400 --> 00:24:29,440
identities of the user why there can be

617
00:24:29,440 --> 00:24:31,679
many type of identities

618
00:24:31,679 --> 00:24:33,760
i think i have explained in the first

619
00:24:33,760 --> 00:24:36,640
video that you know one person can have

620
00:24:36,640 --> 00:24:39,120
many type of identities right you can

621
00:24:39,120 --> 00:24:40,320
for example

622
00:24:40,320 --> 00:24:41,919
you can be a student and you have a

623
00:24:41,919 --> 00:24:44,320
student card you can be an employee and

624
00:24:44,320 --> 00:24:46,320
you have an employee card and you can

625
00:24:46,320 --> 00:24:48,640
have your driver's license and you can

626
00:24:48,640 --> 00:24:51,600
have the access card to your apartment

627
00:24:51,600 --> 00:24:53,760
building so all of these

628
00:24:53,760 --> 00:24:57,120
are a form of identity and then the next

629
00:24:57,120 --> 00:25:02,320
level is the next level is claims so

630
00:25:02,320 --> 00:25:03,200
one

631
00:25:03,200 --> 00:25:04,559
identity

632
00:25:04,559 --> 00:25:07,440
then can contain many

633
00:25:07,440 --> 00:25:08,559
claims

634
00:25:08,559 --> 00:25:10,240
what are claims

635
00:25:10,240 --> 00:25:14,799
claims are basically a key value pair

636
00:25:14,799 --> 00:25:17,360
that carries your information for

637
00:25:17,360 --> 00:25:19,200
example on your driver's license for

638
00:25:19,200 --> 00:25:22,720
example this this identity is your

639
00:25:22,720 --> 00:25:25,520
is your driver's license identity right

640
00:25:25,520 --> 00:25:28,720
driver's license

641
00:25:28,720 --> 00:25:31,120
and

642
00:25:31,360 --> 00:25:34,240
you can see that on drivers license

643
00:25:34,240 --> 00:25:36,880
there is your name

644
00:25:36,880 --> 00:25:39,600
right for example my name and then you

645
00:25:39,600 --> 00:25:41,200
may have your

646
00:25:41,200 --> 00:25:43,919
uh your birthday right whatever your

647
00:25:43,919 --> 00:25:46,880
birthday is and then you could have your

648
00:25:46,880 --> 00:25:48,480
uh your height

649
00:25:48,480 --> 00:25:50,240
whether you need to wear

650
00:25:50,240 --> 00:25:52,080
glasses where you're driving

651
00:25:52,080 --> 00:25:54,080
driver's license also contains my eye

652
00:25:54,080 --> 00:25:58,159
color and as well as my address

653
00:25:58,159 --> 00:26:01,440
all right so all of these are claims but

654
00:26:01,440 --> 00:26:03,279
these are just examples of claims of

655
00:26:03,279 --> 00:26:04,320
course

656
00:26:04,320 --> 00:26:05,679
this

657
00:26:05,679 --> 00:26:09,600
one claim is just one key and pair

658
00:26:09,600 --> 00:26:12,400
one key pair right so

659
00:26:12,400 --> 00:26:14,799
if you want driver's license to contain

660
00:26:14,799 --> 00:26:16,080
all of these

661
00:26:16,080 --> 00:26:18,559
then it would be like this right so

662
00:26:18,559 --> 00:26:21,039
these are the relationships between

663
00:26:21,039 --> 00:26:22,840
principles

664
00:26:22,840 --> 00:26:25,440
identities and claims

665
00:26:25,440 --> 00:26:29,039
again one the principle represents

666
00:26:29,039 --> 00:26:30,960
the logged in user it can has all of the

667
00:26:30,960 --> 00:26:33,279
information that login user has

668
00:26:33,279 --> 00:26:35,840
and then the principal can have

669
00:26:35,840 --> 00:26:38,320
many identities usually we have just one

670
00:26:38,320 --> 00:26:39,760
identity

671
00:26:39,760 --> 00:26:42,720
which is the default identity and then

672
00:26:42,720 --> 00:26:47,520
one identity can have many claims

673
00:26:47,520 --> 00:26:48,960
which carries all of the user

674
00:26:48,960 --> 00:26:50,720
information and then eventually when

675
00:26:50,720 --> 00:26:53,520
we're doing authorization we can use

676
00:26:53,520 --> 00:26:55,279
these claims

677
00:26:55,279 --> 00:26:56,480
we can

678
00:26:56,480 --> 00:26:59,919
apply those requirements on each

679
00:26:59,919 --> 00:27:04,480
page or resource in our web server

680
00:27:04,480 --> 00:27:06,720
those requirements that requires certain

681
00:27:06,720 --> 00:27:09,600
claims to be present in order to gain

682
00:27:09,600 --> 00:27:12,799
access to the resource

683
00:27:12,799 --> 00:27:15,200
let's jump right into video studio and

684
00:27:15,200 --> 00:27:17,679
start digging deep under the hood to

685
00:27:17,679 --> 00:27:21,200
understand spdin core security

686
00:27:21,200 --> 00:27:24,399
so i'm using video studio 2019 community

687
00:27:24,399 --> 00:27:27,360
edition and i'm about to create a

688
00:27:27,360 --> 00:27:30,240
spd.net core web application

689
00:27:30,240 --> 00:27:33,279
right you can come over here and do

690
00:27:33,279 --> 00:27:34,640
web

691
00:27:34,640 --> 00:27:36,159
app

692
00:27:36,159 --> 00:27:38,240
okay search web app and then you can see

693
00:27:38,240 --> 00:27:42,559
asp.org web application click on next

694
00:27:42,559 --> 00:27:45,039
and so you basically enter your

695
00:27:45,039 --> 00:27:48,000
locations project name and solution name

696
00:27:48,000 --> 00:27:50,240
and then click on create

697
00:27:50,240 --> 00:27:52,799
and what we are going to create is a

698
00:27:52,799 --> 00:27:55,600
speedometer quarter web app so this is

699
00:27:55,600 --> 00:27:57,200
going to be the

700
00:27:57,200 --> 00:28:00,159
reason pages application it's not going

701
00:28:00,159 --> 00:28:02,799
to be model view controller because

702
00:28:02,799 --> 00:28:05,360
right now microsoft considers the

703
00:28:05,360 --> 00:28:08,240
reserve pages solution is the primary

704
00:28:08,240 --> 00:28:10,799
solution that's why in this course i'm

705
00:28:10,799 --> 00:28:13,440
using the razer pages

706
00:28:13,440 --> 00:28:15,279
solution

707
00:28:15,279 --> 00:28:16,399
so then

708
00:28:16,399 --> 00:28:19,440
without creating any authentication

709
00:28:19,440 --> 00:28:21,760
let's click on the create and then we

710
00:28:21,760 --> 00:28:24,000
can start from scratch

711
00:28:24,000 --> 00:28:26,559
without using any default setup for

712
00:28:26,559 --> 00:28:28,399
authentication so so that we can

713
00:28:28,399 --> 00:28:30,720
understand the security the identity

714
00:28:30,720 --> 00:28:35,440
aspect of asp.net core completely so i'm

715
00:28:35,440 --> 00:28:37,279
clicking on the

716
00:28:37,279 --> 00:28:40,000
create button so now we have the

717
00:28:40,000 --> 00:28:41,919
application created this is the

718
00:28:41,919 --> 00:28:45,120
intermediate course i'm now going to go

719
00:28:45,120 --> 00:28:46,720
about and

720
00:28:46,720 --> 00:28:48,480
show you

721
00:28:48,480 --> 00:28:51,600
which file is what and how they all work

722
00:28:51,600 --> 00:28:53,200
together i'm going to come to this

723
00:28:53,200 --> 00:28:55,279
diagram and

724
00:28:55,279 --> 00:28:58,559
we'll follow this diagram back and forth

725
00:28:58,559 --> 00:29:01,279
along these lines so we can investigate

726
00:29:01,279 --> 00:29:03,919
each and every single step so first of

727
00:29:03,919 --> 00:29:04,960
all

728
00:29:04,960 --> 00:29:06,720
we are

729
00:29:06,720 --> 00:29:10,159
we don't have a login page right but we

730
00:29:10,159 --> 00:29:12,240
do have other pages where we're going to

731
00:29:12,240 --> 00:29:15,039
send requests and receive a response so

732
00:29:15,039 --> 00:29:16,799
let's examine this

733
00:29:16,799 --> 00:29:19,279
this part first because this part

734
00:29:19,279 --> 00:29:22,159
carries all of our security context so

735
00:29:22,159 --> 00:29:23,440
this is the first part we're going to

736
00:29:23,440 --> 00:29:27,600
examine so we have a index page

737
00:29:27,600 --> 00:29:30,080
right and we don't have any uh

738
00:29:30,080 --> 00:29:32,159
protection on the page so we should be

739
00:29:32,159 --> 00:29:35,279
able to just run without any problems

740
00:29:35,279 --> 00:29:37,600
all right so this page is loaded but

741
00:29:37,600 --> 00:29:38,960
what i'm going to do is i'm going to

742
00:29:38,960 --> 00:29:40,480
come over here and i'm going to set a

743
00:29:40,480 --> 00:29:42,960
breakpoint and then i'm going back to

744
00:29:42,960 --> 00:29:44,799
the page i'm going to refresh the page

745
00:29:44,799 --> 00:29:47,039
now my breakpoint is triggered

746
00:29:47,039 --> 00:29:49,520
so what i'm going to do is

747
00:29:49,520 --> 00:29:52,640
i'm going to add something to look at

748
00:29:52,640 --> 00:29:54,960
i'm going to examine the

749
00:29:54,960 --> 00:29:56,399
information

750
00:29:56,399 --> 00:29:58,799
under the page model of the razer pages

751
00:29:58,799 --> 00:30:01,200
which contains the data construct for

752
00:30:01,200 --> 00:30:03,919
razer pages which is pretty similar to

753
00:30:03,919 --> 00:30:06,000
mvc still construct

754
00:30:06,000 --> 00:30:08,720
and if we say base dot and we can see

755
00:30:08,720 --> 00:30:10,799
all of the data construction one of them

756
00:30:10,799 --> 00:30:11,679
is

757
00:30:11,679 --> 00:30:14,640
user and if you look cl uh closely you

758
00:30:14,640 --> 00:30:16,960
can see that this is the claims

759
00:30:16,960 --> 00:30:19,919
principle which is the security context

760
00:30:19,919 --> 00:30:22,000
that i talked about in the previous

761
00:30:22,000 --> 00:30:23,440
video the

762
00:30:23,440 --> 00:30:26,559
security context is under the user right

763
00:30:26,559 --> 00:30:29,200
because it is the user principle so then

764
00:30:29,200 --> 00:30:30,880
what is under there

765
00:30:30,880 --> 00:30:33,440
and you can see that the principles can

766
00:30:33,440 --> 00:30:34,640
contain

767
00:30:34,640 --> 00:30:36,399
a list of identities

768
00:30:36,399 --> 00:30:38,480
currently it only has one

769
00:30:38,480 --> 00:30:41,600
and this is the primary identity this

770
00:30:41,600 --> 00:30:44,399
identity is the primary identity which

771
00:30:44,399 --> 00:30:46,880
is sort of like uh in the first video

772
00:30:46,880 --> 00:30:49,919
when i talked about when you go into the

773
00:30:49,919 --> 00:30:51,360
military

774
00:30:51,360 --> 00:30:52,559
facility

775
00:30:52,559 --> 00:30:54,480
as a person you have many type of

776
00:30:54,480 --> 00:30:56,080
identities you have your driver's

777
00:30:56,080 --> 00:30:58,559
license you can have your employee card

778
00:30:58,559 --> 00:31:00,320
you can have your student card you can

779
00:31:00,320 --> 00:31:02,559
have everything you can even have a you

780
00:31:02,559 --> 00:31:04,720
can have a library card right

781
00:31:04,720 --> 00:31:08,000
but uh the identity that is the primary

782
00:31:08,000 --> 00:31:11,360
identity supposed to be the one that is

783
00:31:11,360 --> 00:31:14,880
provided to you by the military right so

784
00:31:14,880 --> 00:31:16,799
this identity

785
00:31:16,799 --> 00:31:20,960
is our primary identity that our asp.net

786
00:31:20,960 --> 00:31:23,760
core currently is working with

787
00:31:23,760 --> 00:31:25,760
right so if we

788
00:31:25,760 --> 00:31:27,519
go to

789
00:31:27,519 --> 00:31:30,399
that and we do dot identity

790
00:31:30,399 --> 00:31:32,640
and then

791
00:31:32,640 --> 00:31:34,080
we can see that

792
00:31:34,080 --> 00:31:35,600
it has

793
00:31:35,600 --> 00:31:38,080
different informations here and the main

794
00:31:38,080 --> 00:31:40,240
information is claims which doesn't have

795
00:31:40,240 --> 00:31:41,360
anything

796
00:31:41,360 --> 00:31:43,519
and the reason is that this current

797
00:31:43,519 --> 00:31:47,039
identity is a anonymous identity you can

798
00:31:47,039 --> 00:31:50,159
see that this is authenticated member

799
00:31:50,159 --> 00:31:52,559
it's currently false why is it anonymous

800
00:31:52,559 --> 00:31:54,960
identity because i haven't logged in yet

801
00:31:54,960 --> 00:31:57,360
i didn't touch any login page in fact we

802
00:31:57,360 --> 00:31:59,760
don't have a login page so in this case

803
00:31:59,760 --> 00:32:02,799
we're not we're actually uh

804
00:32:02,799 --> 00:32:05,679
logging in quote and quote

805
00:32:05,679 --> 00:32:08,080
to this web application without any

806
00:32:08,080 --> 00:32:10,240
identity and this

807
00:32:10,240 --> 00:32:13,679
is still considered as a identity and

808
00:32:13,679 --> 00:32:17,679
this identity is the anonymous identity

809
00:32:17,679 --> 00:32:20,720
and that's why the is authenticated is

810
00:32:20,720 --> 00:32:21,919
false

811
00:32:21,919 --> 00:32:24,399
so in other words whether you're logged

812
00:32:24,399 --> 00:32:27,360
in or not logged in once the http

813
00:32:27,360 --> 00:32:31,519
request goes into sb.cor asp.net core

814
00:32:31,519 --> 00:32:32,880
creates

815
00:32:32,880 --> 00:32:36,080
the the primary identity for you right

816
00:32:36,080 --> 00:32:37,760
regardless whether you're logged in or

817
00:32:37,760 --> 00:32:40,399
not and if you're logged in then it will

818
00:32:40,399 --> 00:32:43,360
contain all of your security contacts

819
00:32:43,360 --> 00:32:46,080
right if it doesn't log in it will

820
00:32:46,080 --> 00:32:49,440
contain a anonymous identity which is

821
00:32:49,440 --> 00:32:51,600
still a security context but it's an

822
00:32:51,600 --> 00:32:54,159
anonymous one so this is the concept i

823
00:32:54,159 --> 00:32:56,480
would like you to understand that

824
00:32:56,480 --> 00:32:58,159
regardless whether you're logged in or

825
00:32:58,159 --> 00:33:01,120
not you have a security context you have

826
00:33:01,120 --> 00:33:02,880
a primary identity

827
00:33:02,880 --> 00:33:05,840
under your security context

828
00:33:05,840 --> 00:33:07,679
since in the last video we have learned

829
00:33:07,679 --> 00:33:10,559
about the anonymous identity inside the

830
00:33:10,559 --> 00:33:13,919
http context object in this video we're

831
00:33:13,919 --> 00:33:16,320
going to create a login page so that we

832
00:33:16,320 --> 00:33:19,200
can have an actual login identity

833
00:33:19,200 --> 00:33:21,600
instead of anonymous one so let's jump

834
00:33:21,600 --> 00:33:24,159
into video studio and continue from what

835
00:33:24,159 --> 00:33:26,399
we have created from the previous video

836
00:33:26,399 --> 00:33:28,640
so since this is a resource page

837
00:33:28,640 --> 00:33:31,200
solution we are going to create a

838
00:33:31,200 --> 00:33:34,240
subfolder under here

839
00:33:34,240 --> 00:33:36,960
and let's call it

840
00:33:36,960 --> 00:33:38,799
account

841
00:33:38,799 --> 00:33:41,039
and then we're going to create

842
00:33:41,039 --> 00:33:43,760
a login page so we are not going to

843
00:33:43,760 --> 00:33:46,000
scout fold from

844
00:33:46,000 --> 00:33:48,399
identity framework inside speed.net core

845
00:33:48,399 --> 00:33:50,720
we're going to create our own login page

846
00:33:50,720 --> 00:33:53,519
and then we can learn about what exactly

847
00:33:53,519 --> 00:33:55,600
is happening under the hood instead of

848
00:33:55,600 --> 00:33:57,840
just using the scope folding okay let's

849
00:33:57,840 --> 00:33:58,960
create a

850
00:33:58,960 --> 00:34:02,559
empty reader page and let's call it

851
00:34:02,559 --> 00:34:05,799
login all right so we have the the

852
00:34:05,799 --> 00:34:08,320
cshtml page here

853
00:34:08,320 --> 00:34:11,199
and then we have this page behind here

854
00:34:11,199 --> 00:34:14,480
okay so this is uh actually based on mvc

855
00:34:14,480 --> 00:34:15,679
framework

856
00:34:15,679 --> 00:34:17,760
but it gives you a

857
00:34:17,760 --> 00:34:21,040
mvvm field right it's instead of mvc it

858
00:34:21,040 --> 00:34:23,679
gives you mvpm feel so

859
00:34:23,679 --> 00:34:26,000
uh because of that the first thing we

860
00:34:26,000 --> 00:34:29,599
need to create is a it's a model that

861
00:34:29,599 --> 00:34:32,399
you can use to communicate between the

862
00:34:32,399 --> 00:34:36,560
front and the back right and let's call

863
00:34:36,560 --> 00:34:38,000
that model

864
00:34:38,000 --> 00:34:40,399
a credential model

865
00:34:40,399 --> 00:34:42,879
okay so we haven't created yet

866
00:34:42,879 --> 00:34:44,879
but that's okay we can uh

867
00:34:44,879 --> 00:34:47,440
create right now and let's just call it

868
00:34:47,440 --> 00:34:49,599
credential

869
00:34:49,599 --> 00:34:52,480
okay so this is not created and that's

870
00:34:52,480 --> 00:34:54,079
fine we're going to create it right

871
00:34:54,079 --> 00:34:57,760
under here and we can create a public

872
00:34:57,760 --> 00:34:58,800
class

873
00:34:58,800 --> 00:35:02,480
and let's call it credential

874
00:35:02,480 --> 00:35:05,920
and we are going to have

875
00:35:05,920 --> 00:35:08,160
a

876
00:35:08,480 --> 00:35:10,960
username

877
00:35:10,960 --> 00:35:14,560
and of course a password

878
00:35:15,040 --> 00:35:16,720
all right so this

879
00:35:16,720 --> 00:35:18,800
class will be used as a model to

880
00:35:18,800 --> 00:35:20,720
communicate between the front and the

881
00:35:20,720 --> 00:35:21,599
back

882
00:35:21,599 --> 00:35:24,400
right the reader pages and the the page

883
00:35:24,400 --> 00:35:25,680
model here

884
00:35:25,680 --> 00:35:27,839
and of course we can add some validation

885
00:35:27,839 --> 00:35:28,880
here

886
00:35:28,880 --> 00:35:31,119
and this one we can make a required

887
00:35:31,119 --> 00:35:32,000
field

888
00:35:32,000 --> 00:35:34,560
and of course here we're going to do

889
00:35:34,560 --> 00:35:37,760
control dot to import the namespace

890
00:35:37,760 --> 00:35:40,240
and same over here we're going to

891
00:35:40,240 --> 00:35:44,240
make it required and make this a

892
00:35:44,240 --> 00:35:47,280
password data type

893
00:35:48,720 --> 00:35:51,280
and then what we need to do is we're

894
00:35:51,280 --> 00:35:54,480
going to make this a bind property

895
00:35:54,480 --> 00:35:56,480
so that it gives you a feeling of

896
00:35:56,480 --> 00:35:58,880
two-way data binding right so

897
00:35:58,880 --> 00:36:01,440
with this property set up we can go to

898
00:36:01,440 --> 00:36:04,160
the and then we can just enter the html

899
00:36:04,160 --> 00:36:06,560
that we want to use okay so by default

900
00:36:06,560 --> 00:36:09,240
solution comes with bootstrap in the

901
00:36:09,240 --> 00:36:11,920
layout.c as html you can see the

902
00:36:11,920 --> 00:36:13,839
bootstrap is here

903
00:36:13,839 --> 00:36:17,839
so we can enter some bootstrap classes

904
00:36:17,839 --> 00:36:19,920
okay so this is going to be a container

905
00:36:19,920 --> 00:36:20,880
and

906
00:36:20,880 --> 00:36:22,640
we want to have a border so that it

907
00:36:22,640 --> 00:36:23,760
looks

908
00:36:23,760 --> 00:36:28,079
better right and then uh we're gonna

909
00:36:28,079 --> 00:36:30,160
add a little bit of padding right so we

910
00:36:30,160 --> 00:36:32,000
have a div here and then

911
00:36:32,000 --> 00:36:33,760
uh we need a form

912
00:36:33,760 --> 00:36:36,079
right and this is going to be

913
00:36:36,079 --> 00:36:37,680
a post

914
00:36:37,680 --> 00:36:38,720
form

915
00:36:38,720 --> 00:36:41,599
allowing you to post we're gonna have

916
00:36:41,599 --> 00:36:44,640
uh two rows right and this is going to

917
00:36:44,640 --> 00:36:46,800
be a form group

918
00:36:46,800 --> 00:36:47,760
uh

919
00:36:47,760 --> 00:36:49,119
and this is

920
00:36:49,119 --> 00:36:51,440
row number one and then inside the row

921
00:36:51,440 --> 00:36:52,960
we have two columns

922
00:36:52,960 --> 00:36:55,040
right the first column is for the label

923
00:36:55,040 --> 00:36:57,920
the second one is going to be for let's

924
00:36:57,920 --> 00:36:59,359
change it to five

925
00:36:59,359 --> 00:37:02,000
so right this one is a narrower column

926
00:37:02,000 --> 00:37:04,400
and this is a wider column right so this

927
00:37:04,400 --> 00:37:06,640
is going to be for the label

928
00:37:06,640 --> 00:37:09,520
so before we do that we can uh

929
00:37:09,520 --> 00:37:10,720
well let's

930
00:37:10,720 --> 00:37:11,920
enter

931
00:37:11,920 --> 00:37:14,000
a label here

932
00:37:14,000 --> 00:37:17,280
and this is going to be bond to that

933
00:37:17,280 --> 00:37:18,480
credential

934
00:37:18,480 --> 00:37:21,040
to this credential field

935
00:37:21,040 --> 00:37:23,680
okay so we're going to call this so this

936
00:37:23,680 --> 00:37:25,359
should be bound to that and that's this

937
00:37:25,359 --> 00:37:28,240
is the way we do it with tag helper

938
00:37:28,240 --> 00:37:29,359
and then

939
00:37:29,359 --> 00:37:31,839
we'll do input and this is going to be a

940
00:37:31,839 --> 00:37:33,599
text for sure

941
00:37:33,599 --> 00:37:35,599
and

942
00:37:35,599 --> 00:37:38,560
to be bound to

943
00:37:38,560 --> 00:37:39,680
the

944
00:37:39,680 --> 00:37:41,440
the same field

945
00:37:41,440 --> 00:37:44,079
right so this is the actual binding but

946
00:37:44,079 --> 00:37:46,640
this one gives you the the label name

947
00:37:46,640 --> 00:37:49,040
and then we're going to copy this and of

948
00:37:49,040 --> 00:37:50,400
course this one

949
00:37:50,400 --> 00:37:52,320
is going to be

950
00:37:52,320 --> 00:37:55,280
button to the password field

951
00:37:55,280 --> 00:37:57,520
and the input

952
00:37:57,520 --> 00:37:59,680
is also bound to the password field so

953
00:37:59,680 --> 00:38:02,400
let's run it and see let me do ctrl f5

954
00:38:02,400 --> 00:38:03,280
okay

955
00:38:03,280 --> 00:38:05,760
so in order to navigate to it in reader

956
00:38:05,760 --> 00:38:07,680
pages it's based on

957
00:38:07,680 --> 00:38:09,839
folder by default so we don't have to

958
00:38:09,839 --> 00:38:12,480
specify attribute in order to

959
00:38:12,480 --> 00:38:14,079
to uh

960
00:38:14,079 --> 00:38:16,320
navigate to it so we're just basically

961
00:38:16,320 --> 00:38:19,440
doing the folder name right and then the

962
00:38:19,440 --> 00:38:20,720
page name

963
00:38:20,720 --> 00:38:22,640
so we have it and

964
00:38:22,640 --> 00:38:23,359
i

965
00:38:23,359 --> 00:38:26,000
don't like the label to be too big so

966
00:38:26,000 --> 00:38:28,160
let's actually change that

967
00:38:28,160 --> 00:38:30,000
to

968
00:38:30,000 --> 00:38:32,079
instead of three let's change that to

969
00:38:32,079 --> 00:38:33,200
two

970
00:38:33,200 --> 00:38:34,320
and

971
00:38:34,320 --> 00:38:36,320
and thus

972
00:38:36,320 --> 00:38:37,920
we'll add a

973
00:38:37,920 --> 00:38:40,720
form control to make it look better same

974
00:38:40,720 --> 00:38:44,000
as this forgot to add the class

975
00:38:44,000 --> 00:38:46,800
the css class

976
00:38:46,800 --> 00:38:48,720
okay going over here i'm going to do a

977
00:38:48,720 --> 00:38:50,079
refresh

978
00:38:50,079 --> 00:38:53,280
okay so apparently we need a submit

979
00:38:53,280 --> 00:38:57,119
button and for that we are

980
00:38:57,920 --> 00:39:01,280
basically just doing this and deleting

981
00:39:01,280 --> 00:39:02,720
this

982
00:39:02,720 --> 00:39:05,920
and i'm going to keep my input button

983
00:39:05,920 --> 00:39:07,920
here so this is going to be a submit

984
00:39:07,920 --> 00:39:09,680
button

985
00:39:09,680 --> 00:39:12,160
okay and then

986
00:39:12,160 --> 00:39:14,960
this is going to be a primary

987
00:39:14,960 --> 00:39:17,359
button

988
00:39:17,359 --> 00:39:20,240
and then the label is logging all right

989
00:39:20,240 --> 00:39:22,480
so let's refresh the page

990
00:39:22,480 --> 00:39:25,280
okay so we have a login button here if i

991
00:39:25,280 --> 00:39:27,040
click on this button

992
00:39:27,040 --> 00:39:28,880
it does a post back you can see it does

993
00:39:28,880 --> 00:39:30,320
a postback

994
00:39:30,320 --> 00:39:32,720
so this is not exactly what we want

995
00:39:32,720 --> 00:39:34,480
right because

996
00:39:34,480 --> 00:39:36,400
you have to really enter your username

997
00:39:36,400 --> 00:39:37,520
password

998
00:39:37,520 --> 00:39:39,520
this is not doing the validation we need

999
00:39:39,520 --> 00:39:42,160
to make sure that it validates right and

1000
00:39:42,160 --> 00:39:44,240
in reader pages to do that it's very

1001
00:39:44,240 --> 00:39:48,320
simple first on the top within the form

1002
00:39:48,320 --> 00:39:50,000
we're going to add a

1003
00:39:50,000 --> 00:39:53,280
div the class would be

1004
00:39:53,280 --> 00:39:54,880
gender

1005
00:39:54,880 --> 00:39:56,800
right and then it's going to be for

1006
00:39:56,800 --> 00:39:59,119
validation all right we're going to use

1007
00:39:59,119 --> 00:40:01,839
tag helper validation summary

1008
00:40:01,839 --> 00:40:03,839
and then we'll say model only okay so

1009
00:40:03,839 --> 00:40:05,839
this is going to be validating our model

1010
00:40:05,839 --> 00:40:08,400
which is the credential field and then

1011
00:40:08,400 --> 00:40:10,640
for each field

1012
00:40:10,640 --> 00:40:14,240
right we are going to add a span

1013
00:40:14,240 --> 00:40:15,680
and

1014
00:40:15,680 --> 00:40:18,079
again we're going to say

1015
00:40:18,079 --> 00:40:20,560
text standard for the css class

1016
00:40:20,560 --> 00:40:22,800
and it's validation

1017
00:40:22,800 --> 00:40:26,480
it's going to be validating this field

1018
00:40:26,480 --> 00:40:28,400
okay so you can see

1019
00:40:28,400 --> 00:40:31,760
with the tag helper both the

1020
00:40:31,760 --> 00:40:34,640
model binding as well as validation is

1021
00:40:34,640 --> 00:40:36,839
very

1022
00:40:36,839 --> 00:40:38,400
simple

1023
00:40:38,400 --> 00:40:41,440
the page and then now you can see that

1024
00:40:41,440 --> 00:40:45,200
the validation is displayed let's say

1025
00:40:45,200 --> 00:40:47,760
our username is admin and

1026
00:40:47,760 --> 00:40:51,440
our password is going to be password

1027
00:40:51,440 --> 00:40:53,599
of course you can see this this field is

1028
00:40:53,599 --> 00:40:55,839
not playing very nicely it's showing my

1029
00:40:55,839 --> 00:40:57,040
password

1030
00:40:57,040 --> 00:40:59,119
so we need to fix that problem and we

1031
00:40:59,119 --> 00:41:01,599
come back to this login.cs

1032
00:41:01,599 --> 00:41:03,440
html and we're going to change this

1033
00:41:03,440 --> 00:41:06,480
instead of text so this part is has to

1034
00:41:06,480 --> 00:41:08,640
be a password so you're going to refresh

1035
00:41:08,640 --> 00:41:09,920
this page

1036
00:41:09,920 --> 00:41:11,280
and then

1037
00:41:11,280 --> 00:41:14,240
password is password now it's doing

1038
00:41:14,240 --> 00:41:16,480
incorrectly all right so if once we

1039
00:41:16,480 --> 00:41:18,160
click on this

1040
00:41:18,160 --> 00:41:20,720
this credentials has to be sent to to

1041
00:41:20,720 --> 00:41:22,640
here to be bought here

1042
00:41:22,640 --> 00:41:24,880
so but then how do we receive the

1043
00:41:24,880 --> 00:41:27,839
postback event and that's when we are

1044
00:41:27,839 --> 00:41:29,040
doing

1045
00:41:29,040 --> 00:41:29,920
in

1046
00:41:29,920 --> 00:41:33,359
uh on post okay so this is by convention

1047
00:41:33,359 --> 00:41:36,400
so let's do a debug here

1048
00:41:36,400 --> 00:41:38,880
we're gonna run debug and then we

1049
00:41:38,880 --> 00:41:41,920
navigate to our login page so if type in

1050
00:41:41,920 --> 00:41:43,760
our password

1051
00:41:43,760 --> 00:41:45,200
and then

1052
00:41:45,200 --> 00:41:48,319
going over here if we watch this dot

1053
00:41:48,319 --> 00:41:50,560
credential

1054
00:41:50,560 --> 00:41:52,079
we can see that the username and

1055
00:41:52,079 --> 00:41:54,240
password is actually

1056
00:41:54,240 --> 00:41:56,400
received so this is you know two-way

1057
00:41:56,400 --> 00:41:57,920
data binding

1058
00:41:57,920 --> 00:41:59,680
a feeling of two-way data binding at

1059
00:41:59,680 --> 00:42:02,400
least although i only demonstrated the

1060
00:42:02,400 --> 00:42:04,319
one-way data binding which is binding

1061
00:42:04,319 --> 00:42:06,079
from the ui

1062
00:42:06,079 --> 00:42:08,560
to our page behind

1063
00:42:08,560 --> 00:42:10,960
right so we can do the other i can

1064
00:42:10,960 --> 00:42:12,800
although it doesn't make sense but

1065
00:42:12,800 --> 00:42:14,400
we can definitely

1066
00:42:14,400 --> 00:42:17,599
do the other one which is uh so we're

1067
00:42:17,599 --> 00:42:19,520
gonna have the credential we're gonna

1068
00:42:19,520 --> 00:42:21,599
initialize the credential

1069
00:42:21,599 --> 00:42:24,400
okay and then we can have the at least

1070
00:42:24,400 --> 00:42:26,319
we can populate

1071
00:42:26,319 --> 00:42:28,319
the

1072
00:42:28,319 --> 00:42:30,000
the username

1073
00:42:30,000 --> 00:42:32,319
and then when we're doing this

1074
00:42:32,319 --> 00:42:33,280
right

1075
00:42:33,280 --> 00:42:35,599
so when the page is requested the login

1076
00:42:35,599 --> 00:42:38,000
page is requested this get handler is

1077
00:42:38,000 --> 00:42:40,560
going to be executed when it's post back

1078
00:42:40,560 --> 00:42:42,079
this post handler is going to be

1079
00:42:42,079 --> 00:42:44,400
executed so when

1080
00:42:44,400 --> 00:42:47,920
this get handler is executed we populate

1081
00:42:47,920 --> 00:42:51,040
our model and then this information will

1082
00:42:51,040 --> 00:42:54,160
be used inside the view here okay so

1083
00:42:54,160 --> 00:42:56,640
let's let's run that and see

1084
00:42:56,640 --> 00:42:59,440
that is really a feeling of two-way data

1085
00:42:59,440 --> 00:43:03,200
binding it's really a feeling of mvvm

1086
00:43:03,200 --> 00:43:05,680
although this is all based on mvc i know

1087
00:43:05,680 --> 00:43:08,400
this is kind of outside the security

1088
00:43:08,400 --> 00:43:09,920
course

1089
00:43:09,920 --> 00:43:12,000
since you should have already known this

1090
00:43:12,000 --> 00:43:12,960
but

1091
00:43:12,960 --> 00:43:15,680
razer pages haven't been around for too

1092
00:43:15,680 --> 00:43:17,440
long that's why i wanted to cover it

1093
00:43:17,440 --> 00:43:19,920
just a little bit so you can see that

1094
00:43:19,920 --> 00:43:20,640
the

1095
00:43:20,640 --> 00:43:21,680
admin

1096
00:43:21,680 --> 00:43:24,960
is populated here so this is from our

1097
00:43:24,960 --> 00:43:26,640
page model

1098
00:43:26,640 --> 00:43:28,319
to the ui

1099
00:43:28,319 --> 00:43:30,400
and then

1100
00:43:30,400 --> 00:43:32,560
we set a breakpoint here

1101
00:43:32,560 --> 00:43:35,200
so once we submit the form

1102
00:43:35,200 --> 00:43:38,079
then we would receive our credential

1103
00:43:38,079 --> 00:43:39,359
from the ui

1104
00:43:39,359 --> 00:43:40,880
to the page model

1105
00:43:40,880 --> 00:43:43,440
right so this is a two-way data binding

1106
00:43:43,440 --> 00:43:45,839
and of course we don't need

1107
00:43:45,839 --> 00:43:48,560
the username to be pre-populated and

1108
00:43:48,560 --> 00:43:50,800
another thing is this username is not

1109
00:43:50,800 --> 00:43:53,040
displayed correctly it's displayed as

1110
00:43:53,040 --> 00:43:55,839
one word so when we display it

1111
00:43:55,839 --> 00:43:58,000
we want it to be displayed

1112
00:43:58,000 --> 00:44:00,880
as separate word so we can provide that

1113
00:44:00,880 --> 00:44:03,440
over here

1114
00:44:03,839 --> 00:44:06,079
okay so once we have that then we

1115
00:44:06,079 --> 00:44:08,240
refresh the page and we can see that the

1116
00:44:08,240 --> 00:44:11,440
username is separated so next step is

1117
00:44:11,440 --> 00:44:12,800
that we need to

1118
00:44:12,800 --> 00:44:16,400
verify the credentials inside post and

1119
00:44:16,400 --> 00:44:18,400
then we need to generate the security

1120
00:44:18,400 --> 00:44:20,960
context which is the claims principle so

1121
00:44:20,960 --> 00:44:23,839
we'll do that in the next video

1122
00:44:23,839 --> 00:44:26,319
now that we have implemented a login

1123
00:44:26,319 --> 00:44:29,119
page and we have also covered where the

1124
00:44:29,119 --> 00:44:31,200
security context is stored we're ready

1125
00:44:31,200 --> 00:44:33,359
to implement the verifications

1126
00:44:33,359 --> 00:44:36,000
credentials as well as generating the

1127
00:44:36,000 --> 00:44:38,400
security context so let's jump into

1128
00:44:38,400 --> 00:44:40,880
video studio and start implementing

1129
00:44:40,880 --> 00:44:43,200
those logic so first of all we need to

1130
00:44:43,200 --> 00:44:45,040
make sure that we do have our

1131
00:44:45,040 --> 00:44:47,040
credentials and for that we need to

1132
00:44:47,040 --> 00:44:49,359
check our model state to see whether

1133
00:44:49,359 --> 00:44:51,040
it's valid or not

1134
00:44:51,040 --> 00:44:53,520
and if it's not valid

1135
00:44:53,520 --> 00:44:56,160
we're going to return

1136
00:44:56,160 --> 00:44:59,200
and then next we want to verify the

1137
00:44:59,200 --> 00:45:00,400
credentials

1138
00:45:00,400 --> 00:45:02,880
and we are not going to connect to the

1139
00:45:02,880 --> 00:45:05,760
database we're not interested in that

1140
00:45:05,760 --> 00:45:07,839
we're interested in the security aspect

1141
00:45:07,839 --> 00:45:08,880
of that

1142
00:45:08,880 --> 00:45:10,079
so that's why

1143
00:45:10,079 --> 00:45:11,839
we're just hardcoding

1144
00:45:11,839 --> 00:45:15,280
the verification process here so i want

1145
00:45:15,280 --> 00:45:18,400
to make sure that username is admin

1146
00:45:18,400 --> 00:45:20,000
and the password

1147
00:45:20,000 --> 00:45:23,280
is password so as long as we have these

1148
00:45:23,280 --> 00:45:24,160
two

1149
00:45:24,160 --> 00:45:25,119
match

1150
00:45:25,119 --> 00:45:26,960
the username and password

1151
00:45:26,960 --> 00:45:27,839
then

1152
00:45:27,839 --> 00:45:29,680
we're okay next step

1153
00:45:29,680 --> 00:45:30,839
right so

1154
00:45:30,839 --> 00:45:33,280
here we verify

1155
00:45:33,280 --> 00:45:35,599
the credential

1156
00:45:35,599 --> 00:45:38,160
right and then the second step here we

1157
00:45:38,160 --> 00:45:39,280
are

1158
00:45:39,280 --> 00:45:42,800
creating the security context

1159
00:45:45,280 --> 00:45:48,560
and if we go back to our diagram that we

1160
00:45:48,560 --> 00:45:51,760
drew before we will need to create a

1161
00:45:51,760 --> 00:45:55,040
bunch of claims and then we add to the

1162
00:45:55,040 --> 00:45:56,319
identity

1163
00:45:56,319 --> 00:45:58,960
we only need one identity which is the

1164
00:45:58,960 --> 00:46:00,960
primary identity once we have the

1165
00:46:00,960 --> 00:46:03,520
primary identity we add it to the claims

1166
00:46:03,520 --> 00:46:05,040
principle and

1167
00:46:05,040 --> 00:46:07,040
we are done with creating the security

1168
00:46:07,040 --> 00:46:09,440
context right so for that

1169
00:46:09,440 --> 00:46:13,119
we'll all instantiate a list of claims

1170
00:46:13,119 --> 00:46:15,599
i'm doing ctrl dot to import

1171
00:46:15,599 --> 00:46:18,160
the namespace here

1172
00:46:18,160 --> 00:46:21,119
and then of course we are going to add

1173
00:46:21,119 --> 00:46:23,359
let's add

1174
00:46:23,359 --> 00:46:25,520
some claims here

1175
00:46:25,520 --> 00:46:26,800
right so

1176
00:46:26,800 --> 00:46:28,960
we're gonna have a

1177
00:46:28,960 --> 00:46:31,520
a name

1178
00:46:31,760 --> 00:46:35,760
and let's call just admin

1179
00:46:35,760 --> 00:46:40,000
and perhaps we'll add another one

1180
00:46:40,000 --> 00:46:42,560
we'll add another claim

1181
00:46:42,560 --> 00:46:44,640
and let's see what options do we have

1182
00:46:44,640 --> 00:46:46,160
here

1183
00:46:46,160 --> 00:46:48,240
we do we have an email yeah we have an

1184
00:46:48,240 --> 00:46:50,560
email let's say

1185
00:46:50,560 --> 00:46:53,200
i mean at

1186
00:46:53,200 --> 00:46:55,040
my website.com

1187
00:46:55,040 --> 00:46:57,040
right that's good enough now that we

1188
00:46:57,040 --> 00:46:58,560
have the claims

1189
00:46:58,560 --> 00:47:00,400
you know we we we have mentioned the

1190
00:47:00,400 --> 00:47:02,000
claims are just uh

1191
00:47:02,000 --> 00:47:04,880
a pair of attributes right

1192
00:47:04,880 --> 00:47:07,599
uh and with that we we need to add those

1193
00:47:07,599 --> 00:47:08,800
claims

1194
00:47:08,800 --> 00:47:13,200
to a identity so now we need to declare

1195
00:47:13,200 --> 00:47:14,800
and instantiate

1196
00:47:14,800 --> 00:47:18,000
the uh identity and

1197
00:47:18,000 --> 00:47:22,400
what we need is a claims identity

1198
00:47:22,400 --> 00:47:25,280
which we can add claims to it

1199
00:47:25,280 --> 00:47:29,040
and then here what we want to have is

1200
00:47:29,040 --> 00:47:31,520
the authentication type

1201
00:47:31,520 --> 00:47:34,000
the authentication type let's give it a

1202
00:47:34,000 --> 00:47:35,599
name and then i'm going to talk about

1203
00:47:35,599 --> 00:47:37,119
this later

1204
00:47:37,119 --> 00:47:39,839
right so

1205
00:47:39,920 --> 00:47:40,960
let's

1206
00:47:40,960 --> 00:47:42,960
we're gonna use cookie authentication

1207
00:47:42,960 --> 00:47:44,559
which is the typical type of

1208
00:47:44,559 --> 00:47:47,119
authentication for a login page

1209
00:47:47,119 --> 00:47:49,440
right let's call it my cookie

1210
00:47:49,440 --> 00:47:50,319
uh

1211
00:47:50,319 --> 00:47:52,400
like my cookie authentication

1212
00:47:52,400 --> 00:47:53,520
okay

1213
00:47:53,520 --> 00:47:55,200
and give it you can give it whatever

1214
00:47:55,200 --> 00:47:57,119
name you want

1215
00:47:57,119 --> 00:47:59,280
so once we have the identity

1216
00:47:59,280 --> 00:48:01,599
uh then what we need is a claims

1217
00:48:01,599 --> 00:48:04,800
principle i'm going to instantiate that

1218
00:48:04,800 --> 00:48:05,599
and

1219
00:48:05,599 --> 00:48:08,559
it can be empty but you can also

1220
00:48:08,559 --> 00:48:11,599
provide a primary identity you can also

1221
00:48:11,599 --> 00:48:12,800
provide this

1222
00:48:12,800 --> 00:48:15,760
primary identity here

1223
00:48:15,760 --> 00:48:18,720
so now we have this security context

1224
00:48:18,720 --> 00:48:21,119
within the claims principle right we

1225
00:48:21,119 --> 00:48:23,040
have learned that

1226
00:48:23,040 --> 00:48:24,079
the

1227
00:48:24,079 --> 00:48:25,520
principle

1228
00:48:25,520 --> 00:48:27,760
contains the security context

1229
00:48:27,760 --> 00:48:30,319
now what we need to do we can see that

1230
00:48:30,319 --> 00:48:32,000
we generate the security context but

1231
00:48:32,000 --> 00:48:33,440
then

1232
00:48:33,440 --> 00:48:35,839
next step is we need to

1233
00:48:35,839 --> 00:48:38,240
encrypt and serialize the

1234
00:48:38,240 --> 00:48:41,119
security context and then it can go into

1235
00:48:41,119 --> 00:48:43,040
the cookie right

1236
00:48:43,040 --> 00:48:45,680
but we don't need to do that ourselves

1237
00:48:45,680 --> 00:48:48,880
we can use the http context object

1238
00:48:48,880 --> 00:48:52,079
it has a it has a sign

1239
00:48:52,079 --> 00:48:54,880
in async method here

1240
00:48:54,880 --> 00:48:57,680
which is a extension method you can see

1241
00:48:57,680 --> 00:49:00,000
it's a it's extension method it comes

1242
00:49:00,000 --> 00:49:01,280
from

1243
00:49:01,280 --> 00:49:05,440
the spd.net core http namespace

1244
00:49:05,440 --> 00:49:08,079
right so we can do that

1245
00:49:08,079 --> 00:49:09,119
and

1246
00:49:09,119 --> 00:49:10,400
here

1247
00:49:10,400 --> 00:49:13,359
we also want to specify

1248
00:49:13,359 --> 00:49:14,480
the

1249
00:49:14,480 --> 00:49:16,800
authentication scheme which is

1250
00:49:16,800 --> 00:49:19,359
the authentication type and we want this

1251
00:49:19,359 --> 00:49:21,359
authentication type to be exactly the

1252
00:49:21,359 --> 00:49:23,119
same as this one

1253
00:49:23,119 --> 00:49:26,240
right and then here we can provide the

1254
00:49:26,240 --> 00:49:28,640
principle that's the second parameter

1255
00:49:28,640 --> 00:49:30,720
all right so i'm going to put in the

1256
00:49:30,720 --> 00:49:32,559
claims principle here since this is

1257
00:49:32,559 --> 00:49:35,760
async right so we need to await it and

1258
00:49:35,760 --> 00:49:37,359
because of that

1259
00:49:37,359 --> 00:49:40,240
what we need to do is i'll change this

1260
00:49:40,240 --> 00:49:41,119
to

1261
00:49:41,119 --> 00:49:42,079
a

1262
00:49:42,079 --> 00:49:45,599
a task and it has to be async task and

1263
00:49:45,599 --> 00:49:48,319
because of that we'll also

1264
00:49:48,319 --> 00:49:49,599
make this one

1265
00:49:49,599 --> 00:49:52,480
async so this one is supposed to what it

1266
00:49:52,480 --> 00:49:55,280
does is that it's going to

1267
00:49:55,280 --> 00:49:57,920
serialize the claims principle into a

1268
00:49:57,920 --> 00:50:00,720
string and then encrypt that string save

1269
00:50:00,720 --> 00:50:03,920
that as a cookie in the http context

1270
00:50:03,920 --> 00:50:06,960
right into the cookie inside gtp context

1271
00:50:06,960 --> 00:50:08,319
object

1272
00:50:08,319 --> 00:50:10,000
and if everything is

1273
00:50:10,000 --> 00:50:12,559
good then we're going to redirect we're

1274
00:50:12,559 --> 00:50:14,400
going to redirect to a page so let's

1275
00:50:14,400 --> 00:50:16,640
just redirect to the index page

1276
00:50:16,640 --> 00:50:18,720
you can see that this redirect to page

1277
00:50:18,720 --> 00:50:21,119
it actually returns the redirect to page

1278
00:50:21,119 --> 00:50:22,160
result

1279
00:50:22,160 --> 00:50:24,480
so because of that we are going to

1280
00:50:24,480 --> 00:50:25,680
instead of

1281
00:50:25,680 --> 00:50:27,760
making this a void

1282
00:50:27,760 --> 00:50:30,240
we're going to make it return i action

1283
00:50:30,240 --> 00:50:32,400
result

1284
00:50:32,400 --> 00:50:34,720
of course here what we can do here we

1285
00:50:34,720 --> 00:50:37,440
have to fix it we can return the the

1286
00:50:37,440 --> 00:50:39,359
page result here

1287
00:50:39,359 --> 00:50:42,960
so what's going to happen here is that

1288
00:50:42,960 --> 00:50:44,319
it's going to

1289
00:50:44,319 --> 00:50:46,319
basically return

1290
00:50:46,319 --> 00:50:47,599
the view

1291
00:50:47,599 --> 00:50:49,839
right so this one is going to find the

1292
00:50:49,839 --> 00:50:52,640
index field and return the index field

1293
00:50:52,640 --> 00:50:55,280
right we we return the page result we're

1294
00:50:55,280 --> 00:50:58,640
returning the login.cs

1295
00:50:58,640 --> 00:51:02,880
html right which is the cshtml object

1296
00:51:02,880 --> 00:51:06,000
and if the uh the verification failed

1297
00:51:06,000 --> 00:51:08,720
then it will fall out of this branch

1298
00:51:08,720 --> 00:51:11,200
and again we're going to return a page

1299
00:51:11,200 --> 00:51:12,079
okay

1300
00:51:12,079 --> 00:51:15,040
so let's build this solution and then

1301
00:51:15,040 --> 00:51:17,440
let's run it right so because we did not

1302
00:51:17,440 --> 00:51:20,160
configure uh authorization that's why i

1303
00:51:20,160 --> 00:51:21,200
did not

1304
00:51:21,200 --> 00:51:23,760
redirect us to the login page directly

1305
00:51:23,760 --> 00:51:25,760
but we can go to the login page

1306
00:51:25,760 --> 00:51:28,240
right and then we can type in

1307
00:51:28,240 --> 00:51:30,880
the password

1308
00:51:30,880 --> 00:51:33,839
and if i type in something that is wrong

1309
00:51:33,839 --> 00:51:36,000
so it will return directly back to the

1310
00:51:36,000 --> 00:51:38,079
login page which is

1311
00:51:38,079 --> 00:51:40,720
this one right but if i

1312
00:51:40,720 --> 00:51:43,359
input the correct password

1313
00:51:43,359 --> 00:51:44,240
then

1314
00:51:44,240 --> 00:51:46,880
watch what happens

1315
00:51:46,880 --> 00:51:48,559
it throws exception

1316
00:51:48,559 --> 00:51:50,800
so let's look look into this exception

1317
00:51:50,800 --> 00:51:53,359
see it says that no sign in

1318
00:51:53,359 --> 00:51:55,520
authentication handlers are registered

1319
00:51:55,520 --> 00:51:58,000
did you forget to call the ad

1320
00:51:58,000 --> 00:52:00,880
authentication at cookie it tells you

1321
00:52:00,880 --> 00:52:03,359
exactly what you need to do here

1322
00:52:03,359 --> 00:52:05,520
but before we actually do this

1323
00:52:05,520 --> 00:52:07,440
let's try to understand what is actually

1324
00:52:07,440 --> 00:52:09,839
happening here where it says that on

1325
00:52:09,839 --> 00:52:11,520
this line

1326
00:52:11,520 --> 00:52:14,079
that something is is wrong

1327
00:52:14,079 --> 00:52:17,520
so what exactly is is wrong here right

1328
00:52:17,520 --> 00:52:19,280
let's look at read this error message

1329
00:52:19,280 --> 00:52:21,359
again it says there's no sign in

1330
00:52:21,359 --> 00:52:23,920
authentication handlers

1331
00:52:23,920 --> 00:52:26,240
authentication handlers so this is the

1332
00:52:26,240 --> 00:52:29,440
keyword authentication handlers

1333
00:52:29,440 --> 00:52:30,559
okay

1334
00:52:30,559 --> 00:52:33,119
so what is actually happening is that

1335
00:52:33,119 --> 00:52:36,400
this http contact sign in async under

1336
00:52:36,400 --> 00:52:38,960
the hood it uses the authentication

1337
00:52:38,960 --> 00:52:41,920
handler which is provided

1338
00:52:41,920 --> 00:52:43,040
to

1339
00:52:43,040 --> 00:52:44,240
this

1340
00:52:44,240 --> 00:52:46,800
uh through the eye authentication

1341
00:52:46,800 --> 00:52:48,880
service interface

1342
00:52:48,880 --> 00:52:51,200
okay so let's let's take a look at the

1343
00:52:51,200 --> 00:52:54,559
eye authentication service interface

1344
00:52:54,559 --> 00:52:56,319
see this interface contains the

1345
00:52:56,319 --> 00:52:59,359
abstraction of several methods

1346
00:52:59,359 --> 00:53:00,400
right

1347
00:53:00,400 --> 00:53:03,040
there is this sign async which is

1348
00:53:03,040 --> 00:53:04,160
exactly

1349
00:53:04,160 --> 00:53:05,359
uh the

1350
00:53:05,359 --> 00:53:07,359
the one that we're missing right it

1351
00:53:07,359 --> 00:53:10,720
contains sign out uh challenge for bid

1352
00:53:10,720 --> 00:53:14,480
and authenticate so these

1353
00:53:14,480 --> 00:53:16,160
are the abstractions of the

1354
00:53:16,160 --> 00:53:18,319
authentication handlers

1355
00:53:18,319 --> 00:53:20,800
right so what is complaining here is

1356
00:53:20,800 --> 00:53:24,720
that the http contacts.signing async is

1357
00:53:24,720 --> 00:53:26,480
trying to use the eye authentication

1358
00:53:26,480 --> 00:53:30,640
service interface but it cannot find any

1359
00:53:30,640 --> 00:53:32,640
concrete implementation of that

1360
00:53:32,640 --> 00:53:35,920
interface so we are missing no we don't

1361
00:53:35,920 --> 00:53:36,960
have the

1362
00:53:36,960 --> 00:53:38,720
handlers here

1363
00:53:38,720 --> 00:53:41,119
and it asks you to inject

1364
00:53:41,119 --> 00:53:42,480
right so this is the dependency

1365
00:53:42,480 --> 00:53:45,359
injection under the configure services

1366
00:53:45,359 --> 00:53:47,359
right it asks you to inject the

1367
00:53:47,359 --> 00:53:49,839
implementation of those handlers let's

1368
00:53:49,839 --> 00:53:52,640
take a step back and see what is

1369
00:53:52,640 --> 00:53:54,720
actually happening here as from the

1370
00:53:54,720 --> 00:53:57,040
design pattern point of view okay so

1371
00:53:57,040 --> 00:53:59,599
let's see this uh let's use this printf

1372
00:53:59,599 --> 00:54:02,640
in the c language for example right

1373
00:54:02,640 --> 00:54:04,880
usually this printf will

1374
00:54:04,880 --> 00:54:08,240
print to to the console to your screen

1375
00:54:08,240 --> 00:54:10,800
so this is the output the print div will

1376
00:54:10,800 --> 00:54:13,839
output to the console but if you

1377
00:54:13,839 --> 00:54:15,920
use different libraries it can go to the

1378
00:54:15,920 --> 00:54:19,359
console right it can also

1379
00:54:19,359 --> 00:54:20,400
go to

1380
00:54:20,400 --> 00:54:24,400
let's say a printer okay it can go to

1381
00:54:24,400 --> 00:54:26,640
any other i o devices

1382
00:54:26,640 --> 00:54:28,240
what is actually happening under the

1383
00:54:28,240 --> 00:54:31,040
hood is that the printf is not talking

1384
00:54:31,040 --> 00:54:31,839
to

1385
00:54:31,839 --> 00:54:34,400
these devices directly

1386
00:54:34,400 --> 00:54:36,319
what is actually talking to is a

1387
00:54:36,319 --> 00:54:39,680
abstraction of the the io devices in c

1388
00:54:39,680 --> 00:54:42,799
plus plus this would be a abstract class

1389
00:54:42,799 --> 00:54:45,040
so these drivers implement the

1390
00:54:45,040 --> 00:54:46,480
abstraction

1391
00:54:46,480 --> 00:54:49,200
and then as long as you import

1392
00:54:49,200 --> 00:54:51,440
the libraries of the corresponding

1393
00:54:51,440 --> 00:54:55,599
drivers then you are able to print to a

1394
00:54:55,599 --> 00:54:57,760
console or printer or other devices

1395
00:54:57,760 --> 00:55:01,200
right so what this print app is really

1396
00:55:01,200 --> 00:55:04,160
talking to is this abstraction so this

1397
00:55:04,160 --> 00:55:06,799
kind of design pattern this kind of

1398
00:55:06,799 --> 00:55:10,160
design pattern is is basically uh it's

1399
00:55:10,160 --> 00:55:11,200
everywhere

1400
00:55:11,200 --> 00:55:15,119
it's typically when you have uh some io

1401
00:55:15,119 --> 00:55:17,599
devices you don't want to

1402
00:55:17,599 --> 00:55:19,200
lock your

1403
00:55:19,200 --> 00:55:22,319
library to a particular

1404
00:55:22,319 --> 00:55:24,000
output device

1405
00:55:24,000 --> 00:55:25,599
right you don't want to for example you

1406
00:55:25,599 --> 00:55:26,960
don't want to log

1407
00:55:26,960 --> 00:55:30,559
your output to just sql server database

1408
00:55:30,559 --> 00:55:32,880
right by logging to a

1409
00:55:32,880 --> 00:55:36,640
specific sql server database library

1410
00:55:36,640 --> 00:55:40,000
you want to talk to a interface

1411
00:55:40,000 --> 00:55:44,000
and then develop all of these as plugins

1412
00:55:44,000 --> 00:55:46,720
so in our case it's the same situation

1413
00:55:46,720 --> 00:55:49,680
here we are having a

1414
00:55:49,680 --> 00:55:52,240
a bunch of authentication and

1415
00:55:52,240 --> 00:55:53,920
authorization

1416
00:55:53,920 --> 00:55:55,359
in this case we're talking about

1417
00:55:55,359 --> 00:55:58,160
authentication right we're having some

1418
00:55:58,160 --> 00:56:00,240
requirements for authentication and it

1419
00:56:00,240 --> 00:56:01,280
needs to

1420
00:56:01,280 --> 00:56:04,799
uh to serialize the information right

1421
00:56:04,799 --> 00:56:06,559
the security context

1422
00:56:06,559 --> 00:56:08,720
to either a cookie or token or something

1423
00:56:08,720 --> 00:56:11,359
else they are kind of like a i o

1424
00:56:11,359 --> 00:56:13,520
thing it's outside the application

1425
00:56:13,520 --> 00:56:16,799
boundary it's under the http protocol

1426
00:56:16,799 --> 00:56:17,839
right so

1427
00:56:17,839 --> 00:56:21,280
the security context can be stored or

1428
00:56:21,280 --> 00:56:24,480
can be serialized to either a cookie or

1429
00:56:24,480 --> 00:56:26,799
token or something else you don't want

1430
00:56:26,799 --> 00:56:29,760
to lock yourself to just cookie or just

1431
00:56:29,760 --> 00:56:31,280
a token like this right you don't want

1432
00:56:31,280 --> 00:56:33,200
to directly talk to it so what you

1433
00:56:33,200 --> 00:56:34,720
actually want to do is you want to do a

1434
00:56:34,720 --> 00:56:37,839
similar thing okay so inside your

1435
00:56:37,839 --> 00:56:41,359
application okay so let's use this uh

1436
00:56:41,359 --> 00:56:44,480
this square or rectangle as a boundary

1437
00:56:44,480 --> 00:56:46,799
for your application inside it you want

1438
00:56:46,799 --> 00:56:49,680
to talk to a abstraction and this is the

1439
00:56:49,680 --> 00:56:51,119
i

1440
00:56:51,119 --> 00:56:52,960
authentication

1441
00:56:52,960 --> 00:56:55,680
service this interface in c sharp

1442
00:56:55,680 --> 00:56:58,960
it contains the abstraction of of all of

1443
00:56:58,960 --> 00:57:01,680
your needs for authentication

1444
00:57:01,680 --> 00:57:04,480
right so your actual authentication

1445
00:57:04,480 --> 00:57:06,880
will just talk to this abstraction and

1446
00:57:06,880 --> 00:57:09,839
then the cookies or tokens the different

1447
00:57:09,839 --> 00:57:12,400
authentication handlers as long as it

1448
00:57:12,400 --> 00:57:14,799
implements this authentication service

1449
00:57:14,799 --> 00:57:17,200
then the only thing as a developer what

1450
00:57:17,200 --> 00:57:19,359
you need to do is to

1451
00:57:19,359 --> 00:57:21,760
tell the asp.net core

1452
00:57:21,760 --> 00:57:22,640
that

1453
00:57:22,640 --> 00:57:25,040
either you want a cookie authentication

1454
00:57:25,040 --> 00:57:27,760
handler to be injected or a token

1455
00:57:27,760 --> 00:57:30,480
authentication handler to be injected

1456
00:57:30,480 --> 00:57:31,440
or

1457
00:57:31,440 --> 00:57:33,280
both

1458
00:57:33,280 --> 00:57:35,040
okay or both

1459
00:57:35,040 --> 00:57:36,720
and that's where the authentication

1460
00:57:36,720 --> 00:57:39,119
scheme name or the authentication type

1461
00:57:39,119 --> 00:57:41,680
name come into play

1462
00:57:41,680 --> 00:57:43,839
right that that name comes into play

1463
00:57:43,839 --> 00:57:46,640
because it can be

1464
00:57:46,640 --> 00:57:49,839
this or this very cookie or token or

1465
00:57:49,839 --> 00:57:50,640
both

1466
00:57:50,640 --> 00:57:52,799
because there can be multiple

1467
00:57:52,799 --> 00:57:55,040
authentication handlers that implements

1468
00:57:55,040 --> 00:57:57,599
the eye authentication service

1469
00:57:57,599 --> 00:58:00,480
we want to give them different names so

1470
00:58:00,480 --> 00:58:02,880
that we can distinguish where asp.net

1471
00:58:02,880 --> 00:58:05,920
core can distinguish which is which we

1472
00:58:05,920 --> 00:58:10,079
can use the name to group the the cookie

1473
00:58:10,079 --> 00:58:11,200
the

1474
00:58:11,200 --> 00:58:13,119
security context which is the principal

1475
00:58:13,119 --> 00:58:14,799
identities

1476
00:58:14,799 --> 00:58:17,839
and the authentication handler itself

1477
00:58:17,839 --> 00:58:20,079
together and that's why we need to

1478
00:58:20,079 --> 00:58:22,559
specify the name everywhere

1479
00:58:22,559 --> 00:58:24,160
and what is that name

1480
00:58:24,160 --> 00:58:27,440
that is the authentication scheme or the

1481
00:58:27,440 --> 00:58:29,200
authentication type

1482
00:58:29,200 --> 00:58:30,640
which you have seen when i was

1483
00:58:30,640 --> 00:58:33,200
implementing it so let's jump into video

1484
00:58:33,200 --> 00:58:36,400
studio and see how we implement

1485
00:58:36,400 --> 00:58:37,280
these

1486
00:58:37,280 --> 00:58:39,520
right and it's actually very clear here

1487
00:58:39,520 --> 00:58:41,839
it's actually telling you you need to

1488
00:58:41,839 --> 00:58:43,839
add authentication

1489
00:58:43,839 --> 00:58:46,720
you need to do this

1490
00:58:46,799 --> 00:58:48,880
so let's copy this

1491
00:58:48,880 --> 00:58:51,520
and let's stop debugging and let's go

1492
00:58:51,520 --> 00:58:53,520
into our startup

1493
00:58:53,520 --> 00:58:56,079
where we can find this server configure

1494
00:58:56,079 --> 00:58:58,160
services services this is where we want

1495
00:58:58,160 --> 00:58:59,520
to inject

1496
00:58:59,520 --> 00:59:02,880
our authentication handler so over here

1497
00:59:02,880 --> 00:59:05,920
uh what we want to do is i'm going to

1498
00:59:05,920 --> 00:59:08,079
paste this over here right

1499
00:59:08,079 --> 00:59:10,720
so we're going to do this services.add

1500
00:59:10,720 --> 00:59:12,480
so basically we're adding services to a

1501
00:59:12,480 --> 00:59:14,559
collection you can see this is a service

1502
00:59:14,559 --> 00:59:16,960
collection interface here right we're

1503
00:59:16,960 --> 00:59:19,839
adding this authentication

1504
00:59:19,839 --> 00:59:22,720
handler to the to the service collection

1505
00:59:22,720 --> 00:59:26,880
and this ad cookie is adding the cookie

1506
00:59:26,880 --> 00:59:29,599
authentication handler right this means

1507
00:59:29,599 --> 00:59:30,480
that

1508
00:59:30,480 --> 00:59:33,680
all of the implementations first

1509
00:59:33,680 --> 00:59:36,400
encrypting and serializing the security

1510
00:59:36,400 --> 00:59:39,760
contacts will be injected into

1511
00:59:39,760 --> 00:59:41,440
asp.net core

1512
00:59:41,440 --> 00:59:43,839
by just calling this extension method

1513
00:59:43,839 --> 00:59:45,920
which is um

1514
00:59:45,920 --> 00:59:48,480
implemented by a speedometer core

1515
00:59:48,480 --> 00:59:50,319
right so we don't have to specifically

1516
00:59:50,319 --> 00:59:54,400
implement how does encryption decryption

1517
00:59:54,400 --> 00:59:56,720
uh serializing destroyizing works we

1518
00:59:56,720 --> 00:59:59,119
just need to add this cookie

1519
00:59:59,119 --> 01:00:01,760
authentication handler all we have to be

1520
01:00:01,760 --> 01:00:03,760
really taken care of is to give it a

1521
01:00:03,760 --> 01:00:05,200
name

1522
01:00:05,200 --> 01:00:08,319
right we can give our own name we can

1523
01:00:08,319 --> 01:00:11,520
yeah it's just a string right so

1524
01:00:11,520 --> 01:00:13,200
and then here let's take a look at the

1525
01:00:13,200 --> 01:00:16,960
the second parameter here

1526
01:00:16,960 --> 01:00:18,640
which is

1527
01:00:18,640 --> 01:00:21,839
the options so we want to

1528
01:00:21,839 --> 01:00:23,119
also

1529
01:00:23,119 --> 01:00:25,440
make sure we configure

1530
01:00:25,440 --> 01:00:28,000
our options correctly here and and in

1531
01:00:28,000 --> 01:00:29,440
here there's there's a lot of different

1532
01:00:29,440 --> 01:00:32,640
things we can configure right but

1533
01:00:32,640 --> 01:00:35,040
at this moment the most important thing

1534
01:00:35,040 --> 01:00:38,160
is that we need to configure our cookie

1535
01:00:38,160 --> 01:00:40,720
and especially our cookie name we want

1536
01:00:40,720 --> 01:00:43,440
this to be just like that

1537
01:00:43,440 --> 01:00:47,040
so this specifies the cookie name

1538
01:00:47,040 --> 01:00:48,480
which is

1539
01:00:48,480 --> 01:00:50,720
the most important aspect in in the

1540
01:00:50,720 --> 01:00:53,839
cookie authentication by doing so

1541
01:00:53,839 --> 01:00:56,559
you specify target of the serialization

1542
01:00:56,559 --> 01:01:00,160
and asp.net core knows which cookie

1543
01:01:00,160 --> 01:01:02,160
contains the authentication security

1544
01:01:02,160 --> 01:01:03,760
context

1545
01:01:03,760 --> 01:01:05,359
okay so let's

1546
01:01:05,359 --> 01:01:08,400
at this moment only configure the cookie

1547
01:01:08,400 --> 01:01:10,720
name here and then we can see that we

1548
01:01:10,720 --> 01:01:13,200
have been very careful of

1549
01:01:13,200 --> 01:01:15,119
using the same name

1550
01:01:15,119 --> 01:01:17,200
right in the cookie name

1551
01:01:17,200 --> 01:01:19,680
in the authentication scheme name

1552
01:01:19,680 --> 01:01:22,000
as well as in the

1553
01:01:22,000 --> 01:01:24,880
identity associate this cookie name with

1554
01:01:24,880 --> 01:01:28,240
identity and provide this cookie or the

1555
01:01:28,240 --> 01:01:30,160
authentication scheme name to the sign

1556
01:01:30,160 --> 01:01:32,079
where they are all the same

1557
01:01:32,079 --> 01:01:34,799
name so that we can kind of logically

1558
01:01:34,799 --> 01:01:36,480
group them together

1559
01:01:36,480 --> 01:01:38,960
of course the best practice here is to

1560
01:01:38,960 --> 01:01:41,040
declare a constant

1561
01:01:41,040 --> 01:01:43,359
right i'm not going to do that when we

1562
01:01:43,359 --> 01:01:45,680
actually implement a solution we should

1563
01:01:45,680 --> 01:01:47,119
actually declare

1564
01:01:47,119 --> 01:01:50,799
a constant for this in case we have some

1565
01:01:50,799 --> 01:01:53,359
tab typos all right so let's run the

1566
01:01:53,359 --> 01:01:55,039
solution again

1567
01:01:55,039 --> 01:01:56,799
okay i'm going to

1568
01:01:56,799 --> 01:02:00,480
bring up the developer tool right

1569
01:02:00,480 --> 01:02:03,280
by pressing f12 and then i'm going to go

1570
01:02:03,280 --> 01:02:04,400
to

1571
01:02:04,400 --> 01:02:06,960
right clicking on this double arrow and

1572
01:02:06,960 --> 01:02:08,960
then i go to applications

1573
01:02:08,960 --> 01:02:10,880
i want to look at the cookies right so

1574
01:02:10,880 --> 01:02:13,280
get go under cookies

1575
01:02:13,280 --> 01:02:15,920
right open this up and then go into this

1576
01:02:15,920 --> 01:02:17,839
domain right cookies are always

1577
01:02:17,839 --> 01:02:20,480
associated with specific domains so

1578
01:02:20,480 --> 01:02:22,720
we are looking at this domain so that's

1579
01:02:22,720 --> 01:02:24,480
why we have to go enter this domain and

1580
01:02:24,480 --> 01:02:27,200
we can see that we don't have my cookie

1581
01:02:27,200 --> 01:02:28,319
us

1582
01:02:28,319 --> 01:02:30,799
the cookie name we only have this by

1583
01:02:30,799 --> 01:02:33,480
default we have this we have this

1584
01:02:33,480 --> 01:02:37,200
anti-forgery uh a cookie here

1585
01:02:37,200 --> 01:02:40,000
right so we don't have our cookie yet

1586
01:02:40,000 --> 01:02:42,720
but let's watch what's happening here so

1587
01:02:42,720 --> 01:02:45,039
that's going to provide

1588
01:02:45,039 --> 01:02:47,520
the correct username and

1589
01:02:47,520 --> 01:02:49,200
password

1590
01:02:49,200 --> 01:02:51,359
and then let's watch whether we're going

1591
01:02:51,359 --> 01:02:53,119
to have a cookie or not

1592
01:02:53,119 --> 01:02:55,200
all right

1593
01:02:55,200 --> 01:02:57,599
so you can see that we have a cookie

1594
01:02:57,599 --> 01:02:59,680
right we have a cookie so this is all

1595
01:02:59,680 --> 01:03:00,960
encrypted

1596
01:03:00,960 --> 01:03:03,280
right and serialized so this contains

1597
01:03:03,280 --> 01:03:06,160
our uh security context which is the

1598
01:03:06,160 --> 01:03:08,240
claims principle but we can't see

1599
01:03:08,240 --> 01:03:10,079
anything because it's really uh

1600
01:03:10,079 --> 01:03:12,559
encrypted within this domain and where

1601
01:03:12,559 --> 01:03:14,559
does the cookie come from that comes

1602
01:03:14,559 --> 01:03:16,160
from

1603
01:03:16,160 --> 01:03:19,520
here so this http contact sign async

1604
01:03:19,520 --> 01:03:21,680
is triggered and it talks to the i

1605
01:03:21,680 --> 01:03:24,319
authentication service interface

1606
01:03:24,319 --> 01:03:27,119
and who has implemented that interface

1607
01:03:27,119 --> 01:03:30,319
that what we have chosen to inject into

1608
01:03:30,319 --> 01:03:33,359
our asp.net core by calling at cookie so

1609
01:03:33,359 --> 01:03:36,160
this cookie authentication handler

1610
01:03:36,160 --> 01:03:39,039
is injected and we have configured to

1611
01:03:39,039 --> 01:03:40,640
take this

1612
01:03:40,640 --> 01:03:42,799
authentication scheme name

1613
01:03:42,799 --> 01:03:44,720
right and we made sure we're using the

1614
01:03:44,720 --> 01:03:47,119
same authentication scheme name we we

1615
01:03:47,119 --> 01:03:49,200
grouped them all together

1616
01:03:49,200 --> 01:03:52,640
and so that when we trigger this method

1617
01:03:52,640 --> 01:03:55,760
it uses the cookie authentication

1618
01:03:55,760 --> 01:03:57,680
handler that we have injected into

1619
01:03:57,680 --> 01:04:00,880
asp.net core taking this name and

1620
01:04:00,880 --> 01:04:03,680
finally we can see that claim principle

1621
01:04:03,680 --> 01:04:07,119
security context is created over here

1622
01:04:07,119 --> 01:04:08,240
taking

1623
01:04:08,240 --> 01:04:09,039
the

1624
01:04:09,039 --> 01:04:11,520
cookie name okay so let's recap what we

1625
01:04:11,520 --> 01:04:13,359
have done today is

1626
01:04:13,359 --> 01:04:14,480
we

1627
01:04:14,480 --> 01:04:16,240
input username and password we

1628
01:04:16,240 --> 01:04:18,400
implemented this uh

1629
01:04:18,400 --> 01:04:21,680
verification process and we implemented

1630
01:04:21,680 --> 01:04:23,839
the generating process right we generate

1631
01:04:23,839 --> 01:04:26,480
the security context within the claims

1632
01:04:26,480 --> 01:04:28,400
claims principle

1633
01:04:28,400 --> 01:04:30,799
we injected the authentication the

1634
01:04:30,799 --> 01:04:33,280
cookie authentication handlers

1635
01:04:33,280 --> 01:04:36,160
right and we successfully created the

1636
01:04:36,160 --> 01:04:39,200
cookie so the cookie is now sent back

1637
01:04:39,200 --> 01:04:42,000
to the browser we saw that in the in the

1638
01:04:42,000 --> 01:04:44,000
browser developer tool

1639
01:04:44,000 --> 01:04:46,319
so in the next video we are going to

1640
01:04:46,319 --> 01:04:49,520
follow this line to see

1641
01:04:49,520 --> 01:04:50,480
whether

1642
01:04:50,480 --> 01:04:53,599
we have the cookie deserialized and

1643
01:04:53,599 --> 01:04:55,039
decrypted

1644
01:04:55,039 --> 01:04:58,160
i'll see you in the next one

1645
01:04:58,720 --> 01:05:00,799
so in the previous video we verified the

1646
01:05:00,799 --> 01:05:02,240
credential here

1647
01:05:02,240 --> 01:05:03,680
and then we generated the security

1648
01:05:03,680 --> 01:05:07,440
context serialized the security context

1649
01:05:07,440 --> 01:05:10,480
into a cookie and send that cookie back

1650
01:05:10,480 --> 01:05:12,960
to the browser right we could see the

1651
01:05:12,960 --> 01:05:16,160
cookie in the browser developer tool and

1652
01:05:16,160 --> 01:05:17,680
it looks like this

1653
01:05:17,680 --> 01:05:20,000
it is encrypted in this video let's

1654
01:05:20,000 --> 01:05:22,640
follow this arrow to look into what this

1655
01:05:22,640 --> 01:05:25,280
authentication does and how it does it

1656
01:05:25,280 --> 01:05:27,200
so i'm already from the login page

1657
01:05:27,200 --> 01:05:30,240
redirected back to the index page right

1658
01:05:30,240 --> 01:05:33,520
so let's set a breakpoint at the get

1659
01:05:33,520 --> 01:05:35,920
handler of the index page okay so let's

1660
01:05:35,920 --> 01:05:37,760
set a breakpoint right here

1661
01:05:37,760 --> 01:05:39,200
and then we'll see what happens i'm

1662
01:05:39,200 --> 01:05:41,359
going to refresh the page and then this

1663
01:05:41,359 --> 01:05:43,760
is triggered so let's watch what do we

1664
01:05:43,760 --> 01:05:46,160
have for the user and we can see that we

1665
01:05:46,160 --> 01:05:47,119
have

1666
01:05:47,119 --> 01:05:48,559
one identity

1667
01:05:48,559 --> 01:05:50,559
which is that's claims for identity

1668
01:05:50,559 --> 01:05:52,079
unfortunately

1669
01:05:52,079 --> 01:05:53,440
it is still

1670
01:05:53,440 --> 01:05:55,839
a anonymous identity

1671
01:05:55,839 --> 01:05:58,160
but we have already logged in we have

1672
01:05:58,160 --> 01:06:00,640
successfully generated the cookie why on

1673
01:06:00,640 --> 01:06:04,799
earth this primary identity is still a

1674
01:06:04,799 --> 01:06:07,359
anonymous identity let's go back to our

1675
01:06:07,359 --> 01:06:09,200
diagrams right over here

1676
01:06:09,200 --> 01:06:11,200
and we'll see that what is really going

1677
01:06:11,200 --> 01:06:12,960
on here okay so the browser does have

1678
01:06:12,960 --> 01:06:14,480
the cookie

1679
01:06:14,480 --> 01:06:16,559
and then when the brother sent another

1680
01:06:16,559 --> 01:06:19,119
request to the index page

1681
01:06:19,119 --> 01:06:21,440
right the cookie is definitely sent to

1682
01:06:21,440 --> 01:06:22,960
the server

1683
01:06:22,960 --> 01:06:23,920
right

1684
01:06:23,920 --> 01:06:25,599
but the fact that

1685
01:06:25,599 --> 01:06:28,559
we still see anonymous identity it means

1686
01:06:28,559 --> 01:06:31,200
the server didn't look at the cookie so

1687
01:06:31,200 --> 01:06:33,359
what is responsible to look at the

1688
01:06:33,359 --> 01:06:36,160
cookie okay so that's uh related to the

1689
01:06:36,160 --> 01:06:37,520
the middleware

1690
01:06:37,520 --> 01:06:40,079
so this is the this is the browser right

1691
01:06:40,079 --> 01:06:42,400
so the browser sends request

1692
01:06:42,400 --> 01:06:44,799
into asb.net core

1693
01:06:44,799 --> 01:06:46,880
what is responsible for precising the

1694
01:06:46,880 --> 01:06:49,599
request it's those middlewares that are

1695
01:06:49,599 --> 01:06:52,559
hooked together right and the request is

1696
01:06:52,559 --> 01:06:54,720
actually encapsulated in one object

1697
01:06:54,720 --> 01:06:58,480
which is the http context object right

1698
01:06:58,480 --> 01:07:01,200
that is the object we were looking at

1699
01:07:01,200 --> 01:07:02,880
when we were checking we were watching

1700
01:07:02,880 --> 01:07:05,280
here so we were watching this a base

1701
01:07:05,280 --> 01:07:07,520
that a base dot user right but it's

1702
01:07:07,520 --> 01:07:09,839
actually from the http

1703
01:07:09,839 --> 01:07:13,440
context so if we do http context we

1704
01:07:13,440 --> 01:07:14,880
would see

1705
01:07:14,880 --> 01:07:17,680
it would see the same thing

1706
01:07:17,680 --> 01:07:18,559
okay

1707
01:07:18,559 --> 01:07:21,359
and this user would also have

1708
01:07:21,359 --> 01:07:24,000
the primary identity and still

1709
01:07:24,000 --> 01:07:26,000
is unauthenticated

1710
01:07:26,000 --> 01:07:28,559
is false right so we know that along

1711
01:07:28,559 --> 01:07:31,119
these lines the request actually is

1712
01:07:31,119 --> 01:07:34,240
within the http context so there's got

1713
01:07:34,240 --> 01:07:35,839
to be a

1714
01:07:35,839 --> 01:07:39,359
middleware who's uh going to look into

1715
01:07:39,359 --> 01:07:42,400
the http header within the http context

1716
01:07:42,400 --> 01:07:44,079
and then populate

1717
01:07:44,079 --> 01:07:46,240
the security context

1718
01:07:46,240 --> 01:07:49,280
with the corresponding values so and

1719
01:07:49,280 --> 01:07:52,160
that middleware is our authentication

1720
01:07:52,160 --> 01:07:54,720
middleware

1721
01:07:54,880 --> 01:07:57,039
okay so when the authentication

1722
01:07:57,039 --> 01:08:00,799
middleware is looking at the http

1723
01:08:00,799 --> 01:08:02,000
request

1724
01:08:02,000 --> 01:08:04,880
within the http context

1725
01:08:04,880 --> 01:08:06,960
it should be able to

1726
01:08:06,960 --> 01:08:07,760
see

1727
01:08:07,760 --> 01:08:10,319
the header that contains the cookie and

1728
01:08:10,319 --> 01:08:13,280
then it will interpret that cookie and

1729
01:08:13,280 --> 01:08:16,640
after the processing it will populate

1730
01:08:16,640 --> 01:08:17,439
the

1731
01:08:17,439 --> 01:08:19,439
security context right the claims

1732
01:08:19,439 --> 01:08:22,238
principle with the values translated

1733
01:08:22,238 --> 01:08:24,799
from the cookie so that's the job for

1734
01:08:24,799 --> 01:08:26,719
the authentication middleware to do the

1735
01:08:26,719 --> 01:08:29,198
reason why the primary identity still is

1736
01:08:29,198 --> 01:08:31,679
still the anonymous identity and that's

1737
01:08:31,679 --> 01:08:33,759
because we didn't set up our

1738
01:08:33,759 --> 01:08:35,198
authentication middleware right the

1739
01:08:35,198 --> 01:08:37,520
authentication middleware is missing

1740
01:08:37,520 --> 01:08:39,120
that's why

1741
01:08:39,120 --> 01:08:41,600
it's still the anonymous one

1742
01:08:41,600 --> 01:08:44,399
so now what we need to do is very simple

1743
01:08:44,399 --> 01:08:47,198
we just need to insert

1744
01:08:47,198 --> 01:08:49,520
the authentication middleware in the

1745
01:08:49,520 --> 01:08:52,600
pipeline and to do that let's go to our

1746
01:08:52,600 --> 01:08:56,799
startup.cs file let's stop our debugging

1747
01:08:56,799 --> 01:08:59,759
and then we go to configure method

1748
01:08:59,759 --> 01:09:01,439
and over here

1749
01:09:01,439 --> 01:09:02,238
uh

1750
01:09:02,238 --> 01:09:05,359
above this authorization model need to

1751
01:09:05,359 --> 01:09:08,238
say use authentication right so this

1752
01:09:08,238 --> 01:09:10,399
basically inserted the authentication

1753
01:09:10,399 --> 01:09:13,839
middleware which is responsible to

1754
01:09:13,839 --> 01:09:16,640
call the authentication handler right so

1755
01:09:16,640 --> 01:09:19,279
if we look at our high authentication

1756
01:09:19,279 --> 01:09:21,040
service interface

1757
01:09:21,040 --> 01:09:24,799
we can see that this authenticate async

1758
01:09:24,799 --> 01:09:27,198
right we can see this is

1759
01:09:27,198 --> 01:09:28,319
the one

1760
01:09:28,319 --> 01:09:30,479
right so authenticate for the specific

1761
01:09:30,479 --> 01:09:32,880
authentication so this one is going to

1762
01:09:32,880 --> 01:09:35,920
be called and this method is going to be

1763
01:09:35,920 --> 01:09:38,158
called and is supposed to

1764
01:09:38,158 --> 01:09:40,799
uh be able to translate all of the

1765
01:09:40,799 --> 01:09:42,960
cookie into the

1766
01:09:42,960 --> 01:09:45,439
security context the claims principle

1767
01:09:45,439 --> 01:09:47,600
all right so let's see

1768
01:09:47,600 --> 01:09:51,439
once we added this uh what is going to

1769
01:09:51,439 --> 01:09:54,880
happen so everything that this up this

1770
01:09:54,880 --> 01:09:58,560
middleware needs is already injected

1771
01:09:58,560 --> 01:10:01,760
with these four lines of code okay so

1772
01:10:01,760 --> 01:10:03,520
this uh

1773
01:10:03,520 --> 01:10:05,840
we have injected the authentication

1774
01:10:05,840 --> 01:10:07,679
service which contains the cookie

1775
01:10:07,679 --> 01:10:09,679
authentication handlers

1776
01:10:09,679 --> 01:10:12,719
and that's why it's able to

1777
01:10:12,719 --> 01:10:16,159
convert the cookie into our claims

1778
01:10:16,159 --> 01:10:18,400
principle because we have already

1779
01:10:18,400 --> 01:10:19,600
injected

1780
01:10:19,600 --> 01:10:22,320
our cookie authentication service right

1781
01:10:22,320 --> 01:10:24,800
the cookie agent authentication handlers

1782
01:10:24,800 --> 01:10:27,120
all right so let's run a debug again and

1783
01:10:27,120 --> 01:10:30,560
see whether it's going to work this time

1784
01:10:30,560 --> 01:10:32,000
okay so

1785
01:10:32,000 --> 01:10:34,400
let's go to our login page okay we

1786
01:10:34,400 --> 01:10:36,400
haven't set up our

1787
01:10:36,400 --> 01:10:38,560
authorization yet so i have to manually

1788
01:10:38,560 --> 01:10:41,040
go to our login page

1789
01:10:41,040 --> 01:10:42,400
okay so

1790
01:10:42,400 --> 01:10:43,520
uh

1791
01:10:43,520 --> 01:10:45,360
we have logged in

1792
01:10:45,360 --> 01:10:46,800
and then

1793
01:10:46,800 --> 01:10:48,320
if we

1794
01:10:48,320 --> 01:10:50,080
refresh that page

1795
01:10:50,080 --> 01:10:51,679
and then we watch

1796
01:10:51,679 --> 01:10:54,800
the uh this one we could see the primary

1797
01:10:54,800 --> 01:10:57,760
identity and then we notice that this is

1798
01:10:57,760 --> 01:11:01,520
a dedicated property it's still false

1799
01:11:01,520 --> 01:11:03,280
so what is going on we have already put

1800
01:11:03,280 --> 01:11:05,520
the middleware there why is not

1801
01:11:05,520 --> 01:11:09,280
interpreting the cookie correctly

1802
01:11:09,280 --> 01:11:11,920
well we know that what is actually

1803
01:11:11,920 --> 01:11:14,480
interpreting the cookie is the

1804
01:11:14,480 --> 01:11:17,600
authentication handler or the service

1805
01:11:17,600 --> 01:11:21,040
that we injected into our pipeline

1806
01:11:21,040 --> 01:11:22,239
right

1807
01:11:22,239 --> 01:11:25,440
and that is this cookie authentication

1808
01:11:25,440 --> 01:11:28,159
service that we have already did

1809
01:11:28,159 --> 01:11:30,880
but we also know that

1810
01:11:30,880 --> 01:11:34,640
there could be multiple authentication

1811
01:11:34,640 --> 01:11:37,040
service that are injected right you can

1812
01:11:37,040 --> 01:11:38,239
use

1813
01:11:38,239 --> 01:11:39,760
multiple different cookies

1814
01:11:39,760 --> 01:11:41,920
authentication handler with different

1815
01:11:41,920 --> 01:11:44,480
names you can have cookie you can have

1816
01:11:44,480 --> 01:11:45,440
token

1817
01:11:45,440 --> 01:11:47,760
although we have inserted the middleware

1818
01:11:47,760 --> 01:11:50,640
in the pipeline it does not know

1819
01:11:50,640 --> 01:11:52,560
which scheme

1820
01:11:52,560 --> 01:11:55,679
you want to use right the scheme name

1821
01:11:55,679 --> 01:11:58,159
it provides a logical grouping that

1822
01:11:58,159 --> 01:12:01,600
groups your authentication handlers

1823
01:12:01,600 --> 01:12:03,199
your identities

1824
01:12:03,199 --> 01:12:05,520
your claims principles all together

1825
01:12:05,520 --> 01:12:08,320
right you have to tell the middleware

1826
01:12:08,320 --> 01:12:09,920
which scheme

1827
01:12:09,920 --> 01:12:12,719
you are trying to use so that

1828
01:12:12,719 --> 01:12:15,120
the middleware is able to locate

1829
01:12:15,120 --> 01:12:16,080
which

1830
01:12:16,080 --> 01:12:18,560
authentication service you are trying to

1831
01:12:18,560 --> 01:12:21,199
use to do the authentication

1832
01:12:21,199 --> 01:12:22,960
all right so the way to do that is

1833
01:12:22,960 --> 01:12:24,960
actually pretty simple so we have to

1834
01:12:24,960 --> 01:12:28,159
provide a authentication scheme name in

1835
01:12:28,159 --> 01:12:29,840
here to tell the authentication

1836
01:12:29,840 --> 01:12:32,159
middleware which authentication scheme

1837
01:12:32,159 --> 01:12:34,080
we wanted to use to do the

1838
01:12:34,080 --> 01:12:36,480
authentication so it's the same name as

1839
01:12:36,480 --> 01:12:38,560
the authentication service it's my

1840
01:12:38,560 --> 01:12:40,320
cookie boss

1841
01:12:40,320 --> 01:12:43,600
so let's give that a try

1842
01:12:43,600 --> 01:12:47,120
all right so we input our password

1843
01:12:47,120 --> 01:12:48,800
and then now we

1844
01:12:48,800 --> 01:12:51,280
arrive at our

1845
01:12:51,280 --> 01:12:52,880
breakpoint again

1846
01:12:52,880 --> 01:12:55,360
you can see the base that user contains

1847
01:12:55,360 --> 01:12:57,440
that identity and this time

1848
01:12:57,440 --> 01:12:58,560
the

1849
01:12:58,560 --> 01:13:00,320
identity

1850
01:13:00,320 --> 01:13:03,280
is authenticated and we can also see the

1851
01:13:03,280 --> 01:13:06,000
claims that we added over here

1852
01:13:06,000 --> 01:13:06,880
which

1853
01:13:06,880 --> 01:13:10,239
is you know the name is admin

1854
01:13:10,239 --> 01:13:11,840
and

1855
01:13:11,840 --> 01:13:15,440
the email address is admin mywebsite.com

1856
01:13:15,440 --> 01:13:17,120
all right finally we're able to

1857
01:13:17,120 --> 01:13:18,480
translate the cookie

1858
01:13:18,480 --> 01:13:20,480
into our security context

1859
01:13:20,480 --> 01:13:23,280
having said all of this uh it's actually

1860
01:13:23,280 --> 01:13:25,360
really simple right the reason why i

1861
01:13:25,360 --> 01:13:27,520
included so many details here is to

1862
01:13:27,520 --> 01:13:29,440
really try to make you understand

1863
01:13:29,440 --> 01:13:32,480
exactly what is happening here that we

1864
01:13:32,480 --> 01:13:35,199
need a middleware in order to do the

1865
01:13:35,199 --> 01:13:37,760
authentication in the middleware uses

1866
01:13:37,760 --> 01:13:40,880
the injected

1867
01:13:41,280 --> 01:13:43,360
cookie authentication handler

1868
01:13:43,360 --> 01:13:45,600
but because they're multiple different

1869
01:13:45,600 --> 01:13:46,880
there could be multiple different

1870
01:13:46,880 --> 01:13:48,719
authentication handlers you have to

1871
01:13:48,719 --> 01:13:50,000
specify

1872
01:13:50,000 --> 01:13:52,640
which is the one that should be used in

1873
01:13:52,640 --> 01:13:54,400
the middleware

1874
01:13:54,400 --> 01:13:57,040
right by specifying the name here right

1875
01:13:57,040 --> 01:13:59,040
you can add multiple

1876
01:13:59,040 --> 01:14:00,880
of these but

1877
01:14:00,880 --> 01:14:03,360
there can be only one that is used to do

1878
01:14:03,360 --> 01:14:05,760
the authentication and you just have to

1879
01:14:05,760 --> 01:14:07,520
specify the name

1880
01:14:07,520 --> 01:14:09,840
in this case we only have one

1881
01:14:09,840 --> 01:14:11,120
right so

1882
01:14:11,120 --> 01:14:13,760
all of these names are the same

1883
01:14:13,760 --> 01:14:15,280
including the name

1884
01:14:15,280 --> 01:14:17,440
in here

1885
01:14:17,440 --> 01:14:20,560
right for the identities

1886
01:14:20,560 --> 01:14:23,760
and for sending the cookie

1887
01:14:23,760 --> 01:14:25,920
all right so that's everything in this

1888
01:14:25,920 --> 01:14:26,880
video

1889
01:14:26,880 --> 01:14:29,040
i'll see you in the next one

1890
01:14:29,040 --> 01:14:31,520
in this video let's learn about how

1891
01:14:31,520 --> 01:14:34,480
authorization works in the asp.net core

1892
01:14:34,480 --> 01:14:36,800
so if you have a browser here and you

1893
01:14:36,800 --> 01:14:40,239
input a url in the browser

1894
01:14:40,239 --> 01:14:43,199
and you want to access a certain

1895
01:14:43,199 --> 01:14:46,080
endpoint or a certain page on the server

1896
01:14:46,080 --> 01:14:48,320
so let's say we have page

1897
01:14:48,320 --> 01:14:52,159
one page two page three and page four

1898
01:14:52,159 --> 01:14:53,840
different pages may have different

1899
01:14:53,840 --> 01:14:56,560
requirements for accessing the page

1900
01:14:56,560 --> 01:14:59,920
right for example page one could be

1901
01:14:59,920 --> 01:15:02,800
allowing anonymous users to access

1902
01:15:02,800 --> 01:15:04,560
whereas page two

1903
01:15:04,560 --> 01:15:07,360
could be a admin only page and maybe

1904
01:15:07,360 --> 01:15:11,040
page three will only allow people from

1905
01:15:11,040 --> 01:15:14,000
the hr department and page

1906
01:15:14,000 --> 01:15:15,760
4

1907
01:15:15,760 --> 01:15:18,239
may be looking at

1908
01:15:18,239 --> 01:15:19,840
you know you have to be

1909
01:15:19,840 --> 01:15:20,719
a

1910
01:15:20,719 --> 01:15:22,719
admin

1911
01:15:22,719 --> 01:15:25,840
and also you have to from the hr

1912
01:15:25,840 --> 01:15:28,400
department right it's a combination of

1913
01:15:28,400 --> 01:15:31,280
these two and maybe you have page five

1914
01:15:31,280 --> 01:15:34,560
where you have a for example a casino

1915
01:15:34,560 --> 01:15:36,320
online casino page

1916
01:15:36,320 --> 01:15:38,800
where you have to be older than 18 years

1917
01:15:38,800 --> 01:15:40,960
old okay so there's all different kinds

1918
01:15:40,960 --> 01:15:43,840
of requirements on different pages or

1919
01:15:43,840 --> 01:15:45,760
different endpoints we're talking about

1920
01:15:45,760 --> 01:15:48,400
web api so these requirements have to be

1921
01:15:48,400 --> 01:15:51,440
satisfied in order for the user

1922
01:15:51,440 --> 01:15:53,920
to access these pages

1923
01:15:53,920 --> 01:15:57,360
right we know that when a request is

1924
01:15:57,360 --> 01:15:58,560
sent to

1925
01:15:58,560 --> 01:16:00,640
sp9 core server

1926
01:16:00,640 --> 01:16:03,679
it goes through a pipeline after it goes

1927
01:16:03,679 --> 01:16:05,760
through the authentication middleware we

1928
01:16:05,760 --> 01:16:08,159
know the security context which contains

1929
01:16:08,159 --> 01:16:10,159
the identity of the user

1930
01:16:10,159 --> 01:16:13,520
and identity contains a set of claims

1931
01:16:13,520 --> 01:16:15,120
right and it's going to tell us whether

1932
01:16:15,120 --> 01:16:17,199
the user is or the main user

1933
01:16:17,199 --> 01:16:20,159
which department the user comes from

1934
01:16:20,159 --> 01:16:22,560
what what is the age of the user

1935
01:16:22,560 --> 01:16:24,719
so all of the information are contained

1936
01:16:24,719 --> 01:16:26,239
in the claims

1937
01:16:26,239 --> 01:16:27,199
and

1938
01:16:27,199 --> 01:16:29,280
of course before

1939
01:16:29,280 --> 01:16:31,120
the authentication

1940
01:16:31,120 --> 01:16:33,840
middleware comes in this

1941
01:16:33,840 --> 01:16:36,719
rotting middleware that tells us which

1942
01:16:36,719 --> 01:16:39,280
endpoint it's trying to

1943
01:16:39,280 --> 01:16:41,840
navigate to and then the authentication

1944
01:16:41,840 --> 01:16:45,199
middleware will be able to deserialize

1945
01:16:45,199 --> 01:16:46,480
the cookie

1946
01:16:46,480 --> 01:16:48,960
into our security contact the claims

1947
01:16:48,960 --> 01:16:52,480
principles identities as well as

1948
01:16:52,480 --> 01:16:53,520
claims

1949
01:16:53,520 --> 01:16:54,400
right

1950
01:16:54,400 --> 01:16:57,840
then at this point we know for example

1951
01:16:57,840 --> 01:17:00,719
we're trying to hit page two who's going

1952
01:17:00,719 --> 01:17:03,280
to check the requirement that's

1953
01:17:03,280 --> 01:17:05,040
the authorization

1954
01:17:05,040 --> 01:17:07,600
middleware

1955
01:17:07,679 --> 01:17:10,239
okay so the authorization middleware is

1956
01:17:10,239 --> 01:17:13,360
the middleware that will look at

1957
01:17:13,360 --> 01:17:13,610
the

1958
01:17:13,610 --> 01:17:14,880
[Music]

1959
01:17:14,880 --> 01:17:17,920
the claims from the user

1960
01:17:17,920 --> 01:17:21,199
and then look at the requirements from

1961
01:17:21,199 --> 01:17:24,000
the page and then compare them and make

1962
01:17:24,000 --> 01:17:28,320
sure that claims satisfy the requirement

1963
01:17:28,320 --> 01:17:30,560
and if that's the case then it will

1964
01:17:30,560 --> 01:17:31,760
allow

1965
01:17:31,760 --> 01:17:34,320
the user to access the page

1966
01:17:34,320 --> 01:17:38,480
otherwise it will return http 4 3

1967
01:17:38,480 --> 01:17:41,600
which is a challenge right but you don't

1968
01:17:41,600 --> 01:17:43,840
have the permission to access the page

1969
01:17:43,840 --> 01:17:46,719
although you're logged in so that's how

1970
01:17:46,719 --> 01:17:50,000
authorization works on higher level

1971
01:17:50,000 --> 01:17:52,159
but the question is what are those

1972
01:17:52,159 --> 01:17:55,199
requirements in asp.net core we actually

1973
01:17:55,199 --> 01:17:57,760
have requirement classes and then we can

1974
01:17:57,760 --> 01:18:00,560
group different requirements together

1975
01:18:00,560 --> 01:18:02,560
form a policy so

1976
01:18:02,560 --> 01:18:04,800
we would have a policy

1977
01:18:04,800 --> 01:18:08,640
and one policy can have one or many

1978
01:18:08,640 --> 01:18:11,440
requirements let's use two for example

1979
01:18:11,440 --> 01:18:13,840
so we can define these policies in the

1980
01:18:13,840 --> 01:18:15,920
configure services method

1981
01:18:15,920 --> 01:18:17,159
within the

1982
01:18:17,159 --> 01:18:19,440
startup.cs file which i'll show you

1983
01:18:19,440 --> 01:18:20,719
later

1984
01:18:20,719 --> 01:18:22,719
right we can define these policies and

1985
01:18:22,719 --> 01:18:25,199
then we can apply these policies by

1986
01:18:25,199 --> 01:18:27,840
using the authorized attribute on the

1987
01:18:27,840 --> 01:18:30,080
appropriate pages

1988
01:18:30,080 --> 01:18:32,320
which i'll also demonstrate later in the

1989
01:18:32,320 --> 01:18:34,560
next video in this video i just want to

1990
01:18:34,560 --> 01:18:37,199
give you an overview of the architecture

1991
01:18:37,199 --> 01:18:40,080
of how authorization works right so we

1992
01:18:40,080 --> 01:18:42,400
can define a policy which contains bunch

1993
01:18:42,400 --> 01:18:44,800
of requirements so these requirements

1994
01:18:44,800 --> 01:18:47,280
are pretty simple the presence

1995
01:18:47,280 --> 01:18:50,560
of the admin claim is there then we're

1996
01:18:50,560 --> 01:18:54,719
okay right if the department claim has a

1997
01:18:54,719 --> 01:18:57,440
hr value then we allow the user to

1998
01:18:57,440 --> 01:18:59,600
access page three right and this is

1999
01:18:59,600 --> 01:19:02,239
basically a simple combination of two

2000
01:19:02,239 --> 01:19:04,880
claims as long as they are there

2001
01:19:04,880 --> 01:19:07,199
then we allow access to it but then it

2002
01:19:07,199 --> 01:19:10,719
comes to this uh there is a comparison

2003
01:19:10,719 --> 01:19:12,239
how does the

2004
01:19:12,239 --> 01:19:14,480
the authorization middleware be able to

2005
01:19:14,480 --> 01:19:17,440
handle this type of requirement checking

2006
01:19:17,440 --> 01:19:18,320
well

2007
01:19:18,320 --> 01:19:21,600
we have to create custom requirement

2008
01:19:21,600 --> 01:19:25,199
ourselves and we have to implement

2009
01:19:25,199 --> 01:19:28,400
the logic of handling those requirements

2010
01:19:28,400 --> 01:19:31,440
as a matter of fact in asp.net core for

2011
01:19:31,440 --> 01:19:33,040
each requirement

2012
01:19:33,040 --> 01:19:35,199
there has to be a corresponding

2013
01:19:35,199 --> 01:19:38,560
authorization handler to handle those

2014
01:19:38,560 --> 01:19:39,840
requirements

2015
01:19:39,840 --> 01:19:43,199
right so basically

2016
01:19:43,199 --> 01:19:46,080
the authorization middleware

2017
01:19:46,080 --> 01:19:47,440
uses

2018
01:19:47,440 --> 01:19:49,199
something that is called high

2019
01:19:49,199 --> 01:19:50,400
authorization

2020
01:19:50,400 --> 01:19:51,520
service

2021
01:19:51,520 --> 01:19:53,920
just like the authentication middleware

2022
01:19:53,920 --> 01:19:56,400
uses the eye authentication service

2023
01:19:56,400 --> 01:19:58,960
right and then the the implementation of

2024
01:19:58,960 --> 01:20:02,239
the searches authorization service will

2025
01:20:02,239 --> 01:20:04,560
look through all of the requirements

2026
01:20:04,560 --> 01:20:07,199
right and find corresponding handlers to

2027
01:20:07,199 --> 01:20:09,440
handle each requirement

2028
01:20:09,440 --> 01:20:11,440
actually each requirement

2029
01:20:11,440 --> 01:20:14,080
must have a corresponding handler

2030
01:20:14,080 --> 01:20:16,639
for checking the presence of the claims

2031
01:20:16,639 --> 01:20:19,440
there's generic ones to do the job but

2032
01:20:19,440 --> 01:20:21,600
if you come up with a particular

2033
01:20:21,600 --> 01:20:24,560
requirement that needs particular logic

2034
01:20:24,560 --> 01:20:26,719
then you have to implement your own

2035
01:20:26,719 --> 01:20:29,679
requirement let's say requirement one is

2036
01:20:29,679 --> 01:20:33,120
a specific contains a specific logic you

2037
01:20:33,120 --> 01:20:35,120
have to implement that authentication

2038
01:20:35,120 --> 01:20:38,320
handler yourself by creating a class and

2039
01:20:38,320 --> 01:20:41,520
derive that class from authorization

2040
01:20:41,520 --> 01:20:43,760
handler to handle

2041
01:20:43,760 --> 01:20:47,440
this requirement right so in this case

2042
01:20:47,440 --> 01:20:49,199
the policy

2043
01:20:49,199 --> 01:20:51,760
is applied to a certain page right which

2044
01:20:51,760 --> 01:20:53,280
contains a

2045
01:20:53,280 --> 01:20:55,840
custom requirement requirement one and

2046
01:20:55,840 --> 01:20:57,920
then we have a requirement one

2047
01:20:57,920 --> 01:21:00,000
authorization handler to check the

2048
01:21:00,000 --> 01:21:01,120
requirement

2049
01:21:01,120 --> 01:21:03,920
and then the authorization service will

2050
01:21:03,920 --> 01:21:06,480
be invoked by the authorization

2051
01:21:06,480 --> 01:21:08,880
middleware and this completes the

2052
01:21:08,880 --> 01:21:12,080
authorization requirement checking

2053
01:21:12,080 --> 01:21:13,679
once it's complete

2054
01:21:13,679 --> 01:21:16,239
it's going to either grant you the

2055
01:21:16,239 --> 01:21:18,239
access to the page

2056
01:21:18,239 --> 01:21:19,520
or deny

2057
01:21:19,520 --> 01:21:21,600
you from accessing the page

2058
01:21:21,600 --> 01:21:23,360
just to recap

2059
01:21:23,360 --> 01:21:24,320
after

2060
01:21:24,320 --> 01:21:27,199
writing an authorization we know which

2061
01:21:27,199 --> 01:21:29,120
end point we're trying to hit like which

2062
01:21:29,120 --> 01:21:31,520
page we're trying to hit and we have all

2063
01:21:31,520 --> 01:21:32,960
of the claims

2064
01:21:32,960 --> 01:21:34,960
and then the authorization

2065
01:21:34,960 --> 01:21:36,080
middleware

2066
01:21:36,080 --> 01:21:38,080
will be able to check

2067
01:21:38,080 --> 01:21:41,199
what is the requirement a uses

2068
01:21:41,199 --> 01:21:43,440
authorization service

2069
01:21:43,440 --> 01:21:45,920
requirement handler in order to check

2070
01:21:45,920 --> 01:21:48,320
whether the logging user satisfies the

2071
01:21:48,320 --> 01:21:49,520
requirement

2072
01:21:49,520 --> 01:21:51,920
for this endpoint because it has the

2073
01:21:51,920 --> 01:21:54,320
identity of the login user it has all

2074
01:21:54,320 --> 01:21:56,400
the claims of the user then the

2075
01:21:56,400 --> 01:21:58,560
authorization handler will be able to

2076
01:21:58,560 --> 01:22:01,360
look at the claims and the requirement

2077
01:22:01,360 --> 01:22:04,080
and then compare them and implement any

2078
01:22:04,080 --> 01:22:08,239
type of logic that it needs to right the

2079
01:22:08,239 --> 01:22:11,040
generic authorization handlers is enough

2080
01:22:11,040 --> 01:22:13,520
to handle those simple scenarios where

2081
01:22:13,520 --> 01:22:15,440
you just say i want this user to be

2082
01:22:15,440 --> 01:22:16,560
admin

2083
01:22:16,560 --> 01:22:18,880
right there's no logic just checking the

2084
01:22:18,880 --> 01:22:20,400
presence of

2085
01:22:20,400 --> 01:22:21,199
the

2086
01:22:21,199 --> 01:22:24,000
claim or checking the value of the claim

2087
01:22:24,000 --> 01:22:26,159
of a certain claim so those ones can be

2088
01:22:26,159 --> 01:22:28,159
handled by generic

2089
01:22:28,159 --> 01:22:29,920
authorization handler

2090
01:22:29,920 --> 01:22:32,719
but for specific ones with specific

2091
01:22:32,719 --> 01:22:34,719
logics you can implement a handler

2092
01:22:34,719 --> 01:22:36,159
yourself

2093
01:22:36,159 --> 01:22:38,800
and this is the whole flow

2094
01:22:38,800 --> 01:22:41,920
and architecture of authorization i hope

2095
01:22:41,920 --> 01:22:43,040
it helps

2096
01:22:43,040 --> 01:22:44,800
and if you have any questions don't

2097
01:22:44,800 --> 01:22:47,199
hesitate to ask if not

2098
01:22:47,199 --> 01:22:48,880
i'll see you in the next video

2099
01:22:48,880 --> 01:22:50,480
where we're gonna implement

2100
01:22:50,480 --> 01:22:53,360
authorization

2101
01:22:53,360 --> 01:22:55,280
in this video we're going to learn about

2102
01:22:55,280 --> 01:22:57,440
how to implement authorization in the

2103
01:22:57,440 --> 01:22:58,960
asp.net core

2104
01:22:58,960 --> 01:23:01,280
so we have gone through this diagram in

2105
01:23:01,280 --> 01:23:03,360
the previous video and we know that the

2106
01:23:03,360 --> 01:23:06,480
first step we need to do is to apply

2107
01:23:06,480 --> 01:23:08,480
a requirement

2108
01:23:08,480 --> 01:23:10,719
the simplest requirement we can apply to

2109
01:23:10,719 --> 01:23:11,840
a page

2110
01:23:11,840 --> 01:23:15,360
is to deny anonymous users and to do

2111
01:23:15,360 --> 01:23:17,440
that it's very simple

2112
01:23:17,440 --> 01:23:22,000
let's go to a page in our case we have a

2113
01:23:22,000 --> 01:23:23,360
index page

2114
01:23:23,360 --> 01:23:28,400
okay and we can deny anonymous access on

2115
01:23:28,400 --> 01:23:30,880
the index page and we can just simply go

2116
01:23:30,880 --> 01:23:33,679
to the page behind here and then we go

2117
01:23:33,679 --> 01:23:36,800
to the class we decorate it with the

2118
01:23:36,800 --> 01:23:38,159
authorized

2119
01:23:38,159 --> 01:23:42,719
attribute which simply denies anonymous

2120
01:23:42,719 --> 01:23:44,159
identity

2121
01:23:44,159 --> 01:23:46,239
so i'm going to

2122
01:23:46,239 --> 01:23:49,040
import the namespace and now let's see

2123
01:23:49,040 --> 01:23:51,360
what's going to happen if

2124
01:23:51,360 --> 01:23:52,719
we run

2125
01:23:52,719 --> 01:23:54,800
our application so of course the first

2126
01:23:54,800 --> 01:23:57,679
page is trying to hit is the index page

2127
01:23:57,679 --> 01:24:01,440
but because our index page is protected

2128
01:24:01,440 --> 01:24:03,120
right so

2129
01:24:03,120 --> 01:24:05,760
it automatically redirects us to account

2130
01:24:05,760 --> 01:24:08,560
logging the login page right with the

2131
01:24:08,560 --> 01:24:12,480
return url to be nothing it's empty

2132
01:24:12,480 --> 01:24:14,880
if you happen to see the next page it

2133
01:24:14,880 --> 01:24:18,320
could mean that you had your cookie here

2134
01:24:18,320 --> 01:24:20,000
that you didn't clear the cookie right

2135
01:24:20,000 --> 01:24:21,840
because we haven't implemented the sign

2136
01:24:21,840 --> 01:24:23,040
out

2137
01:24:23,040 --> 01:24:25,040
functionality and if you didn't close

2138
01:24:25,040 --> 01:24:26,880
your browser so your browser session

2139
01:24:26,880 --> 01:24:28,000
will still

2140
01:24:28,000 --> 01:24:30,639
keep that cookie inside the

2141
01:24:30,639 --> 01:24:32,480
the browser

2142
01:24:32,480 --> 01:24:33,920
so once you clear the cookie you should

2143
01:24:33,920 --> 01:24:36,719
be able to see your login page

2144
01:24:36,719 --> 01:24:40,000
but what happens is really we have our

2145
01:24:40,000 --> 01:24:42,000
authorization middleware after the

2146
01:24:42,000 --> 01:24:44,159
rotting it is seeing that you try to hit

2147
01:24:44,159 --> 01:24:44,880
a

2148
01:24:44,880 --> 01:24:46,719
page that needs

2149
01:24:46,719 --> 01:24:50,080
identities but it's not there so it

2150
01:24:50,080 --> 01:24:53,360
returns a http 401 challenge

2151
01:24:53,360 --> 01:24:55,040
registration challenge which

2152
01:24:55,040 --> 01:24:57,280
automatically redirected you to login

2153
01:24:57,280 --> 01:24:59,280
page the reason why it knows where your

2154
01:24:59,280 --> 01:25:02,639
login page is is that by default the

2155
01:25:02,639 --> 01:25:04,960
login page is supposed to be placed in

2156
01:25:04,960 --> 01:25:07,440
the account folder and supposed to be

2157
01:25:07,440 --> 01:25:09,600
called login right the page is supposed

2158
01:25:09,600 --> 01:25:11,280
to be called login

2159
01:25:11,280 --> 01:25:14,000
it happens to be the case that we

2160
01:25:14,000 --> 01:25:17,120
followed the convention right so if we

2161
01:25:17,120 --> 01:25:19,040
change just temporarily we change the

2162
01:25:19,040 --> 01:25:21,760
folder to account one and then if we run

2163
01:25:21,760 --> 01:25:24,000
our application again let's see what

2164
01:25:24,000 --> 01:25:25,040
happens

2165
01:25:25,040 --> 01:25:27,520
now it's trying to still look for

2166
01:25:27,520 --> 01:25:31,040
the login page but then it says h2v4

2167
01:25:31,040 --> 01:25:32,960
okay so to

2168
01:25:32,960 --> 01:25:36,560
explicitly specify where your login page

2169
01:25:36,560 --> 01:25:37,600
is

2170
01:25:37,600 --> 01:25:39,440
you need to go to

2171
01:25:39,440 --> 01:25:43,199
your startup.cs and then go under the

2172
01:25:43,199 --> 01:25:44,880
uh the configure

2173
01:25:44,880 --> 01:25:46,480
services here

2174
01:25:46,480 --> 01:25:50,000
and inside the cookie authentication

2175
01:25:50,000 --> 01:25:52,480
handler here we can specify where the

2176
01:25:52,480 --> 01:25:54,800
login page is right so we can say login

2177
01:25:54,800 --> 01:25:55,760
path

2178
01:25:55,760 --> 01:25:59,679
right so in here we can just specify

2179
01:25:59,679 --> 01:26:00,960
account

2180
01:26:00,960 --> 01:26:03,040
and then login

2181
01:26:03,040 --> 01:26:05,440
well we can specify account one because

2182
01:26:05,440 --> 01:26:08,960
we apply local one right if we

2183
01:26:08,960 --> 01:26:11,040
specify this here

2184
01:26:11,040 --> 01:26:14,320
right and just pay attention that here

2185
01:26:14,320 --> 01:26:16,639
uh we haven't even logged in yet so so

2186
01:26:16,639 --> 01:26:18,800
this is still part of authentication

2187
01:26:18,800 --> 01:26:20,480
that's why we're configuring

2188
01:26:20,480 --> 01:26:22,239
authentication we're not configuring

2189
01:26:22,239 --> 01:26:23,920
authorization yet

2190
01:26:23,920 --> 01:26:25,920
all right so let's run the application

2191
01:26:25,920 --> 01:26:27,040
again

2192
01:26:27,040 --> 01:26:29,679
and then this time it successfully

2193
01:26:29,679 --> 01:26:33,120
located the login page under account one

2194
01:26:33,120 --> 01:26:36,239
right so let's change it back to account

2195
01:26:36,239 --> 01:26:38,800
and let's change this

2196
01:26:38,800 --> 01:26:42,239
to the folder back to account

2197
01:26:42,239 --> 01:26:43,600
and that

2198
01:26:43,600 --> 01:26:46,159
is supposed to work all right so let's

2199
01:26:46,159 --> 01:26:49,199
input our username and password

2200
01:26:49,199 --> 01:26:51,920
and now we successfully accessed our

2201
01:26:51,920 --> 01:26:54,800
index page right our welcome page and

2202
01:26:54,800 --> 01:26:57,120
from our developer tool we can see the

2203
01:26:57,120 --> 01:27:00,400
cookie is present now okay so let's

2204
01:27:00,400 --> 01:27:03,280
delete this cookie for now

2205
01:27:03,280 --> 01:27:05,920
and then close this developer tool just

2206
01:27:05,920 --> 01:27:08,719
close the window going back to our code

2207
01:27:08,719 --> 01:27:10,639
the next thing i want to show you is

2208
01:27:10,639 --> 01:27:13,360
that placing the attribute right the

2209
01:27:13,360 --> 01:27:15,840
requirement on the page or on any

2210
01:27:15,840 --> 01:27:17,120
endpoint

2211
01:27:17,120 --> 01:27:19,600
requires the middleware to be present

2212
01:27:19,600 --> 01:27:22,560
right so because if you place a

2213
01:27:22,560 --> 01:27:23,920
requirement there and there's no

2214
01:27:23,920 --> 01:27:26,400
middleware and nothing is dependency

2215
01:27:26,400 --> 01:27:27,600
injected

2216
01:27:27,600 --> 01:27:29,440
then it's not going to do anything and

2217
01:27:29,440 --> 01:27:31,440
it's actually going to throw an error so

2218
01:27:31,440 --> 01:27:33,280
let's see what happens there so because

2219
01:27:33,280 --> 01:27:35,280
we already have the authorization

2220
01:27:35,280 --> 01:27:36,800
middleware placed

2221
01:27:36,800 --> 01:27:39,120
right over here right so if we comment

2222
01:27:39,120 --> 01:27:40,400
this out

2223
01:27:40,400 --> 01:27:41,920
and then we run it let's see what

2224
01:27:41,920 --> 01:27:44,080
happens now now we can see it throws an

2225
01:27:44,080 --> 01:27:47,280
error and the error is very descriptive

2226
01:27:47,280 --> 01:27:50,000
it says that this endpoint index

2227
01:27:50,000 --> 01:27:52,800
contains authorization metadata

2228
01:27:52,800 --> 01:27:55,199
but a middleware was not found that

2229
01:27:55,199 --> 01:27:57,440
supports authorization

2230
01:27:57,440 --> 01:28:00,320
right and then it tells you what to do

2231
01:28:00,320 --> 01:28:02,880
well you can see that microsoft has come

2232
01:28:02,880 --> 01:28:05,600
up with really nice really detailed

2233
01:28:05,600 --> 01:28:08,480
error messages for developer to code

2234
01:28:08,480 --> 01:28:12,080
many years ago it is in this case

2235
01:28:12,080 --> 01:28:14,320
anyways this is what i want to show you

2236
01:28:14,320 --> 01:28:15,199
that

2237
01:28:15,199 --> 01:28:18,800
if you decorate a endpoint

2238
01:28:18,800 --> 01:28:20,880
with your requirement you have to

2239
01:28:20,880 --> 01:28:24,159
specify the authorization all right so

2240
01:28:24,159 --> 01:28:28,719
next let's add another page here

2241
01:28:28,719 --> 01:28:32,239
and then let's call this page the hr

2242
01:28:32,239 --> 01:28:34,000
department

2243
01:28:34,000 --> 01:28:36,080
right so this is going to be the hr

2244
01:28:36,080 --> 01:28:39,440
department landing page

2245
01:28:39,440 --> 01:28:42,239
and we're going to create a reader page

2246
01:28:42,239 --> 01:28:45,440
which is amt1

2247
01:28:45,440 --> 01:28:47,920
and then let's call it

2248
01:28:47,920 --> 01:28:50,400
human resource

2249
01:28:50,400 --> 01:28:52,800
and let's add some style and let's use

2250
01:28:52,800 --> 01:28:55,120
the same styling and copy and paste that

2251
01:28:55,120 --> 01:28:57,679
over to our human resource

2252
01:28:57,679 --> 01:29:00,000
cshtml

2253
01:29:00,000 --> 01:29:01,040
page

2254
01:29:01,040 --> 01:29:03,440
over here and then

2255
01:29:03,440 --> 01:29:04,800
so this is

2256
01:29:04,800 --> 01:29:06,560
we're going to change the title here to

2257
01:29:06,560 --> 01:29:07,920
human

2258
01:29:07,920 --> 01:29:10,400
resource and delete this learn about

2259
01:29:10,400 --> 01:29:11,360
here

2260
01:29:11,360 --> 01:29:14,320
we need to specify a policy that

2261
01:29:14,320 --> 01:29:16,239
requires the

2262
01:29:16,239 --> 01:29:17,760
department claim

2263
01:29:17,760 --> 01:29:20,800
to see whether the department is hr and

2264
01:29:20,800 --> 01:29:21,600
then

2265
01:29:21,600 --> 01:29:25,440
we assign this requirement to the policy

2266
01:29:25,440 --> 01:29:28,080
and then we apply this policy

2267
01:29:28,080 --> 01:29:29,120
to

2268
01:29:29,120 --> 01:29:32,320
the page so in order to specify the

2269
01:29:32,320 --> 01:29:35,840
requirement and group the requirements

2270
01:29:35,840 --> 01:29:37,120
into

2271
01:29:37,120 --> 01:29:38,480
the policy

2272
01:29:38,480 --> 01:29:41,199
we need to configure authorization

2273
01:29:41,199 --> 01:29:42,560
okay and

2274
01:29:42,560 --> 01:29:44,320
and you know where we should go we

2275
01:29:44,320 --> 01:29:46,800
should go to startup.cs and then go

2276
01:29:46,800 --> 01:29:49,199
under configure version server configure

2277
01:29:49,199 --> 01:29:52,000
services here this one dependency inject

2278
01:29:52,000 --> 01:29:53,520
a lot of

2279
01:29:53,520 --> 01:29:56,400
services for authentication purpose

2280
01:29:56,400 --> 01:29:58,960
of course we have another one that is

2281
01:29:58,960 --> 01:30:00,480
similar to this

2282
01:30:00,480 --> 01:30:03,440
which is add authorization right so

2283
01:30:03,440 --> 01:30:06,960
we'll dependency inject services

2284
01:30:06,960 --> 01:30:09,679
as well as figuring authorization over

2285
01:30:09,679 --> 01:30:12,000
here and what we can do with the options

2286
01:30:12,000 --> 01:30:12,800
here

2287
01:30:12,800 --> 01:30:15,920
is that we can add a policy okay and

2288
01:30:15,920 --> 01:30:18,400
then we can give the policy a name so

2289
01:30:18,400 --> 01:30:21,360
this one is uh

2290
01:30:21,360 --> 01:30:23,679
let's call it must

2291
01:30:23,679 --> 01:30:25,040
belong

2292
01:30:25,040 --> 01:30:26,000
to

2293
01:30:26,000 --> 01:30:28,080
hr

2294
01:30:28,080 --> 01:30:29,760
department

2295
01:30:29,760 --> 01:30:31,840
so this is the policy name and then you

2296
01:30:31,840 --> 01:30:34,800
can see that we need to specify how this

2297
01:30:34,800 --> 01:30:36,159
policy works

2298
01:30:36,159 --> 01:30:39,360
was action delegate right and for that

2299
01:30:39,360 --> 01:30:40,880
we can just use

2300
01:30:40,880 --> 01:30:43,040
lambda expressions or and then we can

2301
01:30:43,040 --> 01:30:45,920
say policy dot require

2302
01:30:45,920 --> 01:30:48,800
and we're gonna require claim the claim

2303
01:30:48,800 --> 01:30:51,600
type is department

2304
01:30:51,600 --> 01:30:54,320
and the value has to be

2305
01:30:54,320 --> 01:30:55,760
hr

2306
01:30:55,760 --> 01:30:58,639
we have added our first policy here we

2307
01:30:58,639 --> 01:31:00,239
added this

2308
01:31:00,239 --> 01:31:01,440
claim

2309
01:31:01,440 --> 01:31:03,120
to this policy

2310
01:31:03,120 --> 01:31:06,719
right and now we can apply this policy

2311
01:31:06,719 --> 01:31:08,080
on our

2312
01:31:08,080 --> 01:31:10,320
human resource page and we can go over

2313
01:31:10,320 --> 01:31:12,080
here

2314
01:31:12,080 --> 01:31:14,719
and we can apply this again it's the

2315
01:31:14,719 --> 01:31:18,000
same attribute authorize attribute

2316
01:31:18,000 --> 01:31:20,800
do control dot to import namespace

2317
01:31:20,800 --> 01:31:23,040
and over here we can say

2318
01:31:23,040 --> 01:31:24,159
policy

2319
01:31:24,159 --> 01:31:26,560
equals this policy name

2320
01:31:26,560 --> 01:31:29,679
so now what we are saying is that

2321
01:31:29,679 --> 01:31:32,560
the user must have a

2322
01:31:32,560 --> 01:31:35,679
claim that satisfies this policy and

2323
01:31:35,679 --> 01:31:38,560
what is the policy is really asking for

2324
01:31:38,560 --> 01:31:40,880
is very simple it requires the

2325
01:31:40,880 --> 01:31:42,800
department

2326
01:31:42,800 --> 01:31:45,840
claims value to be hr

2327
01:31:45,840 --> 01:31:47,600
but at this moment

2328
01:31:47,600 --> 01:31:50,560
if we go to our login page right we

2329
01:31:50,560 --> 01:31:54,239
created our claim to only have

2330
01:31:54,239 --> 01:31:57,280
the name and email we don't have a

2331
01:31:57,280 --> 01:32:00,000
department claim yet so at this moment

2332
01:32:00,000 --> 01:32:02,320
if i do control f5

2333
01:32:02,320 --> 01:32:04,639
it's going to build the application and

2334
01:32:04,639 --> 01:32:06,080
it's going to run the application and

2335
01:32:06,080 --> 01:32:08,080
then we'll see what happens

2336
01:32:08,080 --> 01:32:10,480
right first of all i got a login and

2337
01:32:10,480 --> 01:32:12,480
then i'm going to insert

2338
01:32:12,480 --> 01:32:15,040
my password over here

2339
01:32:15,040 --> 01:32:18,000
okay so no problem accessing the index

2340
01:32:18,000 --> 01:32:19,120
page

2341
01:32:19,120 --> 01:32:23,120
but if we're trying to access our hr

2342
01:32:23,120 --> 01:32:25,280
our human resource page i'm going to hit

2343
01:32:25,280 --> 01:32:28,159
enter it's going to tell me access

2344
01:32:28,159 --> 01:32:30,639
denied you see the access denied and

2345
01:32:30,639 --> 01:32:32,320
it's trying to say that hey the access

2346
01:32:32,320 --> 01:32:34,239
denied page is not there

2347
01:32:34,239 --> 01:32:35,600
right so

2348
01:32:35,600 --> 01:32:38,840
you can see that again this is

2349
01:32:38,840 --> 01:32:41,600
uh by default

2350
01:32:41,600 --> 01:32:43,760
the access denied page supposed to be

2351
01:32:43,760 --> 01:32:45,920
under the account page

2352
01:32:45,920 --> 01:32:46,719
and

2353
01:32:46,719 --> 01:32:49,520
if we were to specify where the access

2354
01:32:49,520 --> 01:32:51,840
denied page is

2355
01:32:51,840 --> 01:32:55,280
we're again going back to startup.cs

2356
01:32:55,280 --> 01:32:57,040
then you can see we specify the login

2357
01:32:57,040 --> 01:32:59,199
page right and then we can specify the

2358
01:32:59,199 --> 01:33:00,960
access denied page

2359
01:33:00,960 --> 01:33:03,199
right over here

2360
01:33:03,199 --> 01:33:06,719
okay so we can explicitly specify this

2361
01:33:06,719 --> 01:33:09,040
and then we can just copy this name and

2362
01:33:09,040 --> 01:33:11,679
then we just add another reader page

2363
01:33:11,679 --> 01:33:14,960
click on add specify the name as access

2364
01:33:14,960 --> 01:33:18,159
denied coming over here and again we're

2365
01:33:18,159 --> 01:33:19,440
gonna say

2366
01:33:19,440 --> 01:33:23,760
our title is access denied

2367
01:33:23,760 --> 01:33:26,159
and then here we're going to say

2368
01:33:26,159 --> 01:33:28,880
you don't have you don't have access

2369
01:33:28,880 --> 01:33:30,719
to the page

2370
01:33:30,719 --> 01:33:34,239
you are looking for so with this simple

2371
01:33:34,239 --> 01:33:37,520
change if we access our human resource

2372
01:33:37,520 --> 01:33:40,320
page again it redirected us to the

2373
01:33:40,320 --> 01:33:42,880
access denied page right this looks a

2374
01:33:42,880 --> 01:33:45,120
little bit better than before so then

2375
01:33:45,120 --> 01:33:46,880
how do we gain access

2376
01:33:46,880 --> 01:33:50,320
to our human resource page the answer is

2377
01:33:50,320 --> 01:33:53,520
pretty simple we go to our login page

2378
01:33:53,520 --> 01:33:56,560
and then here we are going to add

2379
01:33:56,560 --> 01:34:00,560
another claim here we're going to add

2380
01:34:01,760 --> 01:34:03,840
a

2381
01:34:03,840 --> 01:34:04,719
claim

2382
01:34:04,719 --> 01:34:06,800
right this is the type

2383
01:34:06,800 --> 01:34:08,320
and then the value

2384
01:34:08,320 --> 01:34:11,040
let's say hr and this has to be exactly

2385
01:34:11,040 --> 01:34:13,679
the same as where we configured on the

2386
01:34:13,679 --> 01:34:15,840
startup.cs here

2387
01:34:15,840 --> 01:34:17,600
we're going to say the type name is

2388
01:34:17,600 --> 01:34:18,880
department

2389
01:34:18,880 --> 01:34:21,199
right and the value is hr

2390
01:34:21,199 --> 01:34:22,880
and so here

2391
01:34:22,880 --> 01:34:25,040
the claim

2392
01:34:25,040 --> 01:34:27,120
claim type name is department and the

2393
01:34:27,120 --> 01:34:29,840
value is hr so which does change again

2394
01:34:29,840 --> 01:34:31,120
let's run it

2395
01:34:31,120 --> 01:34:34,400
once again okay so you can see that i am

2396
01:34:34,400 --> 01:34:36,639
logged in already because i didn't close

2397
01:34:36,639 --> 01:34:39,120
my all of my browsers so

2398
01:34:39,120 --> 01:34:42,639
the cookie is still inside here

2399
01:34:42,639 --> 01:34:44,880
right so this is the old cookie it

2400
01:34:44,880 --> 01:34:46,719
doesn't have the new

2401
01:34:46,719 --> 01:34:47,679
uh

2402
01:34:47,679 --> 01:34:50,159
the new claims so i have to delete this

2403
01:34:50,159 --> 01:34:52,159
and if in this case

2404
01:34:52,159 --> 01:34:54,480
at this moment if i refresh it takes me

2405
01:34:54,480 --> 01:34:56,080
to the login page

2406
01:34:56,080 --> 01:34:59,280
where i'm going to re-authenticate

2407
01:34:59,280 --> 01:35:01,199
and then i'm going to click on the login

2408
01:35:01,199 --> 01:35:02,400
page

2409
01:35:02,400 --> 01:35:05,600
now my cookie regenerated this cookie

2410
01:35:05,600 --> 01:35:07,520
will contain the new claim

2411
01:35:07,520 --> 01:35:09,920
so now let's try to access

2412
01:35:09,920 --> 01:35:12,960
our human resource page you see now we

2413
01:35:12,960 --> 01:35:15,840
have access to our human resource page

2414
01:35:15,840 --> 01:35:17,840
so this is a simple

2415
01:35:17,840 --> 01:35:20,320
uh condition here right we're just

2416
01:35:20,320 --> 01:35:21,600
checking

2417
01:35:21,600 --> 01:35:23,440
whether or not

2418
01:35:23,440 --> 01:35:26,840
our cookie contains this particular

2419
01:35:26,840 --> 01:35:30,400
claim okay what if we want to check a

2420
01:35:30,400 --> 01:35:32,880
presence of a certain claim

2421
01:35:32,880 --> 01:35:35,600
again in a simple case for that we are

2422
01:35:35,600 --> 01:35:36,800
going to

2423
01:35:36,800 --> 01:35:40,080
create a let's say let's

2424
01:35:40,080 --> 01:35:42,560
create a control panel page or let's

2425
01:35:42,560 --> 01:35:44,320
create a settings page let's call it

2426
01:35:44,320 --> 01:35:45,679
settings page

2427
01:35:45,679 --> 01:35:48,159
and the settings page can only be

2428
01:35:48,159 --> 01:35:49,440
accessed

2429
01:35:49,440 --> 01:35:51,840
by a admin

2430
01:35:51,840 --> 01:35:53,360
we're not going to do anything on the

2431
01:35:53,360 --> 01:35:54,480
page

2432
01:35:54,480 --> 01:35:57,760
but in here we are going to add the

2433
01:35:57,760 --> 01:35:59,440
author

2434
01:35:59,440 --> 01:36:02,800
the authorized attribute

2435
01:36:02,800 --> 01:36:04,080
and then

2436
01:36:04,080 --> 01:36:06,880
import namespace here and then specify

2437
01:36:06,880 --> 01:36:08,480
the policy

2438
01:36:08,480 --> 01:36:10,880
to be admin

2439
01:36:10,880 --> 01:36:11,840
only

2440
01:36:11,840 --> 01:36:14,000
right so this is the admin only policy

2441
01:36:14,000 --> 01:36:16,320
which we haven't configured yet

2442
01:36:16,320 --> 01:36:18,080
we're going to come over here and we're

2443
01:36:18,080 --> 01:36:20,960
going to add the admin only policy

2444
01:36:20,960 --> 01:36:23,119
okay so let's add the admin only policy

2445
01:36:23,119 --> 01:36:24,719
on the top the sequence doesn't really

2446
01:36:24,719 --> 01:36:27,280
matter here um i'm just thinking admin

2447
01:36:27,280 --> 01:36:29,679
is really one of the first to come to

2448
01:36:29,679 --> 01:36:31,440
mind so we're gonna

2449
01:36:31,440 --> 01:36:32,400
just

2450
01:36:32,400 --> 01:36:33,440
uh

2451
01:36:33,440 --> 01:36:35,600
specify on the top

2452
01:36:35,600 --> 01:36:38,080
and then here we're gonna say policy

2453
01:36:38,080 --> 01:36:40,880
again using lambda expression

2454
01:36:40,880 --> 01:36:43,920
we're going to i'm going to say policy

2455
01:36:43,920 --> 01:36:46,239
dot require claim

2456
01:36:46,239 --> 01:36:47,679
and then

2457
01:36:47,679 --> 01:36:50,239
you can see there is a signature which

2458
01:36:50,239 --> 01:36:51,520
only takes

2459
01:36:51,520 --> 01:36:54,560
the claim type and in this case it's

2460
01:36:54,560 --> 01:36:57,520
called main claim right and then

2461
01:36:57,520 --> 01:36:59,679
we have already applied this up in only

2462
01:36:59,679 --> 01:37:00,719
policy

2463
01:37:00,719 --> 01:37:02,239
on the

2464
01:37:02,239 --> 01:37:03,119
uh

2465
01:37:03,119 --> 01:37:04,880
settings page

2466
01:37:04,880 --> 01:37:06,719
right right over here the mean only

2467
01:37:06,719 --> 01:37:08,719
policy the next thing we need to do is

2468
01:37:08,719 --> 01:37:10,960
to in the login page

2469
01:37:10,960 --> 01:37:11,840
uh

2470
01:37:11,840 --> 01:37:13,360
we need to make sure

2471
01:37:13,360 --> 01:37:15,280
that we're gonna add

2472
01:37:15,280 --> 01:37:18,960
a another claim and this claims name is

2473
01:37:18,960 --> 01:37:21,119
admin and

2474
01:37:21,119 --> 01:37:23,360
well this dialog doesn't really matter

2475
01:37:23,360 --> 01:37:25,119
but let's set it to true we're going to

2476
01:37:25,119 --> 01:37:27,840
run control f5 and again

2477
01:37:27,840 --> 01:37:29,840
we're going to clear our cookie because

2478
01:37:29,840 --> 01:37:32,080
we didn't have a sign up page and i

2479
01:37:32,080 --> 01:37:35,600
didn't close my browser

2480
01:37:35,600 --> 01:37:38,080
so i'm gonna refresh this again coming

2481
01:37:38,080 --> 01:37:39,440
back to the

2482
01:37:39,440 --> 01:37:42,239
the login page try to log in again in

2483
01:37:42,239 --> 01:37:44,480
order to get the admin

2484
01:37:44,480 --> 01:37:46,480
claim so

2485
01:37:46,480 --> 01:37:49,280
now i have this cookie

2486
01:37:49,280 --> 01:37:52,080
newly generated and this should contain

2487
01:37:52,080 --> 01:37:54,560
our main claim

2488
01:37:54,560 --> 01:37:57,040
and now i can access

2489
01:37:57,040 --> 01:37:59,280
right i can access the settings page

2490
01:37:59,280 --> 01:38:00,960
without this claim

2491
01:38:00,960 --> 01:38:03,679
you won't have access to it let's see

2492
01:38:03,679 --> 01:38:06,320
what happens if we do that again delete

2493
01:38:06,320 --> 01:38:08,159
this cookie

2494
01:38:08,159 --> 01:38:11,119
refresh the page try to log in

2495
01:38:11,119 --> 01:38:13,760
go into index page now

2496
01:38:13,760 --> 01:38:16,159
manually navigate to the settings page

2497
01:38:16,159 --> 01:38:18,320
and now it says access denied right this

2498
01:38:18,320 --> 01:38:20,560
is exactly what's supposed to happen

2499
01:38:20,560 --> 01:38:24,320
and what if we create a human resource

2500
01:38:24,320 --> 01:38:28,880
manager page right so let's add a

2501
01:38:28,880 --> 01:38:31,360
another page and let's call it hr

2502
01:38:31,360 --> 01:38:32,400
manager

2503
01:38:32,400 --> 01:38:35,760
right so the hr manager page contains

2504
01:38:35,760 --> 01:38:38,800
you know some information or something

2505
01:38:38,800 --> 01:38:40,719
for the htm manager to do so this is the

2506
01:38:40,719 --> 01:38:43,520
ngr manager page and then here

2507
01:38:43,520 --> 01:38:47,920
we are going to specify a policy to be a

2508
01:38:47,920 --> 01:38:49,199
hr

2509
01:38:49,199 --> 01:38:51,440
manager only

2510
01:38:51,440 --> 01:38:53,119
something like that

2511
01:38:53,119 --> 01:38:55,360
okay so that's good and now let's

2512
01:38:55,360 --> 01:38:59,119
configure this policy and this hr

2513
01:38:59,119 --> 01:39:00,400
manager

2514
01:39:00,400 --> 01:39:02,639
is our manager manager only is that what

2515
01:39:02,639 --> 01:39:04,639
we specified

2516
01:39:04,639 --> 01:39:07,199
hr manager only and over here

2517
01:39:07,199 --> 01:39:09,199
again we're going to say policy

2518
01:39:09,199 --> 01:39:10,800
policy dot

2519
01:39:10,800 --> 01:39:13,360
require claim we're going to copy this

2520
01:39:13,360 --> 01:39:16,320
right and then we can chain it by saying

2521
01:39:16,320 --> 01:39:17,760
require claim

2522
01:39:17,760 --> 01:39:19,679
so let's change the format a little bit

2523
01:39:19,679 --> 01:39:22,800
so that it looks better

2524
01:39:23,119 --> 01:39:25,520
so when we chain it what we are really

2525
01:39:25,520 --> 01:39:28,719
seeing is that we need this claim to be

2526
01:39:28,719 --> 01:39:29,840
like this

2527
01:39:29,840 --> 01:39:33,440
and we need the next claim which is

2528
01:39:33,440 --> 01:39:34,320
a

2529
01:39:34,320 --> 01:39:37,760
manager claim to be present as well

2530
01:39:37,760 --> 01:39:38,880
right

2531
01:39:38,880 --> 01:39:42,159
so this is a end from this claim to this

2532
01:39:42,159 --> 01:39:44,000
claim is the end

2533
01:39:44,000 --> 01:39:46,080
relationship

2534
01:39:46,080 --> 01:39:48,080
so once we've done that

2535
01:39:48,080 --> 01:39:50,880
we can close this off and of course we

2536
01:39:50,880 --> 01:39:53,360
already had a department hr department

2537
01:39:53,360 --> 01:39:54,400
and then

2538
01:39:54,400 --> 01:39:56,800
the manager claim is not there if we're

2539
01:39:56,800 --> 01:39:59,040
running this just like that

2540
01:39:59,040 --> 01:40:01,760
without the manager claim we are

2541
01:40:01,760 --> 01:40:04,800
expecting to see access the night page

2542
01:40:04,800 --> 01:40:06,320
okay of course

2543
01:40:06,320 --> 01:40:07,600
first of all

2544
01:40:07,600 --> 01:40:10,480
i'm going to clear this cookie again f5

2545
01:40:10,480 --> 01:40:12,480
to see the login page and then input

2546
01:40:12,480 --> 01:40:14,000
your username and password click on the

2547
01:40:14,000 --> 01:40:15,280
login page

2548
01:40:15,280 --> 01:40:16,320
now

2549
01:40:16,320 --> 01:40:18,880
navigate to the

2550
01:40:18,880 --> 01:40:20,159
hr

2551
01:40:20,159 --> 01:40:23,040
manager page and

2552
01:40:23,040 --> 01:40:25,040
we see the access denied

2553
01:40:25,040 --> 01:40:27,920
right so in order to fix that we need to

2554
01:40:27,920 --> 01:40:31,520
go to our login page and over here

2555
01:40:31,520 --> 01:40:33,520
we are going to add

2556
01:40:33,520 --> 01:40:35,360
a

2557
01:40:35,360 --> 01:40:37,679
manager claim again the value doesn't

2558
01:40:37,679 --> 01:40:39,360
really matter because we're just

2559
01:40:39,360 --> 01:40:41,600
checking the presence of

2560
01:40:41,600 --> 01:40:43,199
the claim

2561
01:40:43,199 --> 01:40:45,840
but just to make it complete so we add a

2562
01:40:45,840 --> 01:40:47,840
true as the value

2563
01:40:47,840 --> 01:40:49,440
and then we're going to build it coming

2564
01:40:49,440 --> 01:40:50,719
back to here

2565
01:40:50,719 --> 01:40:55,360
delete this cookie and refresh the page

2566
01:40:55,360 --> 01:40:58,000
we're going to log in

2567
01:40:58,000 --> 01:41:01,440
now the cookie should have the manager

2568
01:41:01,440 --> 01:41:02,960
claim in it

2569
01:41:02,960 --> 01:41:06,639
it also has hr department claim in it

2570
01:41:06,639 --> 01:41:08,880
and we should be able to access

2571
01:41:08,880 --> 01:41:10,560
our

2572
01:41:10,560 --> 01:41:14,000
hr manager page just like that so we can

2573
01:41:14,000 --> 01:41:16,719
see the hr manager page so in this video

2574
01:41:16,719 --> 01:41:18,719
we have seen how we group different

2575
01:41:18,719 --> 01:41:22,080
claims into policy right we have simple

2576
01:41:22,080 --> 01:41:23,679
ones

2577
01:41:23,679 --> 01:41:26,639
and we have combinations

2578
01:41:26,639 --> 01:41:29,280
in the next video we are going to create

2579
01:41:29,280 --> 01:41:32,239
a more complicated case where we have

2580
01:41:32,239 --> 01:41:34,080
specific logic

2581
01:41:34,080 --> 01:41:36,239
right and then we would have to create

2582
01:41:36,239 --> 01:41:38,400
this requirement handler right the

2583
01:41:38,400 --> 01:41:40,719
authorization handler to specifically

2584
01:41:40,719 --> 01:41:43,280
handling that requirement right and

2585
01:41:43,280 --> 01:41:45,440
we're going to see it in the next video

2586
01:41:45,440 --> 01:41:47,280
if you have any questions please don't

2587
01:41:47,280 --> 01:41:49,760
hesitate to ask if not i'm going to see

2588
01:41:49,760 --> 01:41:52,639
you in the next one

2589
01:41:52,639 --> 01:41:54,800
so we have seen this cookie have been

2590
01:41:54,800 --> 01:41:56,239
always here

2591
01:41:56,239 --> 01:41:59,040
as long as if i keep the browser open

2592
01:41:59,040 --> 01:42:02,080
okay so even after i close the tab if i

2593
01:42:02,080 --> 01:42:03,280
have another

2594
01:42:03,280 --> 01:42:05,920
chrome browser open this cookie will

2595
01:42:05,920 --> 01:42:08,560
always stay in there so in this video

2596
01:42:08,560 --> 01:42:10,719
before we go any further let's implement

2597
01:42:10,719 --> 01:42:12,800
a sign out functionality so that we can

2598
01:42:12,800 --> 01:42:15,280
get rid of this cookie when we click on

2599
01:42:15,280 --> 01:42:17,760
the sign out button if we come to our

2600
01:42:17,760 --> 01:42:20,560
login page we can see that we have the

2601
01:42:20,560 --> 01:42:22,639
sign in async

2602
01:42:22,639 --> 01:42:25,040
extension method so this sign async

2603
01:42:25,040 --> 01:42:27,360
helped us to serialize the claims

2604
01:42:27,360 --> 01:42:29,520
principle right the security context

2605
01:42:29,520 --> 01:42:32,000
into a cookie similarly there is a sign

2606
01:42:32,000 --> 01:42:34,480
out async that can help us get rid of

2607
01:42:34,480 --> 01:42:37,520
the cookie so we can implement that in a

2608
01:42:37,520 --> 01:42:40,800
logout page let's go ahead and create a

2609
01:42:40,800 --> 01:42:43,520
logout page under the account folder

2610
01:42:43,520 --> 01:42:45,440
right razer page

2611
01:42:45,440 --> 01:42:48,239
let's simply call it logout

2612
01:42:48,239 --> 01:42:50,719
and for this page we don't need to have

2613
01:42:50,719 --> 01:42:52,400
any ui

2614
01:42:52,400 --> 01:42:54,880
the only thing we would need

2615
01:42:54,880 --> 01:42:58,560
is a on post method and of course it's

2616
01:42:58,560 --> 01:43:01,520
going to be on post async

2617
01:43:01,520 --> 01:43:02,719
because

2618
01:43:02,719 --> 01:43:04,480
we are going to

2619
01:43:04,480 --> 01:43:06,719
use cyanoasync

2620
01:43:06,719 --> 01:43:08,080
and then after that we need to do a

2621
01:43:08,080 --> 01:43:11,520
redirect so we need to implement this

2622
01:43:11,520 --> 01:43:14,960
very similar to the sign in method we'll

2623
01:43:14,960 --> 01:43:17,520
try to use the should be context the

2624
01:43:17,520 --> 01:43:19,520
sign out

2625
01:43:19,520 --> 01:43:22,320
async method this is not in http

2626
01:43:22,320 --> 01:43:24,320
contacts this is the extension method

2627
01:43:24,320 --> 01:43:26,320
we'll do a control dot

2628
01:43:26,320 --> 01:43:28,880
to import namespace from speed.net core

2629
01:43:28,880 --> 01:43:31,520
dot authentication

2630
01:43:31,520 --> 01:43:33,440
and then here we'll have a

2631
01:43:33,440 --> 01:43:35,679
authentication scheme name which is our

2632
01:43:35,679 --> 01:43:37,520
authentication scheme name we'll have to

2633
01:43:37,520 --> 01:43:38,800
specify

2634
01:43:38,800 --> 01:43:40,880
right like i said before it's better to

2635
01:43:40,880 --> 01:43:42,880
use a constant

2636
01:43:42,880 --> 01:43:46,159
for this in case we have a typo so but

2637
01:43:46,159 --> 01:43:47,760
for demonstration purpose i'm not going

2638
01:43:47,760 --> 01:43:48,800
to have it

2639
01:43:48,800 --> 01:43:51,600
so because we will need to do a redirect

2640
01:43:51,600 --> 01:43:54,080
that's why we need to have a wait there

2641
01:43:54,080 --> 01:43:56,480
so we're going to redirect to

2642
01:43:56,480 --> 01:43:57,440
our

2643
01:43:57,440 --> 01:43:58,880
index page

2644
01:43:58,880 --> 01:44:00,159
just like that

2645
01:44:00,159 --> 01:44:02,480
and that's it for our

2646
01:44:02,480 --> 01:44:04,960
logout page right we don't need a ui so

2647
01:44:04,960 --> 01:44:07,119
who's going to call this who's going to

2648
01:44:07,119 --> 01:44:09,040
trigger this on post

2649
01:44:09,040 --> 01:44:11,360
right so someone has to post to this

2650
01:44:11,360 --> 01:44:12,880
logo page

2651
01:44:12,880 --> 01:44:16,320
so for that we will need to create a

2652
01:44:16,320 --> 01:44:18,080
partial view we're going to put it in

2653
01:44:18,080 --> 01:44:21,199
the the layout page where we have this

2654
01:44:21,199 --> 01:44:23,040
header right we're gonna put it

2655
01:44:23,040 --> 01:44:24,639
somewhere here

2656
01:44:24,639 --> 01:44:27,199
for us to click the log out button

2657
01:44:27,199 --> 01:44:28,159
so

2658
01:44:28,159 --> 01:44:30,560
we can definitely just code it directly

2659
01:44:30,560 --> 01:44:32,320
in the layout page but we can also

2660
01:44:32,320 --> 01:44:34,639
create a partial view so i like to

2661
01:44:34,639 --> 01:44:36,639
create a partial view for that and for

2662
01:44:36,639 --> 01:44:38,880
creating a partial view it's really

2663
01:44:38,880 --> 01:44:41,600
really simple it's very similar to it's

2664
01:44:41,600 --> 01:44:43,360
almost the same as

2665
01:44:43,360 --> 01:44:46,639
in mvc so instead of using this add

2666
01:44:46,639 --> 01:44:48,639
razor page thing which currently doesn't

2667
01:44:48,639 --> 01:44:50,639
have a really good support for creating

2668
01:44:50,639 --> 01:44:52,800
partial view i'm just going to copy

2669
01:44:52,800 --> 01:44:55,600
this validation script partial i'm going

2670
01:44:55,600 --> 01:44:58,080
to paste it in here and then i'm going

2671
01:44:58,080 --> 01:44:59,199
to change

2672
01:44:59,199 --> 01:45:02,480
the the name to be underscore

2673
01:45:02,480 --> 01:45:04,239
login

2674
01:45:04,239 --> 01:45:06,800
let's call it login status

2675
01:45:06,800 --> 01:45:09,119
partial

2676
01:45:09,119 --> 01:45:11,679
okay and within here of course we don't

2677
01:45:11,679 --> 01:45:14,320
need this we'll need just some razor

2678
01:45:14,320 --> 01:45:17,040
syntax here well we're going to say

2679
01:45:17,040 --> 01:45:18,719
if the user

2680
01:45:18,719 --> 01:45:21,840
right if the user.identity

2681
01:45:21,840 --> 01:45:23,920
if the default energy is

2682
01:45:23,920 --> 01:45:26,639
authenticated right if it's not a

2683
01:45:26,639 --> 01:45:28,560
anonymous one then we're going to do

2684
01:45:28,560 --> 01:45:32,159
something otherwise if it is anonymous

2685
01:45:32,159 --> 01:45:34,560
identity then we'll do something else

2686
01:45:34,560 --> 01:45:36,560
let's implement the simplest case which

2687
01:45:36,560 --> 01:45:38,400
is the anonymous one so we're going to

2688
01:45:38,400 --> 01:45:42,000
have a link which just looks like a

2689
01:45:42,000 --> 01:45:43,440
a link button

2690
01:45:43,440 --> 01:45:45,400
and we're going to use

2691
01:45:45,400 --> 01:45:47,600
btn-link class

2692
01:45:47,600 --> 01:45:49,360
and

2693
01:45:49,360 --> 01:45:51,600
and then we're going to use tag helper

2694
01:45:51,600 --> 01:45:53,600
to link to a page

2695
01:45:53,600 --> 01:45:56,840
which is inside our account folder

2696
01:45:56,840 --> 01:46:01,840
and and it is the login page of course

2697
01:46:01,840 --> 01:46:03,920
and the label is logging and then here

2698
01:46:03,920 --> 01:46:06,480
when the user is authenticated we need

2699
01:46:06,480 --> 01:46:09,280
to allow user to click on a button to

2700
01:46:09,280 --> 01:46:11,520
log out right so for that we need to

2701
01:46:11,520 --> 01:46:12,880
have a form

2702
01:46:12,880 --> 01:46:14,960
right and the form

2703
01:46:14,960 --> 01:46:17,760
behavior is post

2704
01:46:17,760 --> 01:46:18,639
meaning

2705
01:46:18,639 --> 01:46:20,320
you know clicking on the submit button

2706
01:46:20,320 --> 01:46:24,000
in the forum will post to a certain page

2707
01:46:24,000 --> 01:46:26,480
and this form is going to use inline

2708
01:46:26,480 --> 01:46:29,280
class and it's going to be

2709
01:46:29,280 --> 01:46:31,040
linked to

2710
01:46:31,040 --> 01:46:32,080
the

2711
01:46:32,080 --> 01:46:33,520
log

2712
01:46:33,520 --> 01:46:35,360
logout page

2713
01:46:35,360 --> 01:46:38,000
right under the account folder

2714
01:46:38,000 --> 01:46:38,960
so

2715
01:46:38,960 --> 01:46:40,960
and we're gonna display a welcome

2716
01:46:40,960 --> 01:46:43,040
message first

2717
01:46:43,040 --> 01:46:46,560
we're welcoming the user to the system

2718
01:46:46,560 --> 01:46:50,639
uh use the default identity

2719
01:46:50,639 --> 01:46:53,280
and then we're gonna have a button

2720
01:46:53,280 --> 01:46:56,080
and the type is going to be a submit

2721
01:46:56,080 --> 01:46:58,480
button and the class

2722
01:46:58,480 --> 01:47:00,560
we're going to have a

2723
01:47:00,560 --> 01:47:02,560
little bit margin here

2724
01:47:02,560 --> 01:47:04,639
and same thing i'm going to use a link

2725
01:47:04,639 --> 01:47:06,639
button

2726
01:47:06,639 --> 01:47:09,520
and it's a logout as the label

2727
01:47:09,520 --> 01:47:11,520
when user click on this button

2728
01:47:11,520 --> 01:47:14,080
this is going to trigger http post and

2729
01:47:14,080 --> 01:47:16,560
then this is going to be post to the

2730
01:47:16,560 --> 01:47:17,920
logout page

2731
01:47:17,920 --> 01:47:19,440
which we have

2732
01:47:19,440 --> 01:47:22,560
just implemented here so

2733
01:47:22,560 --> 01:47:24,080
when this

2734
01:47:24,080 --> 01:47:26,000
page handler receives

2735
01:47:26,000 --> 01:47:29,280
the http post request

2736
01:47:29,280 --> 01:47:31,119
it's going to simply sign out which

2737
01:47:31,119 --> 01:47:33,119
means it's going to kill the cookie and

2738
01:47:33,119 --> 01:47:35,040
then redirect to the index page now we

2739
01:47:35,040 --> 01:47:37,040
have created this partial view we have

2740
01:47:37,040 --> 01:47:39,280
to use it in the layout

2741
01:47:39,280 --> 01:47:41,600
and we're going to use it right here

2742
01:47:41,600 --> 01:47:44,800
so first of all we'll have a div to wrap

2743
01:47:44,800 --> 01:47:48,000
around it and i'm going to use a class

2744
01:47:48,000 --> 01:47:49,119
so that

2745
01:47:49,119 --> 01:47:51,920
it's going to have uh it's going to

2746
01:47:51,920 --> 01:47:53,679
align to the right we're going to use

2747
01:47:53,679 --> 01:47:55,920
margin right

2748
01:47:55,920 --> 01:47:58,800
and then we're going to use the partial

2749
01:47:58,800 --> 01:48:02,080
the partial tag helper

2750
01:48:02,080 --> 01:48:04,960
to use our login status partial view

2751
01:48:04,960 --> 01:48:05,760
here

2752
01:48:05,760 --> 01:48:08,560
okay so we're all set and i'm doing ctrl

2753
01:48:08,560 --> 01:48:11,280
f5 okay so we have a login button here

2754
01:48:11,280 --> 01:48:14,480
but because the index page is already

2755
01:48:14,480 --> 01:48:16,480
protected so we're seeing the login page

2756
01:48:16,480 --> 01:48:18,000
anyways we don't have to click on the

2757
01:48:18,000 --> 01:48:20,960
login button and then i'm going to use

2758
01:48:20,960 --> 01:48:23,679
the password and now we're logged in

2759
01:48:23,679 --> 01:48:25,520
right

2760
01:48:25,520 --> 01:48:27,679
and if we go to our privacy page go to

2761
01:48:27,679 --> 01:48:29,280
our home page

2762
01:48:29,280 --> 01:48:30,719
this is there they're all working

2763
01:48:30,719 --> 01:48:33,679
correctly and then we are going to click

2764
01:48:33,679 --> 01:48:36,639
on the logout button while we are in the

2765
01:48:36,639 --> 01:48:39,360
privacy page click on the logout button

2766
01:48:39,360 --> 01:48:41,760
alright so this we expect us to kill the

2767
01:48:41,760 --> 01:48:42,719
cookie

2768
01:48:42,719 --> 01:48:45,119
all right so let's bring up the cookie

2769
01:48:45,119 --> 01:48:47,119
i can see the cookie right here

2770
01:48:47,119 --> 01:48:49,119
we expect this to kill the cookie and

2771
01:48:49,119 --> 01:48:52,800
also redirect us to the index page

2772
01:48:52,800 --> 01:48:54,639
but because the index page is protected

2773
01:48:54,639 --> 01:48:57,199
it will automatically redirect us again

2774
01:48:57,199 --> 01:48:58,239
to the

2775
01:48:58,239 --> 01:49:00,880
login page all right so this is what

2776
01:49:00,880 --> 01:49:02,960
happened you can see that the cookie is

2777
01:49:02,960 --> 01:49:04,239
deleted

2778
01:49:04,239 --> 01:49:06,159
and because the cookie is not present

2779
01:49:06,159 --> 01:49:07,280
anymore

2780
01:49:07,280 --> 01:49:08,960
when accessing any page the

2781
01:49:08,960 --> 01:49:11,280
authentication middleware will not be

2782
01:49:11,280 --> 01:49:12,960
able to pick up

2783
01:49:12,960 --> 01:49:14,800
the security context

2784
01:49:14,800 --> 01:49:18,960
so it will have a anonymous identity

2785
01:49:18,960 --> 01:49:22,560
which on any of our pages except privacy

2786
01:49:22,560 --> 01:49:24,719
page are not allowed

2787
01:49:24,719 --> 01:49:28,719
so that's the login status partial view

2788
01:49:28,719 --> 01:49:32,320
and logout functionality implemented

2789
01:49:32,320 --> 01:49:34,080
in later videos we're going to talk more

2790
01:49:34,080 --> 01:49:37,119
about the lifetime of a cookie and how

2791
01:49:37,119 --> 01:49:39,199
is it correlated with the broader

2792
01:49:39,199 --> 01:49:41,440
session but next video we'll continue

2793
01:49:41,440 --> 01:49:44,320
with authorization first

2794
01:49:44,320 --> 01:49:46,560
two videos ago we have implemented

2795
01:49:46,560 --> 01:49:49,199
simple authorization policies where

2796
01:49:49,199 --> 01:49:52,080
we're simply checking the existence of a

2797
01:49:52,080 --> 01:49:53,119
claim

2798
01:49:53,119 --> 01:49:54,159
or

2799
01:49:54,159 --> 01:49:57,199
specific values of claim in this video

2800
01:49:57,199 --> 01:49:59,840
we are going to implement some more

2801
01:49:59,840 --> 01:50:01,920
complicated scenarios where we're

2802
01:50:01,920 --> 01:50:04,400
checking some custom logic

2803
01:50:04,400 --> 01:50:06,960
other than just checking the presence of

2804
01:50:06,960 --> 01:50:08,800
a claim or the specific value of the

2805
01:50:08,800 --> 01:50:12,080
claim so let's imagine a scenario where

2806
01:50:12,080 --> 01:50:14,320
you are hired as

2807
01:50:14,320 --> 01:50:16,719
a human resource manager

2808
01:50:16,719 --> 01:50:17,679
and

2809
01:50:17,679 --> 01:50:19,760
you can access of course you can access

2810
01:50:19,760 --> 01:50:22,239
human resource manager page

2811
01:50:22,239 --> 01:50:24,639
whereas the permission

2812
01:50:24,639 --> 01:50:26,719
is only given when you pass your

2813
01:50:26,719 --> 01:50:28,639
probation period

2814
01:50:28,639 --> 01:50:30,239
right so for example you have a three

2815
01:50:30,239 --> 01:50:32,800
months probation period and within the

2816
01:50:32,800 --> 01:50:34,639
three months although you're giving the

2817
01:50:34,639 --> 01:50:38,080
main claim and uh hr department claim

2818
01:50:38,080 --> 01:50:40,960
you still haven't passed your probation

2819
01:50:40,960 --> 01:50:43,840
period you won't be able to access

2820
01:50:43,840 --> 01:50:46,960
the the page right so that's going to be

2821
01:50:46,960 --> 01:50:47,760
a

2822
01:50:47,760 --> 01:50:49,440
a customer requirement which we're going

2823
01:50:49,440 --> 01:50:50,960
to implement and then we have to

2824
01:50:50,960 --> 01:50:53,920
implement the authorization handler to

2825
01:50:53,920 --> 01:50:56,560
help us to handle the requirement and

2826
01:50:56,560 --> 01:50:59,599
then in the handler we can say whether

2827
01:50:59,599 --> 01:51:02,239
the security context satisfies the

2828
01:51:02,239 --> 01:51:04,000
requirement or not

2829
01:51:04,000 --> 01:51:05,840
okay so let's jump into video studio and

2830
01:51:05,840 --> 01:51:07,599
get started right away

2831
01:51:07,599 --> 01:51:10,159
so first of all let's go into our login

2832
01:51:10,159 --> 01:51:11,040
page

2833
01:51:11,040 --> 01:51:13,920
okay so here we will need some extra

2834
01:51:13,920 --> 01:51:16,159
claims here we need to have a claim

2835
01:51:16,159 --> 01:51:19,599
which contains the employment date

2836
01:51:19,599 --> 01:51:23,440
of the person who is logged in okay so

2837
01:51:23,440 --> 01:51:25,920
so the employment date let's say the

2838
01:51:25,920 --> 01:51:30,000
employment date is may 1st 2021

2839
01:51:30,000 --> 01:51:33,440
so 2021 0 5

2840
01:51:33,440 --> 01:51:36,159
1. so this is may 1st so we added this

2841
01:51:36,159 --> 01:51:38,639
claim the next step we need to create a

2842
01:51:38,639 --> 01:51:40,159
requirement

2843
01:51:40,159 --> 01:51:42,400
which we will create it under the

2844
01:51:42,400 --> 01:51:44,719
authorization folder so let's create a

2845
01:51:44,719 --> 01:51:47,440
authorization folder which will contain

2846
01:51:47,440 --> 01:51:48,800
all of our

2847
01:51:48,800 --> 01:51:50,719
custom requirement

2848
01:51:50,719 --> 01:51:52,880
right if we have many in this case we

2849
01:51:52,880 --> 01:51:54,800
only have one

2850
01:51:54,800 --> 01:51:56,719
but we'll still have it

2851
01:51:56,719 --> 01:51:58,560
in the folder

2852
01:51:58,560 --> 01:52:01,040
so we'll create a class

2853
01:52:01,040 --> 01:52:04,080
okay and we're going to call the class

2854
01:52:04,080 --> 01:52:05,440
hr

2855
01:52:05,440 --> 01:52:06,719
manager

2856
01:52:06,719 --> 01:52:08,000
probation

2857
01:52:08,000 --> 01:52:09,679
requirement

2858
01:52:09,679 --> 01:52:11,360
that sounds like a

2859
01:52:11,360 --> 01:52:14,320
meaningful name and for any requirement

2860
01:52:14,320 --> 01:52:16,480
we'll have to derive that requirement

2861
01:52:16,480 --> 01:52:19,840
from eye authorization requirement

2862
01:52:19,840 --> 01:52:21,520
interface

2863
01:52:21,520 --> 01:52:24,560
right eye authorization requirement

2864
01:52:24,560 --> 01:52:26,560
interface

2865
01:52:26,560 --> 01:52:29,360
this interface doesn't have anything in

2866
01:52:29,360 --> 01:52:31,599
it if we go to the definition

2867
01:52:31,599 --> 01:52:34,400
right we can see it's empty

2868
01:52:34,400 --> 01:52:36,480
so the reason why we need it i'll

2869
01:52:36,480 --> 01:52:37,840
explain

2870
01:52:37,840 --> 01:52:40,080
why we need this

2871
01:52:40,080 --> 01:52:42,960
interface a little bit later

2872
01:52:42,960 --> 01:52:44,480
so in here

2873
01:52:44,480 --> 01:52:46,239
we're going to have

2874
01:52:46,239 --> 01:52:47,599
the probation

2875
01:52:47,599 --> 01:52:48,400
uh

2876
01:52:48,400 --> 01:52:50,880
period passed in right so probation

2877
01:52:50,880 --> 01:52:53,040
let's say probation month

2878
01:52:53,040 --> 01:52:54,960
uh i'm going to do control dot to

2879
01:52:54,960 --> 01:52:57,599
initialize it as a public property

2880
01:52:57,599 --> 01:52:59,040
right

2881
01:52:59,040 --> 01:53:01,599
so we have this public property here

2882
01:53:01,599 --> 01:53:04,000
and then inside the namespace we're

2883
01:53:04,000 --> 01:53:06,639
going to create the handler right here

2884
01:53:06,639 --> 01:53:08,159
okay so we're going to have a public

2885
01:53:08,159 --> 01:53:09,599
class

2886
01:53:09,599 --> 01:53:10,400
which

2887
01:53:10,400 --> 01:53:11,599
will have

2888
01:53:11,599 --> 01:53:14,480
this name so so it's not requirement

2889
01:53:14,480 --> 01:53:17,520
it's requirement

2890
01:53:18,480 --> 01:53:19,760
okay so

2891
01:53:19,760 --> 01:53:22,000
we'll have to change the name of the

2892
01:53:22,000 --> 01:53:24,480
file as well

2893
01:53:24,480 --> 01:53:26,960
so i'm going to copy this name and then

2894
01:53:26,960 --> 01:53:28,880
i'm just going to call it

2895
01:53:28,880 --> 01:53:31,280
hr manager permission requirement

2896
01:53:31,280 --> 01:53:34,400
handler and this will have to derive

2897
01:53:34,400 --> 01:53:35,840
from the

2898
01:53:35,840 --> 01:53:38,320
authorization

2899
01:53:38,320 --> 01:53:40,960
handler class

2900
01:53:40,960 --> 01:53:42,800
and here you can see

2901
01:53:42,800 --> 01:53:45,280
we have a t requirement and this t

2902
01:53:45,280 --> 01:53:47,760
requirement is a i authorization

2903
01:53:47,760 --> 01:53:50,480
requirement right so that's why we need

2904
01:53:50,480 --> 01:53:52,400
this i authorization requirement here

2905
01:53:52,400 --> 01:53:54,480
right although this is an empty

2906
01:53:54,480 --> 01:53:58,000
interface we just need it so that we can

2907
01:53:58,000 --> 01:54:00,960
have this handler

2908
01:54:00,960 --> 01:54:02,639
implemented properly

2909
01:54:02,639 --> 01:54:05,679
right so i put in this

2910
01:54:05,679 --> 01:54:06,840
requirement

2911
01:54:06,840 --> 01:54:09,679
here and then you can see the the red

2912
01:54:09,679 --> 01:54:12,560
squiggly line here i'm i'm just going to

2913
01:54:12,560 --> 01:54:15,520
ctrl dot to implement abstract class

2914
01:54:15,520 --> 01:54:18,639
okay so i hit enter so we'll have a a

2915
01:54:18,639 --> 01:54:21,360
virtual method overrated here

2916
01:54:21,360 --> 01:54:23,199
and we can we can see that this

2917
01:54:23,199 --> 01:54:26,000
requirement is passed in through this

2918
01:54:26,000 --> 01:54:27,199
method

2919
01:54:27,199 --> 01:54:29,599
right so we can implement this method

2920
01:54:29,599 --> 01:54:31,520
basically here we just need to get the

2921
01:54:31,520 --> 01:54:34,239
employment date and then you see whether

2922
01:54:34,239 --> 01:54:37,679
we have passed the probation period so

2923
01:54:37,679 --> 01:54:39,520
how do we get the

2924
01:54:39,520 --> 01:54:41,599
claim so we can check

2925
01:54:41,599 --> 01:54:44,400
in the context in here we can access the

2926
01:54:44,400 --> 01:54:45,920
user which

2927
01:54:45,920 --> 01:54:48,560
which is the claims principle right and

2928
01:54:48,560 --> 01:54:52,000
then it has has claimed a method here

2929
01:54:52,000 --> 01:54:53,840
and we can say

2930
01:54:53,840 --> 01:54:56,960
is there a claim whose type is

2931
01:54:56,960 --> 01:54:58,239
um

2932
01:54:58,239 --> 01:54:59,280
loy

2933
01:54:59,280 --> 01:55:02,239
meant date it's better we use a constant

2934
01:55:02,239 --> 01:55:03,520
for this name

2935
01:55:03,520 --> 01:55:05,840
but for demonstration purpose we're not

2936
01:55:05,840 --> 01:55:08,320
going to do that so

2937
01:55:08,320 --> 01:55:10,159
we can use the

2938
01:55:10,159 --> 01:55:11,199
if

2939
01:55:11,199 --> 01:55:14,560
condition statement here right so if it

2940
01:55:14,560 --> 01:55:16,239
doesn't exist

2941
01:55:16,239 --> 01:55:18,560
and this is when we need to

2942
01:55:18,560 --> 01:55:21,360
say we don't we don't say we fail

2943
01:55:21,360 --> 01:55:23,199
hey we don't need to

2944
01:55:23,199 --> 01:55:25,280
we just need to basically return

2945
01:55:25,280 --> 01:55:27,760
the empty task here the reason why we

2946
01:55:27,760 --> 01:55:28,880
don't want to

2947
01:55:28,880 --> 01:55:32,320
say it fails is that if it fails then

2948
01:55:32,320 --> 01:55:35,520
the policy will fail no matter what but

2949
01:55:35,520 --> 01:55:37,920
in some cases we want to have multiple

2950
01:55:37,920 --> 01:55:41,280
requirement within the policy so if one

2951
01:55:41,280 --> 01:55:43,840
of them satisfies then it's okay right

2952
01:55:43,840 --> 01:55:47,520
we don't want to return just a failure

2953
01:55:47,520 --> 01:55:49,599
like that so after this line we know

2954
01:55:49,599 --> 01:55:52,320
that we have a employment date claim so

2955
01:55:52,320 --> 01:55:54,719
we just need to get the the date here

2956
01:55:54,719 --> 01:55:56,760
right so we can use

2957
01:55:56,760 --> 01:55:58,639
daytime.parse

2958
01:55:58,639 --> 01:56:01,679
to parse the the claim

2959
01:56:01,679 --> 01:56:04,880
so we use the claim principle to find

2960
01:56:04,880 --> 01:56:07,679
our first

2961
01:56:09,840 --> 01:56:12,960
our first employment date claim and we

2962
01:56:12,960 --> 01:56:15,360
know we have it so we're pretty sure we

2963
01:56:15,360 --> 01:56:17,440
have it so then we can just access the

2964
01:56:17,440 --> 01:56:20,000
value and then we parse that so now we

2965
01:56:20,000 --> 01:56:21,760
have the employment date

2966
01:56:21,760 --> 01:56:24,080
uh and we just need to compare

2967
01:56:24,080 --> 01:56:26,320
the the differences right so the

2968
01:56:26,320 --> 01:56:28,960
preparation period

2969
01:56:28,960 --> 01:56:31,760
right the completion period is daytime

2970
01:56:31,760 --> 01:56:32,800
now

2971
01:56:32,800 --> 01:56:34,719
uh my minus

2972
01:56:34,719 --> 01:56:36,639
employment date

2973
01:56:36,639 --> 01:56:37,760
okay so

2974
01:56:37,760 --> 01:56:39,840
goes basically we're just going to say

2975
01:56:39,840 --> 01:56:43,040
if the period dot dot days

2976
01:56:43,040 --> 01:56:44,239
right so this

2977
01:56:44,239 --> 01:56:46,080
if you hover over you can see this is a

2978
01:56:46,080 --> 01:56:50,000
time span object so if the peer dot days

2979
01:56:50,000 --> 01:56:52,080
is greater than 30

2980
01:56:52,080 --> 01:56:54,560
times

2981
01:56:54,840 --> 01:56:57,119
requirement right we have our

2982
01:56:57,119 --> 01:56:59,679
preparation period preparation month

2983
01:56:59,679 --> 01:57:03,360
here so we can say requirement

2984
01:57:03,360 --> 01:57:06,880
dot provision month right because this

2985
01:57:06,880 --> 01:57:09,119
requirement is passing from here from

2986
01:57:09,119 --> 01:57:12,400
this parameter so we can just use that

2987
01:57:12,400 --> 01:57:13,360
and then

2988
01:57:13,360 --> 01:57:15,920
here we're going to say text dot succeed

2989
01:57:15,920 --> 01:57:18,159
we're going to call the succeed method

2990
01:57:18,159 --> 01:57:21,199
and then we want to make this particular

2991
01:57:21,199 --> 01:57:22,960
requirement succeed

2992
01:57:22,960 --> 01:57:25,520
okay and then after that we still return

2993
01:57:25,520 --> 01:57:28,159
an empty task

2994
01:57:28,159 --> 01:57:30,080
like that so now that we have the

2995
01:57:30,080 --> 01:57:31,679
requirement

2996
01:57:31,679 --> 01:57:33,599
and the handler we will need to go to

2997
01:57:33,599 --> 01:57:36,000
the startup class to register i'm going

2998
01:57:36,000 --> 01:57:39,360
to do control comma and start up

2999
01:57:39,360 --> 01:57:41,920
i need to go to startup.cs

3000
01:57:41,920 --> 01:57:44,400
and then we'll change this hr manager

3001
01:57:44,400 --> 01:57:47,360
policy a little bit we'll need to

3002
01:57:47,360 --> 01:57:49,119
add something here we're going to add

3003
01:57:49,119 --> 01:57:50,320
requirements

3004
01:57:50,320 --> 01:57:53,520
to this policy right so this is a

3005
01:57:53,520 --> 01:57:56,080
requirement which is requiring

3006
01:57:56,080 --> 01:57:58,480
the claim and this is also a claim

3007
01:57:58,480 --> 01:58:00,400
requirement and this is a customer

3008
01:58:00,400 --> 01:58:02,239
requirement and we just say dot

3009
01:58:02,239 --> 01:58:05,360
requirements dot add we're going to add

3010
01:58:05,360 --> 01:58:07,360
this

3011
01:58:07,360 --> 01:58:09,520
i authorization requirement right which

3012
01:58:09,520 --> 01:58:12,080
we already have implemented and from

3013
01:58:12,080 --> 01:58:14,320
here we can pass in the preparation

3014
01:58:14,320 --> 01:58:17,360
period right you can keep it in the

3015
01:58:17,360 --> 01:58:20,080
settings in the app settings if we want

3016
01:58:20,080 --> 01:58:21,840
but in this case for demonstration

3017
01:58:21,840 --> 01:58:24,159
purpose i'm going to hard code here so

3018
01:58:24,159 --> 01:58:25,280
three months

3019
01:58:25,280 --> 01:58:27,280
of probation period and then

3020
01:58:27,280 --> 01:58:29,679
we are going to do a control dot to

3021
01:58:29,679 --> 01:58:33,119
import the namespace we also need to

3022
01:58:33,119 --> 01:58:35,520
dependency inject this particular

3023
01:58:35,520 --> 01:58:38,400
requirements handler and for that we can

3024
01:58:38,400 --> 01:58:40,320
just add the handler to the service

3025
01:58:40,320 --> 01:58:42,159
collection right

3026
01:58:42,159 --> 01:58:45,599
and in this case we can use singleton or

3027
01:58:45,599 --> 01:58:47,599
we can use transit or scope it doesn't

3028
01:58:47,599 --> 01:58:49,040
really matter

3029
01:58:49,040 --> 01:58:51,599
but using singleton will improve the

3030
01:58:51,599 --> 01:58:53,599
performance just a little bit because it

3031
01:58:53,599 --> 01:58:56,560
does not need to recreate the class all

3032
01:58:56,560 --> 01:58:57,840
the time

3033
01:58:57,840 --> 01:59:00,000
right so i'm going to

3034
01:59:00,000 --> 01:59:02,800
do a control dot to import namespace

3035
01:59:02,800 --> 01:59:05,920
here and also the requirement

3036
01:59:05,920 --> 01:59:07,360
and blur

3037
01:59:07,360 --> 01:59:08,560
that's it

3038
01:59:08,560 --> 01:59:10,800
we have this requirement and this is

3039
01:59:10,800 --> 01:59:14,800
already on our hr manager page

3040
01:59:14,800 --> 01:59:17,920
right we don't have a hr manager page

3041
01:59:17,920 --> 01:59:19,119
menu

3042
01:59:19,119 --> 01:59:22,080
so let's just quickly add that

3043
01:59:22,080 --> 01:59:25,280
and that is in our layout page so let's

3044
01:59:25,280 --> 01:59:27,440
just add another

3045
01:59:27,440 --> 01:59:29,920
list item i have our hr manager page

3046
01:59:29,920 --> 01:59:32,080
here okay again coming back to this

3047
01:59:32,080 --> 01:59:34,719
diagram just so that we know exactly

3048
01:59:34,719 --> 01:59:36,080
what's happening so

3049
01:59:36,080 --> 01:59:38,480
if we're trying to access this hr

3050
01:59:38,480 --> 01:59:42,000
manager page right the authorization

3051
01:59:42,000 --> 01:59:46,080
middleware will grab the policy name and

3052
01:59:46,080 --> 01:59:47,599
then it will go through all of the

3053
01:59:47,599 --> 01:59:51,199
requirements and find their handlers

3054
01:59:51,199 --> 01:59:53,920
right because we have this handler

3055
01:59:53,920 --> 01:59:56,400
specified to handle that specific event

3056
01:59:56,400 --> 01:59:58,880
where we specified right here right so

3057
01:59:58,880 --> 02:00:01,920
this handler is kind of bond to this

3058
02:00:01,920 --> 02:00:03,360
requirement

3059
02:00:03,360 --> 02:00:05,119
so we have this handler to handle the

3060
02:00:05,119 --> 02:00:07,679
specific sorry not event the specific

3061
02:00:07,679 --> 02:00:10,000
requirement right therefore our

3062
02:00:10,000 --> 02:00:12,639
requirement handler will determine

3063
02:00:12,639 --> 02:00:15,440
whether the security contacts will

3064
02:00:15,440 --> 02:00:18,480
actually satisfy the requirements

3065
02:00:18,480 --> 02:00:20,880
all right so this is the theory and then

3066
02:00:20,880 --> 02:00:22,400
we have already implemented so let's

3067
02:00:22,400 --> 02:00:23,760
give it that a try i'm going to do a

3068
02:00:23,760 --> 02:00:25,280
ctrl f5

3069
02:00:25,280 --> 02:00:27,679
to run the application all right i'm

3070
02:00:27,679 --> 02:00:30,080
going to log in

3071
02:00:30,080 --> 02:00:32,719
i stay admin

3072
02:00:32,719 --> 02:00:35,360
and then i'm accessing the next page

3073
02:00:35,360 --> 02:00:36,239
uh

3074
02:00:36,239 --> 02:00:38,080
well i'm going to change the privacy

3075
02:00:38,080 --> 02:00:39,520
going to change the label here in the

3076
02:00:39,520 --> 02:00:40,639
layout

3077
02:00:40,639 --> 02:00:42,560
so this is not

3078
02:00:42,560 --> 02:00:44,400
privacy this is

3079
02:00:44,400 --> 02:00:46,000
hr

3080
02:00:46,000 --> 02:00:47,840
management

3081
02:00:47,840 --> 02:00:50,480
coming back refresh the page

3082
02:00:50,480 --> 02:00:52,159
all right so let's click on the hr

3083
02:00:52,159 --> 02:00:54,159
management

3084
02:00:54,159 --> 02:00:57,440
access denied why is access denied okay

3085
02:00:57,440 --> 02:00:59,520
so we can see that our requirement

3086
02:00:59,520 --> 02:01:03,599
actually has a 30 3 months configuration

3087
02:01:03,599 --> 02:01:05,199
here right

3088
02:01:05,199 --> 02:01:08,880
and in the login in the claim

3089
02:01:08,880 --> 02:01:12,239
uh the employment date is may 1st right

3090
02:01:12,239 --> 02:01:16,159
so that's from may 1st to today's date

3091
02:01:16,159 --> 02:01:18,400
which is may 15th

3092
02:01:18,400 --> 02:01:20,880
right so it's not going to work so if we

3093
02:01:20,880 --> 02:01:24,080
set it to february 1st then that's way

3094
02:01:24,080 --> 02:01:26,639
past three months so that should work

3095
02:01:26,639 --> 02:01:28,719
right so let's

3096
02:01:28,719 --> 02:01:30,320
give that a try

3097
02:01:30,320 --> 02:01:32,000
i'm going to do control

3098
02:01:32,000 --> 02:01:32,880
shift

3099
02:01:32,880 --> 02:01:34,080
b

3100
02:01:34,080 --> 02:01:36,639
all right build succeeded so let's first

3101
02:01:36,639 --> 02:01:38,400
log out to kill the cookie because the

3102
02:01:38,400 --> 02:01:41,199
cookie still contains may 1st as the

3103
02:01:41,199 --> 02:01:42,880
employment day so let's

3104
02:01:42,880 --> 02:01:46,639
just log out to kill the cookie and then

3105
02:01:46,639 --> 02:01:49,760
i'm going to log in again

3106
02:01:49,760 --> 02:01:52,719
so now the cookie is supposed to contain

3107
02:01:52,719 --> 02:01:55,440
february's first as the employment date

3108
02:01:55,440 --> 02:01:57,360
and if we go to the hr management page

3109
02:01:57,360 --> 02:02:00,560
we can see the hr manager page

3110
02:02:00,560 --> 02:02:01,679
right so

3111
02:02:01,679 --> 02:02:04,960
that is for this video where we have

3112
02:02:04,960 --> 02:02:06,239
implemented this

3113
02:02:06,239 --> 02:02:08,159
custom requirement and the customer

3114
02:02:08,159 --> 02:02:10,239
requirement handler

3115
02:02:10,239 --> 02:02:12,400
right so you can have pretty complicated

3116
02:02:12,400 --> 02:02:14,800
requirement and then all you have to do

3117
02:02:14,800 --> 02:02:16,880
just implement this authorization

3118
02:02:16,880 --> 02:02:19,119
handler to handle the specific

3119
02:02:19,119 --> 02:02:20,639
requirement

3120
02:02:20,639 --> 02:02:22,800
if you have any questions feel free to

3121
02:02:22,800 --> 02:02:23,679
ask

3122
02:02:23,679 --> 02:02:27,360
if not i'll see you in the next video

3123
02:02:28,159 --> 02:02:31,280
so once the login process finishes here

3124
02:02:31,280 --> 02:02:33,040
a cookie is generated as a

3125
02:02:33,040 --> 02:02:34,800
authentication ticket

3126
02:02:34,800 --> 02:02:38,639
the cookie may or may not have a expiry

3127
02:02:38,639 --> 02:02:41,599
date and time as developers we have the

3128
02:02:41,599 --> 02:02:44,719
power to choose to set the expiry date

3129
02:02:44,719 --> 02:02:46,400
in time or not

3130
02:02:46,400 --> 02:02:48,639
and that expiry date and time is also

3131
02:02:48,639 --> 02:02:50,000
affected by

3132
02:02:50,000 --> 02:02:52,719
broader session so in this video we are

3133
02:02:52,719 --> 02:02:55,440
going to talk about the lifetime of a

3134
02:02:55,440 --> 02:02:58,159
cookie and how it's affected by the

3135
02:02:58,159 --> 02:02:59,599
broader session

3136
02:02:59,599 --> 02:03:01,520
so like i said we can choose to control

3137
02:03:01,520 --> 02:03:03,920
the lifetime and the way to do so is to

3138
02:03:03,920 --> 02:03:06,400
come to the startup.cs

3139
02:03:06,400 --> 02:03:07,920
and then when we add a cookie

3140
02:03:07,920 --> 02:03:10,080
authentication handler we can come over

3141
02:03:10,080 --> 02:03:11,920
here and see options

3142
02:03:11,920 --> 02:03:14,080
right and then we can specify the expiry

3143
02:03:14,080 --> 02:03:15,119
time

3144
02:03:15,119 --> 02:03:18,159
span okay so we can say we're going to

3145
02:03:18,159 --> 02:03:20,159
expire in about

3146
02:03:20,159 --> 02:03:21,040
uh

3147
02:03:21,040 --> 02:03:23,840
let's say in about 30 seconds right so

3148
02:03:23,840 --> 02:03:25,199
if we do that

3149
02:03:25,199 --> 02:03:29,199
and then i'm gonna run ctrl i5 and i'm

3150
02:03:29,199 --> 02:03:32,159
going to log in and we watch the time

3151
02:03:32,159 --> 02:03:34,560
it may start at 45

3152
02:03:34,560 --> 02:03:39,119
so when it goes to 5 38 15 the

3153
02:03:39,119 --> 02:03:41,520
authentication ticket which is the the

3154
02:03:41,520 --> 02:03:45,440
cookie will expire now it comes to 15.

3155
02:03:45,440 --> 02:03:48,719
so if i go to for example this

3156
02:03:48,719 --> 02:03:50,560
or going back

3157
02:03:50,560 --> 02:03:53,840
see it does not work so as you can see

3158
02:03:53,840 --> 02:03:56,159
we can configure to have a lifetime

3159
02:03:56,159 --> 02:03:57,920
right and

3160
02:03:57,920 --> 02:04:00,480
when we have a lifetime the cookie will

3161
02:04:00,480 --> 02:04:02,159
expire

3162
02:04:02,159 --> 02:04:04,239
when the time comes

3163
02:04:04,239 --> 02:04:07,840
but what happens if we close the browser

3164
02:04:07,840 --> 02:04:09,119
before

3165
02:04:09,119 --> 02:04:12,239
the cookie expires let's try that

3166
02:04:12,239 --> 02:04:13,199
okay

3167
02:04:13,199 --> 02:04:15,119
so i'm going to

3168
02:04:15,119 --> 02:04:17,679
login and then right after this i'm

3169
02:04:17,679 --> 02:04:19,599
going to close the whole browser so i'm

3170
02:04:19,599 --> 02:04:21,760
going back to the page again

3171
02:04:21,760 --> 02:04:23,280
and as you can see we don't have a

3172
02:04:23,280 --> 02:04:24,960
cookie anymore

3173
02:04:24,960 --> 02:04:27,280
right because clothing the browser it

3174
02:04:27,280 --> 02:04:29,280
automatically deleted the cookie so how

3175
02:04:29,280 --> 02:04:31,679
is browser session affects the lifetime

3176
02:04:31,679 --> 02:04:33,040
of a cookie

3177
02:04:33,040 --> 02:04:34,880
let's talk about that now

3178
02:04:34,880 --> 02:04:37,040
first of all what is a broader session a

3179
02:04:37,040 --> 02:04:38,880
broader session is basically an

3180
02:04:38,880 --> 02:04:40,079
interaction

3181
02:04:40,079 --> 02:04:41,280
between

3182
02:04:41,280 --> 02:04:43,840
the browser and the server

3183
02:04:43,840 --> 02:04:44,880
right so

3184
02:04:44,880 --> 02:04:46,800
the browser session

3185
02:04:46,800 --> 02:04:49,360
lasts as long as the lifetime of the

3186
02:04:49,360 --> 02:04:51,119
browser so as soon as you close the

3187
02:04:51,119 --> 02:04:53,280
browser the session is finished so

3188
02:04:53,280 --> 02:04:55,119
that's the browser session

3189
02:04:55,119 --> 02:04:58,000
so if we draw two bars the first bar

3190
02:04:58,000 --> 02:05:01,599
represents the lifetime of the cookie

3191
02:05:01,599 --> 02:05:04,320
the second one represents

3192
02:05:04,320 --> 02:05:07,920
the left time of the session broader

3193
02:05:07,920 --> 02:05:09,920
session so how is the browser session

3194
02:05:09,920 --> 02:05:12,800
lifetime affects the the cookie lifetime

3195
02:05:12,800 --> 02:05:13,679
right

3196
02:05:13,679 --> 02:05:16,800
so if the browser's lifetime is longer

3197
02:05:16,800 --> 02:05:18,960
than the cookie lifetime basically it

3198
02:05:18,960 --> 02:05:21,040
does not affect the cookie's lifetime

3199
02:05:21,040 --> 02:05:22,880
the cookie will expire

3200
02:05:22,880 --> 02:05:24,880
when the time comes right

3201
02:05:24,880 --> 02:05:28,400
at this moment it will expire if the

3202
02:05:28,400 --> 02:05:30,880
brother session is shorter

3203
02:05:30,880 --> 02:05:33,840
than the cookie lifetime of course so

3204
02:05:33,840 --> 02:05:36,400
the cookie's actual lifetime is right

3205
02:05:36,400 --> 02:05:37,280
here

3206
02:05:37,280 --> 02:05:39,360
right because the browser is closed the

3207
02:05:39,360 --> 02:05:41,440
cookie is gone

3208
02:05:41,440 --> 02:05:44,400
right but there is a exception

3209
02:05:44,400 --> 02:05:45,360
where

3210
02:05:45,360 --> 02:05:49,040
you as a developer can set as a set a

3211
02:05:49,040 --> 02:05:51,360
cookie as a persistent cookie which

3212
02:05:51,360 --> 02:05:53,520
means that the cookie

3213
02:05:53,520 --> 02:05:54,639
will

3214
02:05:54,639 --> 02:05:57,920
survive the browser's closing so even

3215
02:05:57,920 --> 02:06:00,400
when the browser is closed the cookie

3216
02:06:00,400 --> 02:06:03,840
will still stay there so this is called

3217
02:06:03,840 --> 02:06:05,520
persistent cookie

3218
02:06:05,520 --> 02:06:08,560
right a persistent cookie will always

3219
02:06:08,560 --> 02:06:11,679
have the lifetime as you set for the

3220
02:06:11,679 --> 02:06:14,960
cookie let's say the browser is

3221
02:06:14,960 --> 02:06:17,760
closed here and then

3222
02:06:17,760 --> 02:06:19,199
after

3223
02:06:19,199 --> 02:06:22,719
some time the browser is open again this

3224
02:06:22,719 --> 02:06:24,880
time the session is a little bit longer

3225
02:06:24,880 --> 02:06:26,960
the broader session is a bit longer

3226
02:06:26,960 --> 02:06:29,760
the cookie will still expire at this

3227
02:06:29,760 --> 02:06:32,000
moment right there how so how do we set

3228
02:06:32,000 --> 02:06:35,199
a cookie as a persistent cookie you have

3229
02:06:35,199 --> 02:06:37,599
all experienced the login screen where

3230
02:06:37,599 --> 02:06:40,000
you see there's like keep me signed in

3231
02:06:40,000 --> 02:06:42,800
or remember me checkbox when you check

3232
02:06:42,800 --> 02:06:44,400
that checkbox

3233
02:06:44,400 --> 02:06:46,639
then the quickie becomes a persistent

3234
02:06:46,639 --> 02:06:49,599
cookie so let's implement that in in our

3235
02:06:49,599 --> 02:06:51,119
visual studio

3236
02:06:51,119 --> 02:06:54,079
so first of all we need a

3237
02:06:54,079 --> 02:06:58,159
model right page model that includes a

3238
02:06:58,159 --> 02:07:00,880
checkbox which is going to be a boolean

3239
02:07:00,880 --> 02:07:03,440
variable here right so we're going to

3240
02:07:03,440 --> 02:07:06,159
call it remember me

3241
02:07:06,159 --> 02:07:08,639
and then we're going to have a better

3242
02:07:08,639 --> 02:07:12,119
display name

3243
02:07:12,239 --> 02:07:14,079
with a space in between

3244
02:07:14,079 --> 02:07:17,760
so i'm going to say remember me

3245
02:07:17,760 --> 02:07:19,840
just like in coco

3246
02:07:19,840 --> 02:07:21,040
and then

3247
02:07:21,040 --> 02:07:22,480
we are going to

3248
02:07:22,480 --> 02:07:26,480
go to the login page here and then we

3249
02:07:26,480 --> 02:07:29,040
are going to add a

3250
02:07:29,040 --> 02:07:31,520
a row here right

3251
02:07:31,520 --> 02:07:32,719
let's say

3252
02:07:32,719 --> 02:07:35,679
this is going to be a row and then we're

3253
02:07:35,679 --> 02:07:38,000
going to use form check

3254
02:07:38,000 --> 02:07:40,079
okay and then we are going to have a

3255
02:07:40,079 --> 02:07:42,880
little bit margin at the bottom

3256
02:07:42,880 --> 02:07:45,119
uh because this is not a form con form

3257
02:07:45,119 --> 02:07:48,719
group right so it doesn't have enough

3258
02:07:48,719 --> 02:07:50,400
margin at the bottom so we're going to

3259
02:07:50,400 --> 02:07:51,280
add

3260
02:07:51,280 --> 02:07:53,119
a little bit margin there and then in

3261
02:07:53,119 --> 02:07:56,159
the like in between we're gonna have the

3262
02:07:56,159 --> 02:07:57,840
same thing here

3263
02:07:57,840 --> 02:08:01,520
and we are going to change this to a

3264
02:08:01,520 --> 02:08:03,920
check box this is going to be

3265
02:08:03,920 --> 02:08:05,199
a

3266
02:08:05,199 --> 02:08:07,119
data binding here and we're going to

3267
02:08:07,119 --> 02:08:09,679
bind to remember me

3268
02:08:09,679 --> 02:08:10,960
and then

3269
02:08:10,960 --> 02:08:15,920
the class is going to be form check

3270
02:08:15,920 --> 02:08:18,719
all right form check input

3271
02:08:18,719 --> 02:08:21,679
and it does not need to have a value

3272
02:08:21,679 --> 02:08:22,639
here

3273
02:08:22,639 --> 02:08:25,360
and then we'll need a label

3274
02:08:25,360 --> 02:08:26,480
for that

3275
02:08:26,480 --> 02:08:29,840
textbox checkbox okay and this is going

3276
02:08:29,840 --> 02:08:32,639
to be called form check label

3277
02:08:32,639 --> 02:08:34,800
and of course this is going to be for

3278
02:08:34,800 --> 02:08:37,920
the same field just remember me

3279
02:08:37,920 --> 02:08:40,400
and then that's it

3280
02:08:40,400 --> 02:08:41,360
right

3281
02:08:41,360 --> 02:08:44,639
so what's this we are going to receive

3282
02:08:44,639 --> 02:08:46,560
once it's posted

3283
02:08:46,560 --> 02:08:48,719
right the form is posted we're going to

3284
02:08:48,719 --> 02:08:51,280
receive that value in the credentials in

3285
02:08:51,280 --> 02:08:53,760
in the remember me field

3286
02:08:53,760 --> 02:08:56,880
so what we need to do is before we sign

3287
02:08:56,880 --> 02:08:58,880
the cookie right assign anyone create a

3288
02:08:58,880 --> 02:08:59,920
cookie

3289
02:08:59,920 --> 02:09:02,320
we need to have another variable that's

3290
02:09:02,320 --> 02:09:04,639
called

3291
02:09:04,960 --> 02:09:07,840
authorize the authentication properties

3292
02:09:07,840 --> 02:09:10,119
and we're going to create that

3293
02:09:10,119 --> 02:09:11,840
authentication

3294
02:09:11,840 --> 02:09:13,920
properties you can see this right here

3295
02:09:13,920 --> 02:09:15,840
and then there's a whole bunch of things

3296
02:09:15,840 --> 02:09:18,960
you can configure here one thing that is

3297
02:09:18,960 --> 02:09:22,239
important to us is this is persistent

3298
02:09:22,239 --> 02:09:23,440
thing

3299
02:09:23,440 --> 02:09:24,560
we're gonna

3300
02:09:24,560 --> 02:09:27,040
make it persistent only when the user

3301
02:09:27,040 --> 02:09:29,520
selected check the check box so when the

3302
02:09:29,520 --> 02:09:31,440
remember me is true

3303
02:09:31,440 --> 02:09:32,960
right so

3304
02:09:32,960 --> 02:09:34,880
we'll have this

3305
02:09:34,880 --> 02:09:36,960
authentication property

3306
02:09:36,960 --> 02:09:38,719
and then we're going to pass it as the

3307
02:09:38,719 --> 02:09:40,159
third parameter you can see that the

3308
02:09:40,159 --> 02:09:41,599
third parameter here is the

3309
02:09:41,599 --> 02:09:43,360
authentication property

3310
02:09:43,360 --> 02:09:46,960
right so with this let's give it a try

3311
02:09:46,960 --> 02:09:49,520
let's check double check what is the

3312
02:09:49,520 --> 02:09:52,800
30 seconds okay so we have a 30 seconds

3313
02:09:52,800 --> 02:09:53,840
cookie

3314
02:09:53,840 --> 02:09:57,599
that is too short for our experiment

3315
02:09:57,599 --> 02:09:59,520
because we want to try to close the

3316
02:09:59,520 --> 02:10:01,119
browser and then come back and see that

3317
02:10:01,119 --> 02:10:02,960
the cookie still works right so let's

3318
02:10:02,960 --> 02:10:05,040
have a two minutes

3319
02:10:05,040 --> 02:10:08,239
uh two minutes cookie first

3320
02:10:08,239 --> 02:10:10,480
and then i'm gonna do ctrl i five all

3321
02:10:10,480 --> 02:10:13,119
right so we're gonna log in and this

3322
02:10:13,119 --> 02:10:15,599
time i'm going to check remember me and

3323
02:10:15,599 --> 02:10:17,840
if i click i'm logged in right now

3324
02:10:17,840 --> 02:10:20,079
and then i'm going to close the browser

3325
02:10:20,079 --> 02:10:22,560
and i'm going to open it up again all

3326
02:10:22,560 --> 02:10:24,560
right so the browser is open you can see

3327
02:10:24,560 --> 02:10:27,280
that we're still we're still here we

3328
02:10:27,280 --> 02:10:28,719
don't have to log in

3329
02:10:28,719 --> 02:10:31,520
right our cookie is still here

3330
02:10:31,520 --> 02:10:33,599
oh no this one this one

3331
02:10:33,599 --> 02:10:35,840
our cookie is still here that is a

3332
02:10:35,840 --> 02:10:38,719
persistent cookie now the persistent

3333
02:10:38,719 --> 02:10:41,119
cookie is still subject to the expiry

3334
02:10:41,119 --> 02:10:44,639
date and to test that let's have a

3335
02:10:44,639 --> 02:10:46,000
shorter

3336
02:10:46,000 --> 02:10:47,119
cookie

3337
02:10:47,119 --> 02:10:49,520
which will change back

3338
02:10:49,520 --> 02:10:51,760
to

3339
02:10:51,840 --> 02:10:54,400
30 seconds lifetime

3340
02:10:54,400 --> 02:10:57,360
and then we are going to test that

3341
02:10:57,360 --> 02:10:59,679
okay so let's log in again

3342
02:10:59,679 --> 02:11:01,119
we're going to log in

3343
02:11:01,119 --> 02:11:02,639
and then immediately i'm going to close

3344
02:11:02,639 --> 02:11:04,880
the browser

3345
02:11:04,880 --> 02:11:06,560
and i'm going to open up the browser

3346
02:11:06,560 --> 02:11:10,320
again so i did this within 30 seconds so

3347
02:11:10,320 --> 02:11:11,920
i'm still locking

3348
02:11:11,920 --> 02:11:14,159
right so let's wait for another 15

3349
02:11:14,159 --> 02:11:17,679
seconds okay now if i refresh my screen

3350
02:11:17,679 --> 02:11:20,239
my cookie has already expired when i

3351
02:11:20,239 --> 02:11:22,320
refresh my screen i expect that i'm

3352
02:11:22,320 --> 02:11:24,560
kicked out because my cookie is not

3353
02:11:24,560 --> 02:11:26,719
valid anymore so

3354
02:11:26,719 --> 02:11:28,560
and i refresh my

3355
02:11:28,560 --> 02:11:30,880
screen i see my login page and that's

3356
02:11:30,880 --> 02:11:32,960
exactly what's supposed to be so

3357
02:11:32,960 --> 02:11:34,639
hopefully this video is helpful to help

3358
02:11:34,639 --> 02:11:36,960
you understand the relationship between

3359
02:11:36,960 --> 02:11:39,040
the cookie lifetime and broader session

3360
02:11:39,040 --> 02:11:41,920
lifetime so if you have any questions

3361
02:11:41,920 --> 02:11:44,639
please feel free to ask me and if not

3362
02:11:44,639 --> 02:11:48,520
i'll see you in the next video

